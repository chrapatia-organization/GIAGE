/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 4.0.2
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

	#pragma warning(disable:4127 4316 4456 4701 4706)



#ifndef SWIGPYTHON
#define SWIGPYTHON
#endif

#define SWIG_PYTHON_DIRECTOR_NO_VTABLE


#ifdef __cplusplus
/* SwigValueWrapper is described in swig.swg */
template<typename T> class SwigValueWrapper {
  struct SwigMovePointer {
    T *ptr;
    SwigMovePointer(T *p) : ptr(p) { }
    ~SwigMovePointer() { delete ptr; }
    SwigMovePointer& operator=(SwigMovePointer& rhs) { T* oldptr = ptr; ptr = 0; delete oldptr; ptr = rhs.ptr; rhs.ptr = 0; return *this; }
  } pointer;
  SwigValueWrapper& operator=(const SwigValueWrapper<T>& rhs);
  SwigValueWrapper(const SwigValueWrapper<T>& rhs);
public:
  SwigValueWrapper() : pointer(0) { }
  SwigValueWrapper& operator=(const T& t) { SwigMovePointer tmp(new T(t)); pointer = tmp; return *this; }
  operator T&() const { return *pointer.ptr; }
  T *operator&() { return pointer.ptr; }
};

template <typename T> T SwigValueInit() {
  return T();
}
#endif

/* -----------------------------------------------------------------------------
 *  This section contains generic SWIG labels for method/variable
 *  declarations/attributes, and other compiler dependent labels.
 * ----------------------------------------------------------------------------- */

/* template workaround for compilers that cannot correctly implement the C++ standard */
#ifndef SWIGTEMPLATEDISAMBIGUATOR
# if defined(__SUNPRO_CC) && (__SUNPRO_CC <= 0x560)
#  define SWIGTEMPLATEDISAMBIGUATOR template
# elif defined(__HP_aCC)
/* Needed even with `aCC -AA' when `aCC -V' reports HP ANSI C++ B3910B A.03.55 */
/* If we find a maximum version that requires this, the test would be __HP_aCC <= 35500 for A.03.55 */
#  define SWIGTEMPLATEDISAMBIGUATOR template
# else
#  define SWIGTEMPLATEDISAMBIGUATOR
# endif
#endif

/* inline attribute */
#ifndef SWIGINLINE
# if defined(__cplusplus) || (defined(__GNUC__) && !defined(__STRICT_ANSI__))
#   define SWIGINLINE inline
# else
#   define SWIGINLINE
# endif
#endif

/* attribute recognised by some compilers to avoid 'unused' warnings */
#ifndef SWIGUNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define SWIGUNUSED __attribute__ ((__unused__))
#   else
#     define SWIGUNUSED
#   endif
# elif defined(__ICC)
#   define SWIGUNUSED __attribute__ ((__unused__))
# else
#   define SWIGUNUSED
# endif
#endif

#ifndef SWIG_MSC_UNSUPPRESS_4505
# if defined(_MSC_VER)
#   pragma warning(disable : 4505) /* unreferenced local function has been removed */
# endif
#endif

#ifndef SWIGUNUSEDPARM
# ifdef __cplusplus
#   define SWIGUNUSEDPARM(p)
# else
#   define SWIGUNUSEDPARM(p) p SWIGUNUSED
# endif
#endif

/* internal SWIG method */
#ifndef SWIGINTERN
# define SWIGINTERN static SWIGUNUSED
#endif

/* internal inline SWIG method */
#ifndef SWIGINTERNINLINE
# define SWIGINTERNINLINE SWIGINTERN SWIGINLINE
#endif

/* exporting methods */
#if defined(__GNUC__)
#  if (__GNUC__ >= 4) || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4)
#    ifndef GCC_HASCLASSVISIBILITY
#      define GCC_HASCLASSVISIBILITY
#    endif
#  endif
#endif

#ifndef SWIGEXPORT
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   if defined(STATIC_LINKED)
#     define SWIGEXPORT
#   else
#     define SWIGEXPORT __declspec(dllexport)
#   endif
# else
#   if defined(__GNUC__) && defined(GCC_HASCLASSVISIBILITY)
#     define SWIGEXPORT __attribute__ ((visibility("default")))
#   else
#     define SWIGEXPORT
#   endif
# endif
#endif

/* calling conventions for Windows */
#ifndef SWIGSTDCALL
# if defined(_WIN32) || defined(__WIN32__) || defined(__CYGWIN__)
#   define SWIGSTDCALL __stdcall
# else
#   define SWIGSTDCALL
# endif
#endif

/* Deal with Microsoft's attempt at deprecating C standard runtime functions */
#if !defined(SWIG_NO_CRT_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_CRT_SECURE_NO_DEPRECATE)
# define _CRT_SECURE_NO_DEPRECATE
#endif

/* Deal with Microsoft's attempt at deprecating methods in the standard C++ library */
#if !defined(SWIG_NO_SCL_SECURE_NO_DEPRECATE) && defined(_MSC_VER) && !defined(_SCL_SECURE_NO_DEPRECATE)
# define _SCL_SECURE_NO_DEPRECATE
#endif

/* Deal with Apple's deprecated 'AssertMacros.h' from Carbon-framework */
#if defined(__APPLE__) && !defined(__ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES)
# define __ASSERT_MACROS_DEFINE_VERSIONS_WITHOUT_UNDERSCORES 0
#endif

/* Intel's compiler complains if a variable which was never initialised is
 * cast to void, which is a common idiom which we use to indicate that we
 * are aware a variable isn't used.  So we just silence that warning.
 * See: https://github.com/swig/swig/issues/192 for more discussion.
 */
#ifdef __INTEL_COMPILER
# pragma warning disable 592
#endif


#if defined(__GNUC__) && defined(_WIN32) && !defined(SWIG_PYTHON_NO_HYPOT_WORKAROUND)
/* Workaround for '::hypot' has not been declared', see https://bugs.python.org/issue11566 */
# include <math.h>
#endif

#if defined(_DEBUG) && defined(SWIG_PYTHON_INTERPRETER_NO_DEBUG)
/* Use debug wrappers with the Python release dll */
# undef _DEBUG
# include <Python.h>
# define _DEBUG 1
#else
# include <Python.h>
#endif

/* -----------------------------------------------------------------------------
 * swigrun.swg
 *
 * This file contains generic C API SWIG runtime support for pointer
 * type checking.
 * ----------------------------------------------------------------------------- */

/* This should only be incremented when either the layout of swig_type_info changes,
   or for whatever reason, the runtime changes incompatibly */
#define SWIG_RUNTIME_VERSION "4"

/* define SWIG_TYPE_TABLE_NAME as "SWIG_TYPE_TABLE" */
#ifdef SWIG_TYPE_TABLE
# define SWIG_QUOTE_STRING(x) #x
# define SWIG_EXPAND_AND_QUOTE_STRING(x) SWIG_QUOTE_STRING(x)
# define SWIG_TYPE_TABLE_NAME SWIG_EXPAND_AND_QUOTE_STRING(SWIG_TYPE_TABLE)
#else
# define SWIG_TYPE_TABLE_NAME
#endif

/*
  You can use the SWIGRUNTIME and SWIGRUNTIMEINLINE macros for
  creating a static or dynamic library from the SWIG runtime code.
  In 99.9% of the cases, SWIG just needs to declare them as 'static'.

  But only do this if strictly necessary, ie, if you have problems
  with your compiler or suchlike.
*/

#ifndef SWIGRUNTIME
# define SWIGRUNTIME SWIGINTERN
#endif

#ifndef SWIGRUNTIMEINLINE
# define SWIGRUNTIMEINLINE SWIGRUNTIME SWIGINLINE
#endif

/*  Generic buffer size */
#ifndef SWIG_BUFFER_SIZE
# define SWIG_BUFFER_SIZE 1024
#endif

/* Flags for pointer conversions */
#define SWIG_POINTER_DISOWN        0x1
#define SWIG_CAST_NEW_MEMORY       0x2
#define SWIG_POINTER_NO_NULL       0x4

/* Flags for new pointer objects */
#define SWIG_POINTER_OWN           0x1


/*
   Flags/methods for returning states.

   The SWIG conversion methods, as ConvertPtr, return an integer
   that tells if the conversion was successful or not. And if not,
   an error code can be returned (see swigerrors.swg for the codes).

   Use the following macros/flags to set or process the returning
   states.

   In old versions of SWIG, code such as the following was usually written:

     if (SWIG_ConvertPtr(obj,vptr,ty.flags) != -1) {
       // success code
     } else {
       //fail code
     }

   Now you can be more explicit:

    int res = SWIG_ConvertPtr(obj,vptr,ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
    } else {
      // fail code
    }

   which is the same really, but now you can also do

    Type *ptr;
    int res = SWIG_ConvertPtr(obj,(void **)(&ptr),ty.flags);
    if (SWIG_IsOK(res)) {
      // success code
      if (SWIG_IsNewObj(res) {
        ...
	delete *ptr;
      } else {
        ...
      }
    } else {
      // fail code
    }

   I.e., now SWIG_ConvertPtr can return new objects and you can
   identify the case and take care of the deallocation. Of course that
   also requires SWIG_ConvertPtr to return new result values, such as

      int SWIG_ConvertPtr(obj, ptr,...) {
        if (<obj is ok>) {
          if (<need new object>) {
            *ptr = <ptr to new allocated object>;
            return SWIG_NEWOBJ;
          } else {
            *ptr = <ptr to old object>;
            return SWIG_OLDOBJ;
          }
        } else {
          return SWIG_BADOBJ;
        }
      }

   Of course, returning the plain '0(success)/-1(fail)' still works, but you can be
   more explicit by returning SWIG_BADOBJ, SWIG_ERROR or any of the
   SWIG errors code.

   Finally, if the SWIG_CASTRANK_MODE is enabled, the result code
   allows to return the 'cast rank', for example, if you have this

       int food(double)
       int fooi(int);

   and you call

      food(1)   // cast rank '1'  (1 -> 1.0)
      fooi(1)   // cast rank '0'

   just use the SWIG_AddCast()/SWIG_CheckState()
*/

#define SWIG_OK                    (0)
#define SWIG_ERROR                 (-1)
#define SWIG_IsOK(r)               (r >= 0)
#define SWIG_ArgError(r)           ((r != SWIG_ERROR) ? r : SWIG_TypeError)

/* The CastRankLimit says how many bits are used for the cast rank */
#define SWIG_CASTRANKLIMIT         (1 << 8)
/* The NewMask denotes the object was created (using new/malloc) */
#define SWIG_NEWOBJMASK            (SWIG_CASTRANKLIMIT  << 1)
/* The TmpMask is for in/out typemaps that use temporal objects */
#define SWIG_TMPOBJMASK            (SWIG_NEWOBJMASK << 1)
/* Simple returning values */
#define SWIG_BADOBJ                (SWIG_ERROR)
#define SWIG_OLDOBJ                (SWIG_OK)
#define SWIG_NEWOBJ                (SWIG_OK | SWIG_NEWOBJMASK)
#define SWIG_TMPOBJ                (SWIG_OK | SWIG_TMPOBJMASK)
/* Check, add and del mask methods */
#define SWIG_AddNewMask(r)         (SWIG_IsOK(r) ? (r | SWIG_NEWOBJMASK) : r)
#define SWIG_DelNewMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_NEWOBJMASK) : r)
#define SWIG_IsNewObj(r)           (SWIG_IsOK(r) && (r & SWIG_NEWOBJMASK))
#define SWIG_AddTmpMask(r)         (SWIG_IsOK(r) ? (r | SWIG_TMPOBJMASK) : r)
#define SWIG_DelTmpMask(r)         (SWIG_IsOK(r) ? (r & ~SWIG_TMPOBJMASK) : r)
#define SWIG_IsTmpObj(r)           (SWIG_IsOK(r) && (r & SWIG_TMPOBJMASK))

/* Cast-Rank Mode */
#if defined(SWIG_CASTRANK_MODE)
#  ifndef SWIG_TypeRank
#    define SWIG_TypeRank             unsigned long
#  endif
#  ifndef SWIG_MAXCASTRANK            /* Default cast allowed */
#    define SWIG_MAXCASTRANK          (2)
#  endif
#  define SWIG_CASTRANKMASK          ((SWIG_CASTRANKLIMIT) -1)
#  define SWIG_CastRank(r)           (r & SWIG_CASTRANKMASK)
SWIGINTERNINLINE int SWIG_AddCast(int r) {
  return SWIG_IsOK(r) ? ((SWIG_CastRank(r) < SWIG_MAXCASTRANK) ? (r + 1) : SWIG_ERROR) : r;
}
SWIGINTERNINLINE int SWIG_CheckState(int r) {
  return SWIG_IsOK(r) ? SWIG_CastRank(r) + 1 : 0;
}
#else /* no cast-rank mode */
#  define SWIG_AddCast(r) (r)
#  define SWIG_CheckState(r) (SWIG_IsOK(r) ? 1 : 0)
#endif


#include <string.h>

#ifdef __cplusplus
extern "C" {
#endif

typedef void *(*swig_converter_func)(void *, int *);
typedef struct swig_type_info *(*swig_dycast_func)(void **);

/* Structure to store information on one type */
typedef struct swig_type_info {
  const char             *name;			/* mangled name of this type */
  const char             *str;			/* human readable name of this type */
  swig_dycast_func        dcast;		/* dynamic cast function down a hierarchy */
  struct swig_cast_info  *cast;			/* linked list of types that can cast into this type */
  void                   *clientdata;		/* language specific type data */
  int                    owndata;		/* flag if the structure owns the clientdata */
} swig_type_info;

/* Structure to store a type and conversion function used for casting */
typedef struct swig_cast_info {
  swig_type_info         *type;			/* pointer to type that is equivalent to this type */
  swig_converter_func     converter;		/* function to cast the void pointers */
  struct swig_cast_info  *next;			/* pointer to next cast in linked list */
  struct swig_cast_info  *prev;			/* pointer to the previous cast */
} swig_cast_info;

/* Structure used to store module information
 * Each module generates one structure like this, and the runtime collects
 * all of these structures and stores them in a circularly linked list.*/
typedef struct swig_module_info {
  swig_type_info         **types;		/* Array of pointers to swig_type_info structures that are in this module */
  size_t                 size;		        /* Number of types in this module */
  struct swig_module_info *next;		/* Pointer to next element in circularly linked list */
  swig_type_info         **type_initial;	/* Array of initially generated type structures */
  swig_cast_info         **cast_initial;	/* Array of initially generated casting structures */
  void                    *clientdata;		/* Language specific module data */
} swig_module_info;

/*
  Compare two type names skipping the space characters, therefore
  "char*" == "char *" and "Class<int>" == "Class<int >", etc.

  Return 0 when the two name types are equivalent, as in
  strncmp, but skipping ' '.
*/
SWIGRUNTIME int
SWIG_TypeNameComp(const char *f1, const char *l1,
		  const char *f2, const char *l2) {
  for (;(f1 != l1) && (f2 != l2); ++f1, ++f2) {
    while ((*f1 == ' ') && (f1 != l1)) ++f1;
    while ((*f2 == ' ') && (f2 != l2)) ++f2;
    if (*f1 != *f2) return (*f1 > *f2) ? 1 : -1;
  }
  return (int)((l1 - f1) - (l2 - f2));
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if equal, -1 if nb < tb, 1 if nb > tb
*/
SWIGRUNTIME int
SWIG_TypeCmp(const char *nb, const char *tb) {
  int equiv = 1;
  const char* te = tb + strlen(tb);
  const char* ne = nb;
  while (equiv != 0 && *ne) {
    for (nb = ne; *ne; ++ne) {
      if (*ne == '|') break;
    }
    equiv = SWIG_TypeNameComp(nb, ne, tb, te);
    if (*ne) ++ne;
  }
  return equiv;
}

/*
  Check type equivalence in a name list like <name1>|<name2>|...
  Return 0 if not equal, 1 if equal
*/
SWIGRUNTIME int
SWIG_TypeEquiv(const char *nb, const char *tb) {
  return SWIG_TypeCmp(nb, tb) == 0 ? 1 : 0;
}

/*
  Check the typename
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheck(const char *c, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (strcmp(iter->type->name, c) == 0) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Identical to SWIG_TypeCheck, except strcmp is replaced with a pointer comparison
*/
SWIGRUNTIME swig_cast_info *
SWIG_TypeCheckStruct(swig_type_info *from, swig_type_info *ty) {
  if (ty) {
    swig_cast_info *iter = ty->cast;
    while (iter) {
      if (iter->type == from) {
        if (iter == ty->cast)
          return iter;
        /* Move iter to the top of the linked list */
        iter->prev->next = iter->next;
        if (iter->next)
          iter->next->prev = iter->prev;
        iter->next = ty->cast;
        iter->prev = 0;
        if (ty->cast) ty->cast->prev = iter;
        ty->cast = iter;
        return iter;
      }
      iter = iter->next;
    }
  }
  return 0;
}

/*
  Cast a pointer up an inheritance hierarchy
*/
SWIGRUNTIMEINLINE void *
SWIG_TypeCast(swig_cast_info *ty, void *ptr, int *newmemory) {
  return ((!ty) || (!ty->converter)) ? ptr : (*ty->converter)(ptr, newmemory);
}

/*
   Dynamic pointer casting. Down an inheritance hierarchy
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeDynamicCast(swig_type_info *ty, void **ptr) {
  swig_type_info *lastty = ty;
  if (!ty || !ty->dcast) return ty;
  while (ty && (ty->dcast)) {
    ty = (*ty->dcast)(ptr);
    if (ty) lastty = ty;
  }
  return lastty;
}

/*
  Return the name associated with this type
*/
SWIGRUNTIMEINLINE const char *
SWIG_TypeName(const swig_type_info *ty) {
  return ty->name;
}

/*
  Return the pretty name associated with this type,
  that is an unmangled type name in a form presentable to the user.
*/
SWIGRUNTIME const char *
SWIG_TypePrettyName(const swig_type_info *type) {
  /* The "str" field contains the equivalent pretty names of the
     type, separated by vertical-bar characters.  We choose
     to print the last name, as it is often (?) the most
     specific. */
  if (!type) return NULL;
  if (type->str != NULL) {
    const char *last_name = type->str;
    const char *s;
    for (s = type->str; *s; s++)
      if (*s == '|') last_name = s+1;
    return last_name;
  }
  else
    return type->name;
}

/*
   Set the clientdata field for a type
*/
SWIGRUNTIME void
SWIG_TypeClientData(swig_type_info *ti, void *clientdata) {
  swig_cast_info *cast = ti->cast;
  /* if (ti->clientdata == clientdata) return; */
  ti->clientdata = clientdata;

  while (cast) {
    if (!cast->converter) {
      swig_type_info *tc = cast->type;
      if (!tc->clientdata) {
	SWIG_TypeClientData(tc, clientdata);
      }
    }
    cast = cast->next;
  }
}
SWIGRUNTIME void
SWIG_TypeNewClientData(swig_type_info *ti, void *clientdata) {
  SWIG_TypeClientData(ti, clientdata);
  ti->owndata = 1;
}

/*
  Search for a swig_type_info structure only by mangled name
  Search is a O(log #types)

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_MangledTypeQueryModule(swig_module_info *start,
                            swig_module_info *end,
		            const char *name) {
  swig_module_info *iter = start;
  do {
    if (iter->size) {
      size_t l = 0;
      size_t r = iter->size - 1;
      do {
	/* since l+r >= 0, we can (>> 1) instead (/ 2) */
	size_t i = (l + r) >> 1;
	const char *iname = iter->types[i]->name;
	if (iname) {
	  int compare = strcmp(name, iname);
	  if (compare == 0) {
	    return iter->types[i];
	  } else if (compare < 0) {
	    if (i) {
	      r = i - 1;
	    } else {
	      break;
	    }
	  } else if (compare > 0) {
	    l = i + 1;
	  }
	} else {
	  break; /* should never happen */
	}
      } while (l <= r);
    }
    iter = iter->next;
  } while (iter != end);
  return 0;
}

/*
  Search for a swig_type_info structure for either a mangled name or a human readable name.
  It first searches the mangled names of the types, which is a O(log #types)
  If a type is not found it then searches the human readable names, which is O(#types).

  We start searching at module start, and finish searching when start == end.
  Note: if start == end at the beginning of the function, we go all the way around
  the circular list.
*/
SWIGRUNTIME swig_type_info *
SWIG_TypeQueryModule(swig_module_info *start,
                     swig_module_info *end,
		     const char *name) {
  /* STEP 1: Search the name field using binary search */
  swig_type_info *ret = SWIG_MangledTypeQueryModule(start, end, name);
  if (ret) {
    return ret;
  } else {
    /* STEP 2: If the type hasn't been found, do a complete search
       of the str field (the human readable name) */
    swig_module_info *iter = start;
    do {
      size_t i = 0;
      for (; i < iter->size; ++i) {
	if (iter->types[i]->str && (SWIG_TypeEquiv(iter->types[i]->str, name)))
	  return iter->types[i];
      }
      iter = iter->next;
    } while (iter != end);
  }

  /* neither found a match */
  return 0;
}

/*
   Pack binary data into a string
*/
SWIGRUNTIME char *
SWIG_PackData(char *c, void *ptr, size_t sz) {
  static const char hex[17] = "0123456789abcdef";
  const unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu =  u + sz;
  for (; u != eu; ++u) {
    unsigned char uu = *u;
    *(c++) = hex[(uu & 0xf0) >> 4];
    *(c++) = hex[uu & 0xf];
  }
  return c;
}

/*
   Unpack binary data from a string
*/
SWIGRUNTIME const char *
SWIG_UnpackData(const char *c, void *ptr, size_t sz) {
  unsigned char *u = (unsigned char *) ptr;
  const unsigned char *eu = u + sz;
  for (; u != eu; ++u) {
    char d = *(c++);
    unsigned char uu;
    if ((d >= '0') && (d <= '9'))
      uu = (unsigned char)((d - '0') << 4);
    else if ((d >= 'a') && (d <= 'f'))
      uu = (unsigned char)((d - ('a'-10)) << 4);
    else
      return (char *) 0;
    d = *(c++);
    if ((d >= '0') && (d <= '9'))
      uu |= (unsigned char)(d - '0');
    else if ((d >= 'a') && (d <= 'f'))
      uu |= (unsigned char)(d - ('a'-10));
    else
      return (char *) 0;
    *u = uu;
  }
  return c;
}

/*
   Pack 'void *' into a string buffer.
*/
SWIGRUNTIME char *
SWIG_PackVoidPtr(char *buff, void *ptr, const char *name, size_t bsz) {
  char *r = buff;
  if ((2*sizeof(void *) + 2) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,&ptr,sizeof(void *));
  if (strlen(name) + 1 > (bsz - (r - buff))) return 0;
  strcpy(r,name);
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackVoidPtr(const char *c, void **ptr, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      *ptr = (void *) 0;
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sizeof(void *));
}

SWIGRUNTIME char *
SWIG_PackDataName(char *buff, void *ptr, size_t sz, const char *name, size_t bsz) {
  char *r = buff;
  size_t lname = (name ? strlen(name) : 0);
  if ((2*sz + 2 + lname) > bsz) return 0;
  *(r++) = '_';
  r = SWIG_PackData(r,ptr,sz);
  if (lname) {
    strncpy(r,name,lname+1);
  } else {
    *r = 0;
  }
  return buff;
}

SWIGRUNTIME const char *
SWIG_UnpackDataName(const char *c, void *ptr, size_t sz, const char *name) {
  if (*c != '_') {
    if (strcmp(c,"NULL") == 0) {
      memset(ptr,0,sz);
      return name;
    } else {
      return 0;
    }
  }
  return SWIG_UnpackData(++c,ptr,sz);
}

#ifdef __cplusplus
}
#endif

/*  Errors in SWIG */
#define  SWIG_UnknownError    	   -1
#define  SWIG_IOError        	   -2
#define  SWIG_RuntimeError   	   -3
#define  SWIG_IndexError     	   -4
#define  SWIG_TypeError      	   -5
#define  SWIG_DivisionByZero 	   -6
#define  SWIG_OverflowError  	   -7
#define  SWIG_SyntaxError    	   -8
#define  SWIG_ValueError     	   -9
#define  SWIG_SystemError    	   -10
#define  SWIG_AttributeError 	   -11
#define  SWIG_MemoryError    	   -12
#define  SWIG_NullReferenceError   -13



/* Compatibility macros for Python 3 */
#if PY_VERSION_HEX >= 0x03000000

#define PyClass_Check(obj) PyObject_IsInstance(obj, (PyObject *)&PyType_Type)
#define PyInt_Check(x) PyLong_Check(x)
#define PyInt_AsLong(x) PyLong_AsLong(x)
#define PyInt_FromLong(x) PyLong_FromLong(x)
#define PyInt_FromSize_t(x) PyLong_FromSize_t(x)
#define PyString_Check(name) PyBytes_Check(name)
#define PyString_FromString(x) PyUnicode_FromString(x)
#define PyString_Format(fmt, args)  PyUnicode_Format(fmt, args)
#define PyString_AsString(str) PyBytes_AsString(str)
#define PyString_Size(str) PyBytes_Size(str)	
#define PyString_InternFromString(key) PyUnicode_InternFromString(key)
#define Py_TPFLAGS_HAVE_CLASS Py_TPFLAGS_BASETYPE
#define PyString_AS_STRING(x) PyUnicode_AS_STRING(x)
#define _PyLong_FromSsize_t(x) PyLong_FromSsize_t(x)

#endif

#ifndef Py_TYPE
#  define Py_TYPE(op) ((op)->ob_type)
#endif

/* SWIG APIs for compatibility of both Python 2 & 3 */

#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_Python_str_FromFormat PyUnicode_FromFormat
#else
#  define SWIG_Python_str_FromFormat PyString_FromFormat
#endif


/* Warning: This function will allocate a new string in Python 3,
 * so please call SWIG_Python_str_DelForPy3(x) to free the space.
 */
SWIGINTERN char*
SWIG_Python_str_AsChar(PyObject *str)
{
#if PY_VERSION_HEX >= 0x03030000
  return (char *)PyUnicode_AsUTF8(str);
#elif PY_VERSION_HEX >= 0x03000000
  char *newstr = 0;
  str = PyUnicode_AsUTF8String(str);
  if (str) {
    char *cstr;
    Py_ssize_t len;
    if (PyBytes_AsStringAndSize(str, &cstr, &len) != -1) {
      newstr = (char *) malloc(len+1);
      if (newstr)
        memcpy(newstr, cstr, len+1);
    }
    Py_XDECREF(str);
  }
  return newstr;
#else
  return PyString_AsString(str);
#endif
}

#if PY_VERSION_HEX >= 0x03030000 || PY_VERSION_HEX < 0x03000000
#  define SWIG_Python_str_DelForPy3(x)
#else
#  define SWIG_Python_str_DelForPy3(x) free( (void*) (x) )
#endif


SWIGINTERN PyObject*
SWIG_Python_str_FromChar(const char *c)
{
#if PY_VERSION_HEX >= 0x03000000
  return PyUnicode_FromString(c); 
#else
  return PyString_FromString(c);
#endif
}

#ifndef PyObject_DEL
# define PyObject_DEL PyObject_Del
#endif

// SWIGPY_USE_CAPSULE is no longer used within SWIG itself, but some user
// interface files check for it.
# define SWIGPY_USE_CAPSULE
# define SWIGPY_CAPSULE_NAME ("swig_runtime_data" SWIG_RUNTIME_VERSION ".type_pointer_capsule" SWIG_TYPE_TABLE_NAME)

#if PY_VERSION_HEX < 0x03020000
#define PyDescr_TYPE(x) (((PyDescrObject *)(x))->d_type)
#define PyDescr_NAME(x) (((PyDescrObject *)(x))->d_name)
#define Py_hash_t long
#endif

/* -----------------------------------------------------------------------------
 * error manipulation
 * ----------------------------------------------------------------------------- */

SWIGRUNTIME PyObject*
SWIG_Python_ErrorType(int code) {
  PyObject* type = 0;
  switch(code) {
  case SWIG_MemoryError:
    type = PyExc_MemoryError;
    break;
  case SWIG_IOError:
    type = PyExc_IOError;
    break;
  case SWIG_RuntimeError:
    type = PyExc_RuntimeError;
    break;
  case SWIG_IndexError:
    type = PyExc_IndexError;
    break;
  case SWIG_TypeError:
    type = PyExc_TypeError;
    break;
  case SWIG_DivisionByZero:
    type = PyExc_ZeroDivisionError;
    break;
  case SWIG_OverflowError:
    type = PyExc_OverflowError;
    break;
  case SWIG_SyntaxError:
    type = PyExc_SyntaxError;
    break;
  case SWIG_ValueError:
    type = PyExc_ValueError;
    break;
  case SWIG_SystemError:
    type = PyExc_SystemError;
    break;
  case SWIG_AttributeError:
    type = PyExc_AttributeError;
    break;
  default:
    type = PyExc_RuntimeError;
  }
  return type;
}


SWIGRUNTIME void
SWIG_Python_AddErrorMsg(const char* mesg)
{
  PyObject *type = 0;
  PyObject *value = 0;
  PyObject *traceback = 0;

  if (PyErr_Occurred())
    PyErr_Fetch(&type, &value, &traceback);
  if (value) {
    PyObject *old_str = PyObject_Str(value);
    const char *tmp = SWIG_Python_str_AsChar(old_str);
    PyErr_Clear();
    Py_XINCREF(type);
    if (tmp)
      PyErr_Format(type, "%s %s", tmp, mesg);
    else
      PyErr_Format(type, "%s", mesg);
    SWIG_Python_str_DelForPy3(tmp);
    Py_DECREF(old_str);
    Py_DECREF(value);
  } else {
    PyErr_SetString(PyExc_RuntimeError, mesg);
  }
}

SWIGRUNTIME int
SWIG_Python_TypeErrorOccurred(PyObject *obj)
{
  PyObject *error;
  if (obj)
    return 0;
  error = PyErr_Occurred();
  return error && PyErr_GivenExceptionMatches(error, PyExc_TypeError);
}

SWIGRUNTIME void
SWIG_Python_RaiseOrModifyTypeError(const char *message)
{
  if (SWIG_Python_TypeErrorOccurred(NULL)) {
    /* Use existing TypeError to preserve stacktrace and enhance with given message */
    PyObject *newvalue;
    PyObject *type = NULL, *value = NULL, *traceback = NULL;
    PyErr_Fetch(&type, &value, &traceback);
#if PY_VERSION_HEX >= 0x03000000
    newvalue = PyUnicode_FromFormat("%S\nAdditional information:\n%s", value, message);
#else
    newvalue = PyString_FromFormat("%s\nAdditional information:\n%s", PyString_AsString(value), message);
#endif
    Py_XDECREF(value);
    PyErr_Restore(type, newvalue, traceback);
  } else {
    /* Raise TypeError using given message */
    PyErr_SetString(PyExc_TypeError, message);
  }
}

#if defined(SWIG_PYTHON_NO_THREADS)
#  if defined(SWIG_PYTHON_THREADS)
#    undef SWIG_PYTHON_THREADS
#  endif
#endif
#if defined(SWIG_PYTHON_THREADS) /* Threading support is enabled */
#  if !defined(SWIG_PYTHON_USE_GIL) && !defined(SWIG_PYTHON_NO_USE_GIL)
#    define SWIG_PYTHON_USE_GIL
#  endif
#  if defined(SWIG_PYTHON_USE_GIL) /* Use PyGILState threads calls */
#    ifndef SWIG_PYTHON_INITIALIZE_THREADS
#     define SWIG_PYTHON_INITIALIZE_THREADS  PyEval_InitThreads() 
#    endif
#    ifdef __cplusplus /* C++ code */
       class SWIG_Python_Thread_Block {
         bool status;
         PyGILState_STATE state;
       public:
         void end() { if (status) { PyGILState_Release(state); status = false;} }
         SWIG_Python_Thread_Block() : status(true), state(PyGILState_Ensure()) {}
         ~SWIG_Python_Thread_Block() { end(); }
       };
       class SWIG_Python_Thread_Allow {
         bool status;
         PyThreadState *save;
       public:
         void end() { if (status) { PyEval_RestoreThread(save); status = false; }}
         SWIG_Python_Thread_Allow() : status(true), save(PyEval_SaveThread()) {}
         ~SWIG_Python_Thread_Allow() { end(); }
       };
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   SWIG_Python_Thread_Block _swig_thread_block
#      define SWIG_PYTHON_THREAD_END_BLOCK     _swig_thread_block.end()
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   SWIG_Python_Thread_Allow _swig_thread_allow
#      define SWIG_PYTHON_THREAD_END_ALLOW     _swig_thread_allow.end()
#    else /* C code */
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK   PyGILState_STATE _swig_thread_block = PyGILState_Ensure()
#      define SWIG_PYTHON_THREAD_END_BLOCK     PyGILState_Release(_swig_thread_block)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW   PyThreadState *_swig_thread_allow = PyEval_SaveThread()
#      define SWIG_PYTHON_THREAD_END_ALLOW     PyEval_RestoreThread(_swig_thread_allow)
#    endif
#  else /* Old thread way, not implemented, user must provide it */
#    if !defined(SWIG_PYTHON_INITIALIZE_THREADS)
#      define SWIG_PYTHON_INITIALIZE_THREADS
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_BLOCK)
#      define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_BLOCK)
#      define SWIG_PYTHON_THREAD_END_BLOCK
#    endif
#    if !defined(SWIG_PYTHON_THREAD_BEGIN_ALLOW)
#      define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#    endif
#    if !defined(SWIG_PYTHON_THREAD_END_ALLOW)
#      define SWIG_PYTHON_THREAD_END_ALLOW
#    endif
#  endif
#else /* No thread support */
#  define SWIG_PYTHON_INITIALIZE_THREADS
#  define SWIG_PYTHON_THREAD_BEGIN_BLOCK
#  define SWIG_PYTHON_THREAD_END_BLOCK
#  define SWIG_PYTHON_THREAD_BEGIN_ALLOW
#  define SWIG_PYTHON_THREAD_END_ALLOW
#endif

/* -----------------------------------------------------------------------------
 * Python API portion that goes into the runtime
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#endif

/* -----------------------------------------------------------------------------
 * Constant declarations
 * ----------------------------------------------------------------------------- */

/* Constant Types */
#define SWIG_PY_POINTER 4
#define SWIG_PY_BINARY  5

/* Constant information structure */
typedef struct swig_const_info {
  int type;
  const char *name;
  long lvalue;
  double dvalue;
  void   *pvalue;
  swig_type_info **ptype;
} swig_const_info;

#ifdef __cplusplus
}
#endif


/* -----------------------------------------------------------------------------
 * pyrun.swg
 *
 * This file contains the runtime support for Python modules
 * and includes code for managing global variables and pointer
 * type checking.
 *
 * ----------------------------------------------------------------------------- */

#if PY_VERSION_HEX < 0x02070000 /* 2.7.0 */
# error "This version of SWIG only supports Python >= 2.7"
#endif

#if PY_VERSION_HEX >= 0x03000000 && PY_VERSION_HEX < 0x03020000
# error "This version of SWIG only supports Python 3 >= 3.2"
#endif

/* Common SWIG API */

/* for raw pointers */
#define SWIG_Python_ConvertPtr(obj, pptr, type, flags)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, 0)
#define SWIG_ConvertPtr(obj, pptr, type, flags)         SWIG_Python_ConvertPtr(obj, pptr, type, flags)
#define SWIG_ConvertPtrAndOwn(obj,pptr,type,flags,own)  SWIG_Python_ConvertPtrAndOwn(obj, pptr, type, flags, own)

#ifdef SWIGPYTHON_BUILTIN
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(self, ptr, type, flags)
#else
#define SWIG_NewPointerObj(ptr, type, flags)            SWIG_Python_NewPointerObj(NULL, ptr, type, flags)
#endif

#define SWIG_InternalNewPointerObj(ptr, type, flags)	SWIG_Python_NewPointerObj(NULL, ptr, type, flags)

#define SWIG_CheckImplicit(ty)                          SWIG_Python_CheckImplicit(ty) 
#define SWIG_AcquirePtr(ptr, src)                       SWIG_Python_AcquirePtr(ptr, src)
#define swig_owntype                                    int

/* for raw packed data */
#define SWIG_ConvertPacked(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewPackedObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)

/* for class or struct pointers */
#define SWIG_ConvertInstance(obj, pptr, type, flags)    SWIG_ConvertPtr(obj, pptr, type, flags)
#define SWIG_NewInstanceObj(ptr, type, flags)           SWIG_NewPointerObj(ptr, type, flags)

/* for C or C++ function pointers */
#define SWIG_ConvertFunctionPtr(obj, pptr, type)        SWIG_Python_ConvertFunctionPtr(obj, pptr, type)
#define SWIG_NewFunctionPtrObj(ptr, type)               SWIG_Python_NewPointerObj(NULL, ptr, type, 0)

/* for C++ member pointers, ie, member methods */
#define SWIG_ConvertMember(obj, ptr, sz, ty)            SWIG_Python_ConvertPacked(obj, ptr, sz, ty)
#define SWIG_NewMemberObj(ptr, sz, type)                SWIG_Python_NewPackedObj(ptr, sz, type)


/* Runtime API */

#define SWIG_GetModule(clientdata)                      SWIG_Python_GetModule(clientdata)
#define SWIG_SetModule(clientdata, pointer)             SWIG_Python_SetModule(pointer)
#define SWIG_NewClientData(obj)                         SwigPyClientData_New(obj)

#define SWIG_SetErrorObj                                SWIG_Python_SetErrorObj                            
#define SWIG_SetErrorMsg                        	SWIG_Python_SetErrorMsg				   
#define SWIG_ErrorType(code)                    	SWIG_Python_ErrorType(code)                        
#define SWIG_Error(code, msg)            		SWIG_Python_SetErrorMsg(SWIG_ErrorType(code), msg) 
#define SWIG_fail                        		goto fail					   


/* Runtime API implementation */

/* Error manipulation */

SWIGINTERN void 
SWIG_Python_SetErrorObj(PyObject *errtype, PyObject *obj) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK; 
  PyErr_SetObject(errtype, obj);
  Py_DECREF(obj);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

SWIGINTERN void 
SWIG_Python_SetErrorMsg(PyObject *errtype, const char *msg) {
  SWIG_PYTHON_THREAD_BEGIN_BLOCK;
  PyErr_SetString(errtype, msg);
  SWIG_PYTHON_THREAD_END_BLOCK;
}

#define SWIG_Python_Raise(obj, type, desc)  SWIG_Python_SetErrorObj(SWIG_Python_ExceptionType(desc), obj)

/* Set a constant value */

#if defined(SWIGPYTHON_BUILTIN)

SWIGINTERN void
SwigPyBuiltin_AddPublicSymbol(PyObject *seq, const char *key) {
  PyObject *s = PyString_InternFromString(key);
  PyList_Append(seq, s);
  Py_DECREF(s);
}

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, PyObject *public_interface, const char *name, PyObject *obj) {   
  PyDict_SetItemString(d, name, obj);
  Py_DECREF(obj);
  if (public_interface)
    SwigPyBuiltin_AddPublicSymbol(public_interface, name);
}

#else

SWIGINTERN void
SWIG_Python_SetConstant(PyObject *d, const char *name, PyObject *obj) {   
  PyDict_SetItemString(d, name, obj);
  Py_DECREF(obj);                            
}

#endif

/* Append a value to the result obj */

SWIGINTERN PyObject*
SWIG_Python_AppendOutput(PyObject* result, PyObject* obj) {
  if (!result) {
    result = obj;
  } else if (result == Py_None) {
    Py_DECREF(result);
    result = obj;
  } else {
    if (!PyList_Check(result)) {
      PyObject *o2 = result;
      result = PyList_New(1);
      PyList_SetItem(result, 0, o2);
    }
    PyList_Append(result,obj);
    Py_DECREF(obj);
  }
  return result;
}

/* Unpack the argument tuple */

SWIGINTERN Py_ssize_t
SWIG_Python_UnpackTuple(PyObject *args, const char *name, Py_ssize_t min, Py_ssize_t max, PyObject **objs)
{
  if (!args) {
    if (!min && !max) {
      return 1;
    } else {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got none", 
		   name, (min == max ? "" : "at least "), (int)min);
      return 0;
    }
  }  
  if (!PyTuple_Check(args)) {
    if (min <= 1 && max >= 1) {
      Py_ssize_t i;
      objs[0] = args;
      for (i = 1; i < max; ++i) {
	objs[i] = 0;
      }
      return 2;
    }
    PyErr_SetString(PyExc_SystemError, "UnpackTuple() argument list is not a tuple");
    return 0;
  } else {
    Py_ssize_t l = PyTuple_GET_SIZE(args);
    if (l < min) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at least "), (int)min, (int)l);
      return 0;
    } else if (l > max) {
      PyErr_Format(PyExc_TypeError, "%s expected %s%d arguments, got %d", 
		   name, (min == max ? "" : "at most "), (int)max, (int)l);
      return 0;
    } else {
      Py_ssize_t i;
      for (i = 0; i < l; ++i) {
	objs[i] = PyTuple_GET_ITEM(args, i);
      }
      for (; l < max; ++l) {
	objs[l] = 0;
      }
      return i + 1;
    }    
  }
}

SWIGINTERN int
SWIG_Python_CheckNoKeywords(PyObject *kwargs, const char *name) {
  int no_kwargs = 1;
  if (kwargs) {
    assert(PyDict_Check(kwargs));
    if (PyDict_Size(kwargs) > 0) {
      PyErr_Format(PyExc_TypeError, "%s() does not take keyword arguments", name);
      no_kwargs = 0;
    }
  }
  return no_kwargs;
}

/* A functor is a function object with one single object argument */
#define SWIG_Python_CallFunctor(functor, obj)	        PyObject_CallFunctionObjArgs(functor, obj, NULL);

/*
  Helper for static pointer initialization for both C and C++ code, for example
  static PyObject *SWIG_STATIC_POINTER(MyVar) = NewSomething(...);
*/
#ifdef __cplusplus
#define SWIG_STATIC_POINTER(var)  var
#else
#define SWIG_STATIC_POINTER(var)  var = 0; if (!var) var
#endif

/* -----------------------------------------------------------------------------
 * Pointer declarations
 * ----------------------------------------------------------------------------- */

/* Flags for new pointer objects */
#define SWIG_POINTER_NOSHADOW       (SWIG_POINTER_OWN      << 1)
#define SWIG_POINTER_NEW            (SWIG_POINTER_NOSHADOW | SWIG_POINTER_OWN)

#define SWIG_POINTER_IMPLICIT_CONV  (SWIG_POINTER_DISOWN   << 1)

#define SWIG_BUILTIN_TP_INIT	    (SWIG_POINTER_OWN << 2)
#define SWIG_BUILTIN_INIT	    (SWIG_BUILTIN_TP_INIT | SWIG_POINTER_OWN)

#ifdef __cplusplus
extern "C" {
#endif

/* The python void return value */

SWIGRUNTIMEINLINE PyObject * 
SWIG_Py_Void(void)
{
  PyObject *none = Py_None;
  Py_INCREF(none);
  return none;
}

/* SwigPyClientData */

typedef struct {
  PyObject *klass;
  PyObject *newraw;
  PyObject *newargs;
  PyObject *destroy;
  int delargs;
  int implicitconv;
  PyTypeObject *pytype;
} SwigPyClientData;

SWIGRUNTIMEINLINE int 
SWIG_Python_CheckImplicit(swig_type_info *ty)
{
  SwigPyClientData *data = (SwigPyClientData *)ty->clientdata;
  int fail = data ? data->implicitconv : 0;
  if (fail)
    PyErr_SetString(PyExc_TypeError, "Implicit conversion is prohibited for explicit constructors.");
  return fail;
}

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_ExceptionType(swig_type_info *desc) {
  SwigPyClientData *data = desc ? (SwigPyClientData *) desc->clientdata : 0;
  PyObject *klass = data ? data->klass : 0;
  return (klass ? klass : PyExc_RuntimeError);
}


SWIGRUNTIME SwigPyClientData * 
SwigPyClientData_New(PyObject* obj)
{
  if (!obj) {
    return 0;
  } else {
    SwigPyClientData *data = (SwigPyClientData *)malloc(sizeof(SwigPyClientData));
    /* the klass element */
    data->klass = obj;
    Py_INCREF(data->klass);
    /* the newraw method and newargs arguments used to create a new raw instance */
    if (PyClass_Check(obj)) {
      data->newraw = 0;
      data->newargs = obj;
      Py_INCREF(obj);
    } else {
      data->newraw = PyObject_GetAttrString(data->klass, "__new__");
      if (data->newraw) {
	Py_INCREF(data->newraw);
	data->newargs = PyTuple_New(1);
	PyTuple_SetItem(data->newargs, 0, obj);
      } else {
	data->newargs = obj;
      }
      Py_INCREF(data->newargs);
    }
    /* the destroy method, aka as the C++ delete method */
    data->destroy = PyObject_GetAttrString(data->klass, "__swig_destroy__");
    if (PyErr_Occurred()) {
      PyErr_Clear();
      data->destroy = 0;
    }
    if (data->destroy) {
      int flags;
      Py_INCREF(data->destroy);
      flags = PyCFunction_GET_FLAGS(data->destroy);
      data->delargs = !(flags & (METH_O));
    } else {
      data->delargs = 0;
    }
    data->implicitconv = 0;
    data->pytype = 0;
    return data;
  }
}

SWIGRUNTIME void 
SwigPyClientData_Del(SwigPyClientData *data) {
  Py_XDECREF(data->newraw);
  Py_XDECREF(data->newargs);
  Py_XDECREF(data->destroy);
}

/* =============== SwigPyObject =====================*/

typedef struct {
  PyObject_HEAD
  void *ptr;
  swig_type_info *ty;
  int own;
  PyObject *next;
#ifdef SWIGPYTHON_BUILTIN
  PyObject *dict;
#endif
} SwigPyObject;


#ifdef SWIGPYTHON_BUILTIN

SWIGRUNTIME PyObject *
SwigPyObject_get___dict__(PyObject *v, PyObject *SWIGUNUSEDPARM(args))
{
  SwigPyObject *sobj = (SwigPyObject *)v;

  if (!sobj->dict)
    sobj->dict = PyDict_New();

  Py_INCREF(sobj->dict);
  return sobj->dict;
}

#endif

SWIGRUNTIME PyObject *
SwigPyObject_long(SwigPyObject *v)
{
  return PyLong_FromVoidPtr(v->ptr);
}

SWIGRUNTIME PyObject *
SwigPyObject_format(const char* fmt, SwigPyObject *v)
{
  PyObject *res = NULL;
  PyObject *args = PyTuple_New(1);
  if (args) {
    if (PyTuple_SetItem(args, 0, SwigPyObject_long(v)) == 0) {
      PyObject *ofmt = SWIG_Python_str_FromChar(fmt);
      if (ofmt) {
#if PY_VERSION_HEX >= 0x03000000
	res = PyUnicode_Format(ofmt,args);
#else
	res = PyString_Format(ofmt,args);
#endif
	Py_DECREF(ofmt);
      }
      Py_DECREF(args);
    }
  }
  return res;
}

SWIGRUNTIME PyObject *
SwigPyObject_oct(SwigPyObject *v)
{
  return SwigPyObject_format("%o",v);
}

SWIGRUNTIME PyObject *
SwigPyObject_hex(SwigPyObject *v)
{
  return SwigPyObject_format("%x",v);
}

SWIGRUNTIME PyObject *
SwigPyObject_repr(SwigPyObject *v)
{
  const char *name = SWIG_TypePrettyName(v->ty);
  PyObject *repr = SWIG_Python_str_FromFormat("<Swig Object of type '%s' at %p>", (name ? name : "unknown"), (void *)v);
  if (v->next) {
    PyObject *nrep = SwigPyObject_repr((SwigPyObject *)v->next);
# if PY_VERSION_HEX >= 0x03000000
    PyObject *joined = PyUnicode_Concat(repr, nrep);
    Py_DecRef(repr);
    Py_DecRef(nrep);
    repr = joined;
# else
    PyString_ConcatAndDel(&repr,nrep);
# endif
  }
  return repr;  
}

/* We need a version taking two PyObject* parameters so it's a valid
 * PyCFunction to use in swigobject_methods[]. */
SWIGRUNTIME PyObject *
SwigPyObject_repr2(PyObject *v, PyObject *SWIGUNUSEDPARM(args))
{
  return SwigPyObject_repr((SwigPyObject*)v);
}

SWIGRUNTIME int
SwigPyObject_compare(SwigPyObject *v, SwigPyObject *w)
{
  void *i = v->ptr;
  void *j = w->ptr;
  return (i < j) ? -1 : ((i > j) ? 1 : 0);
}

/* Added for Python 3.x, would it also be useful for Python 2.x? */
SWIGRUNTIME PyObject*
SwigPyObject_richcompare(SwigPyObject *v, SwigPyObject *w, int op)
{
  PyObject* res;
  if( op != Py_EQ && op != Py_NE ) {
    Py_INCREF(Py_NotImplemented);
    return Py_NotImplemented;
  }
  res = PyBool_FromLong( (SwigPyObject_compare(v, w)==0) == (op == Py_EQ) ? 1 : 0);
  return res;  
}


SWIGRUNTIME PyTypeObject* SwigPyObject_TypeOnce(void);

#ifdef SWIGPYTHON_BUILTIN
static swig_type_info *SwigPyObject_stype = 0;
SWIGRUNTIME PyTypeObject*
SwigPyObject_type(void) {
    SwigPyClientData *cd;
    assert(SwigPyObject_stype);
    cd = (SwigPyClientData*) SwigPyObject_stype->clientdata;
    assert(cd);
    assert(cd->pytype);
    return cd->pytype;
}
#else
SWIGRUNTIME PyTypeObject*
SwigPyObject_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = SwigPyObject_TypeOnce();
  return type;
}
#endif

SWIGRUNTIMEINLINE int
SwigPyObject_Check(PyObject *op) {
#ifdef SWIGPYTHON_BUILTIN
  PyTypeObject *target_tp = SwigPyObject_type();
  if (PyType_IsSubtype(op->ob_type, target_tp))
    return 1;
  return (strcmp(op->ob_type->tp_name, "SwigPyObject") == 0);
#else
  return (Py_TYPE(op) == SwigPyObject_type())
    || (strcmp(Py_TYPE(op)->tp_name,"SwigPyObject") == 0);
#endif
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own);

SWIGRUNTIME void
SwigPyObject_dealloc(PyObject *v)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  PyObject *next = sobj->next;
  if (sobj->own == SWIG_POINTER_OWN) {
    swig_type_info *ty = sobj->ty;
    SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
    PyObject *destroy = data ? data->destroy : 0;
    if (destroy) {
      /* destroy is always a VARARGS method */
      PyObject *res;

      /* PyObject_CallFunction() has the potential to silently drop
         the active exception.  In cases of unnamed temporary
         variable or where we just finished iterating over a generator
         StopIteration will be active right now, and this needs to
         remain true upon return from SwigPyObject_dealloc.  So save
         and restore. */
      
      PyObject *type = NULL, *value = NULL, *traceback = NULL;
      PyErr_Fetch(&type, &value, &traceback);

      if (data->delargs) {
        /* we need to create a temporary object to carry the destroy operation */
        PyObject *tmp = SwigPyObject_New(sobj->ptr, ty, 0);
        res = SWIG_Python_CallFunctor(destroy, tmp);
        Py_DECREF(tmp);
      } else {
        PyCFunction meth = PyCFunction_GET_FUNCTION(destroy);
        PyObject *mself = PyCFunction_GET_SELF(destroy);
        res = ((*meth)(mself, v));
      }
      if (!res)
        PyErr_WriteUnraisable(destroy);

      PyErr_Restore(type, value, traceback);

      Py_XDECREF(res);
    } 
#if !defined(SWIG_PYTHON_SILENT_MEMLEAK)
    else {
      const char *name = SWIG_TypePrettyName(ty);
      printf("swig/python detected a memory leak of type '%s', no destructor found.\n", (name ? name : "unknown"));
    }
#endif
  } 
  Py_XDECREF(next);
  PyObject_DEL(v);
}

SWIGRUNTIME PyObject* 
SwigPyObject_append(PyObject* v, PyObject* next)
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  if (!SwigPyObject_Check(next)) {
    PyErr_SetString(PyExc_TypeError, "Attempt to append a non SwigPyObject");
    return NULL;
  }
  sobj->next = next;
  Py_INCREF(next);
  return SWIG_Py_Void();
}

SWIGRUNTIME PyObject* 
SwigPyObject_next(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
{
  SwigPyObject *sobj = (SwigPyObject *) v;
  if (sobj->next) {    
    Py_INCREF(sobj->next);
    return sobj->next;
  } else {
    return SWIG_Py_Void();
  }
}

SWIGINTERN PyObject*
SwigPyObject_disown(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = 0;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
SwigPyObject_acquire(PyObject* v, PyObject *SWIGUNUSEDPARM(args))
{
  SwigPyObject *sobj = (SwigPyObject *)v;
  sobj->own = SWIG_POINTER_OWN;
  return SWIG_Py_Void();
}

SWIGINTERN PyObject*
SwigPyObject_own(PyObject *v, PyObject *args)
{
  PyObject *val = 0;
  if (!PyArg_UnpackTuple(args, "own", 0, 1, &val)) {
    return NULL;
  } else {
    SwigPyObject *sobj = (SwigPyObject *)v;
    PyObject *obj = PyBool_FromLong(sobj->own);
    if (val) {
      if (PyObject_IsTrue(val)) {
        SwigPyObject_acquire(v,args);
      } else {
        SwigPyObject_disown(v,args);
      }
    } 
    return obj;
  }
}

static PyMethodDef
swigobject_methods[] = {
  {"disown",  SwigPyObject_disown,  METH_NOARGS,  "releases ownership of the pointer"},
  {"acquire", SwigPyObject_acquire, METH_NOARGS,  "acquires ownership of the pointer"},
  {"own",     SwigPyObject_own,     METH_VARARGS, "returns/sets ownership of the pointer"},
  {"append",  SwigPyObject_append,  METH_O,       "appends another 'this' object"},
  {"next",    SwigPyObject_next,    METH_NOARGS,  "returns the next 'this' object"},
  {"__repr__",SwigPyObject_repr2,   METH_NOARGS,  "returns object representation"},
  {0, 0, 0, 0}  
};

SWIGRUNTIME PyTypeObject*
SwigPyObject_TypeOnce(void) {
  static char swigobject_doc[] = "Swig object carries a C/C++ instance pointer";

  static PyNumberMethods SwigPyObject_as_number = {
    (binaryfunc)0, /*nb_add*/
    (binaryfunc)0, /*nb_subtract*/
    (binaryfunc)0, /*nb_multiply*/
    /* nb_divide removed in Python 3 */
#if PY_VERSION_HEX < 0x03000000
    (binaryfunc)0, /*nb_divide*/
#endif
    (binaryfunc)0, /*nb_remainder*/
    (binaryfunc)0, /*nb_divmod*/
    (ternaryfunc)0,/*nb_power*/
    (unaryfunc)0,  /*nb_negative*/
    (unaryfunc)0,  /*nb_positive*/
    (unaryfunc)0,  /*nb_absolute*/
    (inquiry)0,    /*nb_nonzero*/
    0,		   /*nb_invert*/
    0,		   /*nb_lshift*/
    0,		   /*nb_rshift*/
    0,		   /*nb_and*/
    0,		   /*nb_xor*/
    0,		   /*nb_or*/
#if PY_VERSION_HEX < 0x03000000
    0,   /*nb_coerce*/
#endif
    (unaryfunc)SwigPyObject_long, /*nb_int*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_long, /*nb_long*/
#else
    0, /*nb_reserved*/
#endif
    (unaryfunc)0,                 /*nb_float*/
#if PY_VERSION_HEX < 0x03000000
    (unaryfunc)SwigPyObject_oct,  /*nb_oct*/
    (unaryfunc)SwigPyObject_hex,  /*nb_hex*/
#endif
#if PY_VERSION_HEX >= 0x03050000 /* 3.5 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_inplace_matrix_multiply */
#elif PY_VERSION_HEX >= 0x03000000 /* 3.0 */
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index, nb_inplace_divide removed */
#else
    0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0 /* nb_inplace_add -> nb_index */
#endif
  };

  static PyTypeObject swigpyobject_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
#if PY_VERSION_HEX >= 0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                    /* ob_size */
#endif
      "SwigPyObject",                       /* tp_name */
      sizeof(SwigPyObject),                 /* tp_basicsize */
      0,                                    /* tp_itemsize */
      (destructor)SwigPyObject_dealloc,     /* tp_dealloc */
      0,                                    /* tp_print */
      (getattrfunc)0,                       /* tp_getattr */
      (setattrfunc)0,                       /* tp_setattr */
#if PY_VERSION_HEX >= 0x03000000
      0, /* tp_reserved in 3.0.1, tp_compare in 3.0.0 but not used */
#else
      (cmpfunc)SwigPyObject_compare,        /* tp_compare */
#endif
      (reprfunc)SwigPyObject_repr,          /* tp_repr */
      &SwigPyObject_as_number,              /* tp_as_number */
      0,                                    /* tp_as_sequence */
      0,                                    /* tp_as_mapping */
      (hashfunc)0,                          /* tp_hash */
      (ternaryfunc)0,                       /* tp_call */
      0,                                    /* tp_str */
      PyObject_GenericGetAttr,              /* tp_getattro */
      0,                                    /* tp_setattro */
      0,                                    /* tp_as_buffer */
      Py_TPFLAGS_DEFAULT,                   /* tp_flags */
      swigobject_doc,                       /* tp_doc */
      0,                                    /* tp_traverse */
      0,                                    /* tp_clear */
      (richcmpfunc)SwigPyObject_richcompare,/* tp_richcompare */
      0,                                    /* tp_weaklistoffset */
      0,                                    /* tp_iter */
      0,                                    /* tp_iternext */
      swigobject_methods,                   /* tp_methods */
      0,                                    /* tp_members */
      0,                                    /* tp_getset */
      0,                                    /* tp_base */
      0,                                    /* tp_dict */
      0,                                    /* tp_descr_get */
      0,                                    /* tp_descr_set */
      0,                                    /* tp_dictoffset */
      0,                                    /* tp_init */
      0,                                    /* tp_alloc */
      0,                                    /* tp_new */
      0,                                    /* tp_free */
      0,                                    /* tp_is_gc */
      0,                                    /* tp_bases */
      0,                                    /* tp_mro */
      0,                                    /* tp_cache */
      0,                                    /* tp_subclasses */
      0,                                    /* tp_weaklist */
      0,                                    /* tp_del */
      0,                                    /* tp_version_tag */
#if PY_VERSION_HEX >= 0x03040000
      0,                                    /* tp_finalize */
#endif
#if PY_VERSION_HEX >= 0x03080000
      0,                                    /* tp_vectorcall */
#endif
#if (PY_VERSION_HEX >= 0x03080000) && (PY_VERSION_HEX < 0x03090000)
      0,                                    /* tp_print */
#endif
#ifdef COUNT_ALLOCS
      0,                                    /* tp_allocs */
      0,                                    /* tp_frees */
      0,                                    /* tp_maxalloc */
      0,                                    /* tp_prev */
      0                                     /* tp_next */
#endif
    };
    swigpyobject_type = tmp;
    type_init = 1;
    if (PyType_Ready(&swigpyobject_type) < 0)
      return NULL;
  }
  return &swigpyobject_type;
}

SWIGRUNTIME PyObject *
SwigPyObject_New(void *ptr, swig_type_info *ty, int own)
{
  SwigPyObject *sobj = PyObject_NEW(SwigPyObject, SwigPyObject_type());
  if (sobj) {
    sobj->ptr  = ptr;
    sobj->ty   = ty;
    sobj->own  = own;
    sobj->next = 0;
  }
  return (PyObject *)sobj;
}

/* -----------------------------------------------------------------------------
 * Implements a simple Swig Packed type, and use it instead of string
 * ----------------------------------------------------------------------------- */

typedef struct {
  PyObject_HEAD
  void *pack;
  swig_type_info *ty;
  size_t size;
} SwigPyPacked;

SWIGRUNTIME PyObject *
SwigPyPacked_repr(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))) {
    return SWIG_Python_str_FromFormat("<Swig Packed at %s%s>", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromFormat("<Swig Packed %s>", v->ty->name);
  }  
}

SWIGRUNTIME PyObject *
SwigPyPacked_str(SwigPyPacked *v)
{
  char result[SWIG_BUFFER_SIZE];
  if (SWIG_PackDataName(result, v->pack, v->size, 0, sizeof(result))){
    return SWIG_Python_str_FromFormat("%s%s", result, v->ty->name);
  } else {
    return SWIG_Python_str_FromChar(v->ty->name);
  }  
}

SWIGRUNTIME int
SwigPyPacked_compare(SwigPyPacked *v, SwigPyPacked *w)
{
  size_t i = v->size;
  size_t j = w->size;
  int s = (i < j) ? -1 : ((i > j) ? 1 : 0);
  return s ? s : strncmp((const char *)v->pack, (const char *)w->pack, 2*v->size);
}

SWIGRUNTIME PyTypeObject* SwigPyPacked_TypeOnce(void);

SWIGRUNTIME PyTypeObject*
SwigPyPacked_type(void) {
  static PyTypeObject *SWIG_STATIC_POINTER(type) = SwigPyPacked_TypeOnce();
  return type;
}

SWIGRUNTIMEINLINE int
SwigPyPacked_Check(PyObject *op) {
  return ((op)->ob_type == SwigPyPacked_TypeOnce()) 
    || (strcmp((op)->ob_type->tp_name,"SwigPyPacked") == 0);
}

SWIGRUNTIME void
SwigPyPacked_dealloc(PyObject *v)
{
  if (SwigPyPacked_Check(v)) {
    SwigPyPacked *sobj = (SwigPyPacked *) v;
    free(sobj->pack);
  }
  PyObject_DEL(v);
}

SWIGRUNTIME PyTypeObject*
SwigPyPacked_TypeOnce(void) {
  static char swigpacked_doc[] = "Swig object carries a C/C++ instance pointer";
  static PyTypeObject swigpypacked_type;
  static int type_init = 0;
  if (!type_init) {
    const PyTypeObject tmp = {
#if PY_VERSION_HEX>=0x03000000
      PyVarObject_HEAD_INIT(NULL, 0)
#else
      PyObject_HEAD_INIT(NULL)
      0,                                    /* ob_size */
#endif
      "SwigPyPacked",                       /* tp_name */
      sizeof(SwigPyPacked),                 /* tp_basicsize */
      0,                                    /* tp_itemsize */
      (destructor)SwigPyPacked_dealloc,     /* tp_dealloc */
      0,                                    /* tp_print */
      (getattrfunc)0,                       /* tp_getattr */
      (setattrfunc)0,                       /* tp_setattr */
#if PY_VERSION_HEX>=0x03000000
      0, /* tp_reserved in 3.0.1 */
#else
      (cmpfunc)SwigPyPacked_compare,        /* tp_compare */
#endif
      (reprfunc)SwigPyPacked_repr,          /* tp_repr */
      0,                                    /* tp_as_number */
      0,                                    /* tp_as_sequence */
      0,                                    /* tp_as_mapping */
      (hashfunc)0,                          /* tp_hash */
      (ternaryfunc)0,                       /* tp_call */
      (reprfunc)SwigPyPacked_str,           /* tp_str */
      PyObject_GenericGetAttr,              /* tp_getattro */
      0,                                    /* tp_setattro */
      0,                                    /* tp_as_buffer */
      Py_TPFLAGS_DEFAULT,                   /* tp_flags */
      swigpacked_doc,                       /* tp_doc */
      0,                                    /* tp_traverse */
      0,                                    /* tp_clear */
      0,                                    /* tp_richcompare */
      0,                                    /* tp_weaklistoffset */
      0,                                    /* tp_iter */
      0,                                    /* tp_iternext */
      0,                                    /* tp_methods */
      0,                                    /* tp_members */
      0,                                    /* tp_getset */
      0,                                    /* tp_base */
      0,                                    /* tp_dict */
      0,                                    /* tp_descr_get */
      0,                                    /* tp_descr_set */
      0,                                    /* tp_dictoffset */
      0,                                    /* tp_init */
      0,                                    /* tp_alloc */
      0,                                    /* tp_new */
      0,                                    /* tp_free */
      0,                                    /* tp_is_gc */
      0,                                    /* tp_bases */
      0,                                    /* tp_mro */
      0,                                    /* tp_cache */
      0,                                    /* tp_subclasses */
      0,                                    /* tp_weaklist */
      0,                                    /* tp_del */
      0,                                    /* tp_version_tag */
#if PY_VERSION_HEX >= 0x03040000
      0,                                    /* tp_finalize */
#endif
#if PY_VERSION_HEX >= 0x03080000
      0,                                    /* tp_vectorcall */
#endif
#if (PY_VERSION_HEX >= 0x03080000) && (PY_VERSION_HEX < 0x03090000)
      0,                                    /* tp_print */
#endif
#ifdef COUNT_ALLOCS
      0,                                    /* tp_allocs */
      0,                                    /* tp_frees */
      0,                                    /* tp_maxalloc */
      0,                                    /* tp_prev */
      0                                     /* tp_next */
#endif
    };
    swigpypacked_type = tmp;
    type_init = 1;
    if (PyType_Ready(&swigpypacked_type) < 0)
      return NULL;
  }
  return &swigpypacked_type;
}

SWIGRUNTIME PyObject *
SwigPyPacked_New(void *ptr, size_t size, swig_type_info *ty)
{
  SwigPyPacked *sobj = PyObject_NEW(SwigPyPacked, SwigPyPacked_type());
  if (sobj) {
    void *pack = malloc(size);
    if (pack) {
      memcpy(pack, ptr, size);
      sobj->pack = pack;
      sobj->ty   = ty;
      sobj->size = size;
    } else {
      PyObject_DEL((PyObject *) sobj);
      sobj = 0;
    }
  }
  return (PyObject *) sobj;
}

SWIGRUNTIME swig_type_info *
SwigPyPacked_UnpackData(PyObject *obj, void *ptr, size_t size)
{
  if (SwigPyPacked_Check(obj)) {
    SwigPyPacked *sobj = (SwigPyPacked *)obj;
    if (sobj->size != size) return 0;
    memcpy(ptr, sobj->pack, size);
    return sobj->ty;
  } else {
    return 0;
  }
}

/* -----------------------------------------------------------------------------
 * pointers/data manipulation
 * ----------------------------------------------------------------------------- */

static PyObject *Swig_This_global = NULL;

SWIGRUNTIME PyObject *
SWIG_This(void)
{
  if (Swig_This_global == NULL)
    Swig_This_global = SWIG_Python_str_FromChar("this");
  return Swig_This_global;
}

/* #define SWIG_PYTHON_SLOW_GETSET_THIS */

/* TODO: I don't know how to implement the fast getset in Python 3 right now */
#if PY_VERSION_HEX>=0x03000000
#define SWIG_PYTHON_SLOW_GETSET_THIS 
#endif

SWIGRUNTIME SwigPyObject *
SWIG_Python_GetSwigThis(PyObject *pyobj) 
{
  PyObject *obj;

  if (SwigPyObject_Check(pyobj))
    return (SwigPyObject *) pyobj;

#ifdef SWIGPYTHON_BUILTIN
  (void)obj;
# ifdef PyWeakref_CheckProxy
  if (PyWeakref_CheckProxy(pyobj)) {
    pyobj = PyWeakref_GET_OBJECT(pyobj);
    if (pyobj && SwigPyObject_Check(pyobj))
      return (SwigPyObject*) pyobj;
  }
# endif
  return NULL;
#else

  obj = 0;

#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
  if (PyInstance_Check(pyobj)) {
    obj = _PyInstance_Lookup(pyobj, SWIG_This());      
  } else {
    PyObject **dictptr = _PyObject_GetDictPtr(pyobj);
    if (dictptr != NULL) {
      PyObject *dict = *dictptr;
      obj = dict ? PyDict_GetItem(dict, SWIG_This()) : 0;
    } else {
#ifdef PyWeakref_CheckProxy
      if (PyWeakref_CheckProxy(pyobj)) {
	PyObject *wobj = PyWeakref_GET_OBJECT(pyobj);
	return wobj ? SWIG_Python_GetSwigThis(wobj) : 0;
      }
#endif
      obj = PyObject_GetAttr(pyobj,SWIG_This());
      if (obj) {
	Py_DECREF(obj);
      } else {
	if (PyErr_Occurred()) PyErr_Clear();
	return 0;
      }
    }
  }
#else
  obj = PyObject_GetAttr(pyobj,SWIG_This());
  if (obj) {
    Py_DECREF(obj);
  } else {
    if (PyErr_Occurred()) PyErr_Clear();
    return 0;
  }
#endif
  if (obj && !SwigPyObject_Check(obj)) {
    /* a PyObject is called 'this', try to get the 'real this'
       SwigPyObject from it */ 
    return SWIG_Python_GetSwigThis(obj);
  }
  return (SwigPyObject *)obj;
#endif
}

/* Acquire a pointer value */

SWIGRUNTIME int
SWIG_Python_AcquirePtr(PyObject *obj, int own) {
  if (own == SWIG_POINTER_OWN) {
    SwigPyObject *sobj = SWIG_Python_GetSwigThis(obj);
    if (sobj) {
      int oldown = sobj->own;
      sobj->own = own;
      return oldown;
    }
  }
  return 0;
}

/* Convert a pointer value */

SWIGRUNTIME int
SWIG_Python_ConvertPtrAndOwn(PyObject *obj, void **ptr, swig_type_info *ty, int flags, int *own) {
  int res;
  SwigPyObject *sobj;
  int implicit_conv = (flags & SWIG_POINTER_IMPLICIT_CONV) != 0;

  if (!obj)
    return SWIG_ERROR;
  if (obj == Py_None && !implicit_conv) {
    if (ptr)
      *ptr = 0;
    return (flags & SWIG_POINTER_NO_NULL) ? SWIG_NullReferenceError : SWIG_OK;
  }

  res = SWIG_ERROR;

  sobj = SWIG_Python_GetSwigThis(obj);
  if (own)
    *own = 0;
  while (sobj) {
    void *vptr = sobj->ptr;
    if (ty) {
      swig_type_info *to = sobj->ty;
      if (to == ty) {
        /* no type cast needed */
        if (ptr) *ptr = vptr;
        break;
      } else {
        swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
        if (!tc) {
          sobj = (SwigPyObject *)sobj->next;
        } else {
          if (ptr) {
            int newmemory = 0;
            *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
            if (newmemory == SWIG_CAST_NEW_MEMORY) {
              assert(own); /* badly formed typemap which will lead to a memory leak - it must set and use own to delete *ptr */
              if (own)
                *own = *own | SWIG_CAST_NEW_MEMORY;
            }
          }
          break;
        }
      }
    } else {
      if (ptr) *ptr = vptr;
      break;
    }
  }
  if (sobj) {
    if (own)
      *own = *own | sobj->own;
    if (flags & SWIG_POINTER_DISOWN) {
      sobj->own = 0;
    }
    res = SWIG_OK;
  } else {
    if (implicit_conv) {
      SwigPyClientData *data = ty ? (SwigPyClientData *) ty->clientdata : 0;
      if (data && !data->implicitconv) {
        PyObject *klass = data->klass;
        if (klass) {
          PyObject *impconv;
          data->implicitconv = 1; /* avoid recursion and call 'explicit' constructors*/
          impconv = SWIG_Python_CallFunctor(klass, obj);
          data->implicitconv = 0;
          if (PyErr_Occurred()) {
            PyErr_Clear();
            impconv = 0;
          }
          if (impconv) {
            SwigPyObject *iobj = SWIG_Python_GetSwigThis(impconv);
            if (iobj) {
              void *vptr;
              res = SWIG_Python_ConvertPtrAndOwn((PyObject*)iobj, &vptr, ty, 0, 0);
              if (SWIG_IsOK(res)) {
                if (ptr) {
                  *ptr = vptr;
                  /* transfer the ownership to 'ptr' */
                  iobj->own = 0;
                  res = SWIG_AddCast(res);
                  res = SWIG_AddNewMask(res);
                } else {
                  res = SWIG_AddCast(res);		    
                }
              }
            }
            Py_DECREF(impconv);
          }
        }
      }
      if (!SWIG_IsOK(res) && obj == Py_None) {
        if (ptr)
          *ptr = 0;
        if (PyErr_Occurred())
          PyErr_Clear();
        res = SWIG_OK;
      }
    }
  }
  return res;
}

/* Convert a function ptr value */

SWIGRUNTIME int
SWIG_Python_ConvertFunctionPtr(PyObject *obj, void **ptr, swig_type_info *ty) {
  if (!PyCFunction_Check(obj)) {
    return SWIG_ConvertPtr(obj, ptr, ty, 0);
  } else {
    void *vptr = 0;
    swig_cast_info *tc;

    /* here we get the method pointer for callbacks */
    const char *doc = (((PyCFunctionObject *)obj) -> m_ml -> ml_doc);
    const char *desc = doc ? strstr(doc, "swig_ptr: ") : 0;
    if (desc)
      desc = ty ? SWIG_UnpackVoidPtr(desc + 10, &vptr, ty->name) : 0;
    if (!desc)
      return SWIG_ERROR;
    tc = SWIG_TypeCheck(desc,ty);
    if (tc) {
      int newmemory = 0;
      *ptr = SWIG_TypeCast(tc,vptr,&newmemory);
      assert(!newmemory); /* newmemory handling not yet implemented */
    } else {
      return SWIG_ERROR;
    }
    return SWIG_OK;
  }
}

/* Convert a packed pointer value */

SWIGRUNTIME int
SWIG_Python_ConvertPacked(PyObject *obj, void *ptr, size_t sz, swig_type_info *ty) {
  swig_type_info *to = SwigPyPacked_UnpackData(obj, ptr, sz);
  if (!to) return SWIG_ERROR;
  if (ty) {
    if (to != ty) {
      /* check type cast? */
      swig_cast_info *tc = SWIG_TypeCheck(to->name,ty);
      if (!tc) return SWIG_ERROR;
    }
  }
  return SWIG_OK;
}  

/* -----------------------------------------------------------------------------
 * Create a new pointer object
 * ----------------------------------------------------------------------------- */

/*
  Create a new instance object, without calling __init__, and set the
  'this' attribute.
*/

SWIGRUNTIME PyObject* 
SWIG_Python_NewShadowInstance(SwigPyClientData *data, PyObject *swig_this)
{
  PyObject *inst = 0;
  PyObject *newraw = data->newraw;
  if (newraw) {
    inst = PyObject_Call(newraw, data->newargs, NULL);
    if (inst) {
#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
      PyObject **dictptr = _PyObject_GetDictPtr(inst);
      if (dictptr != NULL) {
	PyObject *dict = *dictptr;
	if (dict == NULL) {
	  dict = PyDict_New();
	  *dictptr = dict;
	  PyDict_SetItem(dict, SWIG_This(), swig_this);
	}
      }
#else
      if (PyObject_SetAttr(inst, SWIG_This(), swig_this) == -1) {
        Py_DECREF(inst);
        inst = 0;
      }
#endif
    }
  } else {
#if PY_VERSION_HEX >= 0x03000000
    PyObject *empty_args = PyTuple_New(0);
    if (empty_args) {
      PyObject *empty_kwargs = PyDict_New();
      if (empty_kwargs) {
        inst = ((PyTypeObject *)data->newargs)->tp_new((PyTypeObject *)data->newargs, empty_args, empty_kwargs);
        Py_DECREF(empty_kwargs);
        if (inst) {
          if (PyObject_SetAttr(inst, SWIG_This(), swig_this) == -1) {
            Py_DECREF(inst);
            inst = 0;
          } else {
            Py_TYPE(inst)->tp_flags &= ~Py_TPFLAGS_VALID_VERSION_TAG;
          }
        }
      }
      Py_DECREF(empty_args);
    }
#else
    PyObject *dict = PyDict_New();
    if (dict) {
      PyDict_SetItem(dict, SWIG_This(), swig_this);
      inst = PyInstance_NewRaw(data->newargs, dict);
      Py_DECREF(dict);
    }
#endif
  }
  return inst;
}

SWIGRUNTIME int
SWIG_Python_SetSwigThis(PyObject *inst, PyObject *swig_this)
{
#if !defined(SWIG_PYTHON_SLOW_GETSET_THIS)
  PyObject **dictptr = _PyObject_GetDictPtr(inst);
  if (dictptr != NULL) {
    PyObject *dict = *dictptr;
    if (dict == NULL) {
      dict = PyDict_New();
      *dictptr = dict;
    }
    return PyDict_SetItem(dict, SWIG_This(), swig_this);
  }
#endif
  return PyObject_SetAttr(inst, SWIG_This(), swig_this);
} 


SWIGINTERN PyObject *
SWIG_Python_InitShadowInstance(PyObject *args) {
  PyObject *obj[2];
  if (!SWIG_Python_UnpackTuple(args, "swiginit", 2, 2, obj)) {
    return NULL;
  } else {
    SwigPyObject *sthis = SWIG_Python_GetSwigThis(obj[0]);
    if (sthis) {
      SwigPyObject_append((PyObject*) sthis, obj[1]);
    } else {
      if (SWIG_Python_SetSwigThis(obj[0], obj[1]) != 0)
        return NULL;
    }
    return SWIG_Py_Void();
  }
}

/* Create a new pointer object */

SWIGRUNTIME PyObject *
SWIG_Python_NewPointerObj(PyObject *self, void *ptr, swig_type_info *type, int flags) {
  SwigPyClientData *clientdata;
  PyObject * robj;
  int own;

  if (!ptr)
    return SWIG_Py_Void();

  clientdata = type ? (SwigPyClientData *)(type->clientdata) : 0;
  own = (flags & SWIG_POINTER_OWN) ? SWIG_POINTER_OWN : 0;
  if (clientdata && clientdata->pytype) {
    SwigPyObject *newobj;
    if (flags & SWIG_BUILTIN_TP_INIT) {
      newobj = (SwigPyObject*) self;
      if (newobj->ptr) {
        PyObject *next_self = clientdata->pytype->tp_alloc(clientdata->pytype, 0);
        while (newobj->next)
	  newobj = (SwigPyObject *) newobj->next;
        newobj->next = next_self;
        newobj = (SwigPyObject *)next_self;
#ifdef SWIGPYTHON_BUILTIN
        newobj->dict = 0;
#endif
      }
    } else {
      newobj = PyObject_New(SwigPyObject, clientdata->pytype);
#ifdef SWIGPYTHON_BUILTIN
      newobj->dict = 0;
#endif
    }
    if (newobj) {
      newobj->ptr = ptr;
      newobj->ty = type;
      newobj->own = own;
      newobj->next = 0;
      return (PyObject*) newobj;
    }
    return SWIG_Py_Void();
  }

  assert(!(flags & SWIG_BUILTIN_TP_INIT));

  robj = SwigPyObject_New(ptr, type, own);
  if (robj && clientdata && !(flags & SWIG_POINTER_NOSHADOW)) {
    PyObject *inst = SWIG_Python_NewShadowInstance(clientdata, robj);
    Py_DECREF(robj);
    robj = inst;
  }
  return robj;
}

/* Create a new packed object */

SWIGRUNTIMEINLINE PyObject *
SWIG_Python_NewPackedObj(void *ptr, size_t sz, swig_type_info *type) {
  return ptr ? SwigPyPacked_New((void *) ptr, sz, type) : SWIG_Py_Void();
}

/* -----------------------------------------------------------------------------*
 *  Get type list 
 * -----------------------------------------------------------------------------*/

#ifdef SWIG_LINK_RUNTIME
void *SWIG_ReturnGlobalTypeList(void *);
#endif

SWIGRUNTIME swig_module_info *
SWIG_Python_GetModule(void *SWIGUNUSEDPARM(clientdata)) {
  static void *type_pointer = (void *)0;
  /* first check if module already created */
  if (!type_pointer) {
#ifdef SWIG_LINK_RUNTIME
    type_pointer = SWIG_ReturnGlobalTypeList((void *)0);
#else
    type_pointer = PyCapsule_Import(SWIGPY_CAPSULE_NAME, 0);
    if (PyErr_Occurred()) {
      PyErr_Clear();
      type_pointer = (void *)0;
    }
#endif
  }
  return (swig_module_info *) type_pointer;
}

SWIGRUNTIME void
SWIG_Python_DestroyModule(PyObject *obj)
{
  swig_module_info *swig_module = (swig_module_info *) PyCapsule_GetPointer(obj, SWIGPY_CAPSULE_NAME);
  swig_type_info **types = swig_module->types;
  size_t i;
  for (i =0; i < swig_module->size; ++i) {
    swig_type_info *ty = types[i];
    if (ty->owndata) {
      SwigPyClientData *data = (SwigPyClientData *) ty->clientdata;
      if (data) SwigPyClientData_Del(data);
    }
  }
  Py_DECREF(SWIG_This());
  Swig_This_global = NULL;
}

SWIGRUNTIME void
SWIG_Python_SetModule(swig_module_info *swig_module) {
#if PY_VERSION_HEX >= 0x03000000
 /* Add a dummy module object into sys.modules */
  PyObject *module = PyImport_AddModule("swig_runtime_data" SWIG_RUNTIME_VERSION);
#else
  static PyMethodDef swig_empty_runtime_method_table[] = { {NULL, NULL, 0, NULL} }; /* Sentinel */
  PyObject *module = Py_InitModule("swig_runtime_data" SWIG_RUNTIME_VERSION, swig_empty_runtime_method_table);
#endif
  PyObject *pointer = PyCapsule_New((void *) swig_module, SWIGPY_CAPSULE_NAME, SWIG_Python_DestroyModule);
  if (pointer && module) {
    PyModule_AddObject(module, "type_pointer_capsule" SWIG_TYPE_TABLE_NAME, pointer);
  } else {
    Py_XDECREF(pointer);
  }
}

/* The python cached type query */
SWIGRUNTIME PyObject *
SWIG_Python_TypeCache(void) {
  static PyObject *SWIG_STATIC_POINTER(cache) = PyDict_New();
  return cache;
}

SWIGRUNTIME swig_type_info *
SWIG_Python_TypeQuery(const char *type)
{
  PyObject *cache = SWIG_Python_TypeCache();
  PyObject *key = SWIG_Python_str_FromChar(type); 
  PyObject *obj = PyDict_GetItem(cache, key);
  swig_type_info *descriptor;
  if (obj) {
    descriptor = (swig_type_info *) PyCapsule_GetPointer(obj, NULL);
  } else {
    swig_module_info *swig_module = SWIG_GetModule(0);
    descriptor = SWIG_TypeQueryModule(swig_module, swig_module, type);
    if (descriptor) {
      obj = PyCapsule_New((void*) descriptor, NULL, NULL);
      PyDict_SetItem(cache, key, obj);
      Py_DECREF(obj);
    }
  }
  Py_DECREF(key);
  return descriptor;
}

/* 
   For backward compatibility only
*/
#define SWIG_POINTER_EXCEPTION  0
#define SWIG_arg_fail(arg)      SWIG_Python_ArgFail(arg)
#define SWIG_MustGetPtr(p, type, argnum, flags)  SWIG_Python_MustGetPtr(p, type, argnum, flags)

SWIGRUNTIME int
SWIG_Python_AddErrMesg(const char* mesg, int infront)
{  
  if (PyErr_Occurred()) {
    PyObject *type = 0;
    PyObject *value = 0;
    PyObject *traceback = 0;
    PyErr_Fetch(&type, &value, &traceback);
    if (value) {
      PyObject *old_str = PyObject_Str(value);
      const char *tmp = SWIG_Python_str_AsChar(old_str);
      const char *errmesg = tmp ? tmp : "Invalid error message";
      Py_XINCREF(type);
      PyErr_Clear();
      if (infront) {
	PyErr_Format(type, "%s %s", mesg, errmesg);
      } else {
	PyErr_Format(type, "%s %s", errmesg, mesg);
      }
      SWIG_Python_str_DelForPy3(tmp);
      Py_DECREF(old_str);
    }
    return 1;
  } else {
    return 0;
  }
}
  
SWIGRUNTIME int
SWIG_Python_ArgFail(int argnum)
{
  if (PyErr_Occurred()) {
    /* add information about failing argument */
    char mesg[256];
    PyOS_snprintf(mesg, sizeof(mesg), "argument number %d:", argnum);
    return SWIG_Python_AddErrMesg(mesg, 1);
  } else {
    return 0;
  }
}

SWIGRUNTIMEINLINE const char *
SwigPyObject_GetDesc(PyObject *self)
{
  SwigPyObject *v = (SwigPyObject *)self;
  swig_type_info *ty = v ? v->ty : 0;
  return ty ? ty->str : "";
}

SWIGRUNTIME void
SWIG_Python_TypeError(const char *type, PyObject *obj)
{
  if (type) {
#if defined(SWIG_COBJECT_TYPES)
    if (obj && SwigPyObject_Check(obj)) {
      const char *otype = (const char *) SwigPyObject_GetDesc(obj);
      if (otype) {
	PyErr_Format(PyExc_TypeError, "a '%s' is expected, 'SwigPyObject(%s)' is received",
		     type, otype);
	return;
      }
    } else 
#endif      
    {
      const char *otype = (obj ? obj->ob_type->tp_name : 0); 
      if (otype) {
	PyObject *str = PyObject_Str(obj);
	const char *cstr = str ? SWIG_Python_str_AsChar(str) : 0;
	if (cstr) {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s(%s)' is received",
		       type, otype, cstr);
          SWIG_Python_str_DelForPy3(cstr);
	} else {
	  PyErr_Format(PyExc_TypeError, "a '%s' is expected, '%s' is received",
		       type, otype);
	}
	Py_XDECREF(str);
	return;
      }
    }   
    PyErr_Format(PyExc_TypeError, "a '%s' is expected", type);
  } else {
    PyErr_Format(PyExc_TypeError, "unexpected type is received");
  }
}


/* Convert a pointer value, signal an exception on a type mismatch */
SWIGRUNTIME void *
SWIG_Python_MustGetPtr(PyObject *obj, swig_type_info *ty, int SWIGUNUSEDPARM(argnum), int flags) {
  void *result;
  if (SWIG_Python_ConvertPtr(obj, &result, ty, flags) == -1) {
    PyErr_Clear();
#if SWIG_POINTER_EXCEPTION
    if (flags) {
      SWIG_Python_TypeError(SWIG_TypePrettyName(ty), obj);
      SWIG_Python_ArgFail(argnum);
    }
#endif
  }
  return result;
}

#ifdef SWIGPYTHON_BUILTIN
SWIGRUNTIME int
SWIG_Python_NonDynamicSetAttr(PyObject *obj, PyObject *name, PyObject *value) {
  PyTypeObject *tp = obj->ob_type;
  PyObject *descr;
  PyObject *encoded_name;
  descrsetfunc f;
  int res = -1;

# ifdef Py_USING_UNICODE
  if (PyString_Check(name)) {
    name = PyUnicode_Decode(PyString_AsString(name), PyString_Size(name), NULL, NULL);
    if (!name)
      return -1;
  } else if (!PyUnicode_Check(name))
# else
  if (!PyString_Check(name))
# endif
  {
    PyErr_Format(PyExc_TypeError, "attribute name must be string, not '%.200s'", name->ob_type->tp_name);
    return -1;
  } else {
    Py_INCREF(name);
  }

  if (!tp->tp_dict) {
    if (PyType_Ready(tp) < 0)
      goto done;
  }

  descr = _PyType_Lookup(tp, name);
  f = NULL;
  if (descr != NULL)
    f = descr->ob_type->tp_descr_set;
  if (!f) {
    if (PyString_Check(name)) {
      encoded_name = name;
      Py_INCREF(name);
    } else {
      encoded_name = PyUnicode_AsUTF8String(name);
      if (!encoded_name)
        return -1;
    }
    PyErr_Format(PyExc_AttributeError, "'%.100s' object has no attribute '%.200s'", tp->tp_name, PyString_AsString(encoded_name));
    Py_DECREF(encoded_name);
  } else {
    res = f(descr, obj, value);
  }
  
  done:
  Py_DECREF(name);
  return res;
}
#endif


#ifdef __cplusplus
}
#endif



#define SWIG_exception_fail(code, msg) do { SWIG_Error(code, msg); SWIG_fail; } while(0) 

#define SWIG_contract_assert(expr, msg) if (!(expr)) { SWIG_Error(SWIG_RuntimeError, msg); SWIG_fail; } else 



#ifdef __cplusplus
extern "C" {
#endif

/* Method creation and docstring support functions */

SWIGINTERN PyMethodDef *SWIG_PythonGetProxyDoc(const char *name);
SWIGINTERN PyObject *SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *func);
SWIGINTERN PyObject *SWIG_PyStaticMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *func);

#ifdef __cplusplus
}
#endif


/* -------- TYPES TABLE (BEGIN) -------- */

#define SWIGTYPE_p_NewtonWorld swig_types[0]
#define SWIGTYPE_p___m128 swig_types[1]
#define SWIGTYPE_p___m128d swig_types[2]
#define SWIGTYPE_p___m128i swig_types[3]
#define SWIGTYPE_p_char swig_types[4]
#define SWIGTYPE_p_dArrayT_ndBody_p_t swig_types[5]
#define SWIGTYPE_p_dArrayT_short_t swig_types[6]
#define SWIGTYPE_p_dBigVector swig_types[7]
#define SWIGTYPE_p_dFastRay swig_types[8]
#define SWIGTYPE_p_dLoadSaveBase__dLoadDescriptor swig_types[9]
#define SWIGTYPE_p_dLoadSaveBase__dSaveDescriptor swig_types[10]
#define SWIGTYPE_p_dMatrix swig_types[11]
#define SWIGTYPE_p_dPlane swig_types[12]
#define SWIGTYPE_p_dPolygonSoupBuilder swig_types[13]
#define SWIGTYPE_p_dQuaternion swig_types[14]
#define SWIGTYPE_p_dVector swig_types[15]
#define SWIGTYPE_p_double swig_types[16]
#define SWIGTYPE_p_float swig_types[17]
#define SWIGTYPE_p_int swig_types[18]
#define SWIGTYPE_p_long_long swig_types[19]
#define SWIGTYPE_p_ndBodiesInAabbNotify swig_types[20]
#define SWIGTYPE_p_ndBody swig_types[21]
#define SWIGTYPE_p_ndBodyDynamic swig_types[22]
#define SWIGTYPE_p_ndBodyKinematic swig_types[23]
#define SWIGTYPE_p_ndBodyKinematic__ndContactMap swig_types[24]
#define SWIGTYPE_p_ndBodyNotify swig_types[25]
#define SWIGTYPE_p_ndBodyParticleSet swig_types[26]
#define SWIGTYPE_p_ndBodyPlayerCapsule swig_types[27]
#define SWIGTYPE_p_ndBodySentinel swig_types[28]
#define SWIGTYPE_p_ndBodySphFluid swig_types[29]
#define SWIGTYPE_p_ndBodyTriggerVolume swig_types[30]
#define SWIGTYPE_p_ndBoxInfo swig_types[31]
#define SWIGTYPE_p_ndCapsuleInfo swig_types[32]
#define SWIGTYPE_p_ndChamferCylinderInfo swig_types[33]
#define SWIGTYPE_p_ndCollisionBvhInfo swig_types[34]
#define SWIGTYPE_p_ndConeInfo swig_types[35]
#define SWIGTYPE_p_ndContact swig_types[36]
#define SWIGTYPE_p_ndContactNotify swig_types[37]
#define SWIGTYPE_p_ndContactPoint swig_types[38]
#define SWIGTYPE_p_ndContactSolver swig_types[39]
#define SWIGTYPE_p_ndConvexHullInfo swig_types[40]
#define SWIGTYPE_p_ndCoumpoundInfo swig_types[41]
#define SWIGTYPE_p_ndCylinderInfo swig_types[42]
#define SWIGTYPE_p_ndHeighfieldInfo swig_types[43]
#define SWIGTYPE_p_ndJointList swig_types[44]
#define SWIGTYPE_p_ndMaterial swig_types[45]
#define SWIGTYPE_p_ndPointInfo swig_types[46]
#define SWIGTYPE_p_ndPolygonMeshDesc swig_types[47]
#define SWIGTYPE_p_ndPolygonMeshDesc__ndMesh swig_types[48]
#define SWIGTYPE_p_ndProceduralInfoInfo swig_types[49]
#define SWIGTYPE_p_ndRayCastClosestHitCallback swig_types[50]
#define SWIGTYPE_p_ndRayCastNotify swig_types[51]
#define SWIGTYPE_p_ndScene swig_types[52]
#define SWIGTYPE_p_ndShape swig_types[53]
#define SWIGTYPE_p_ndShapeBox swig_types[54]
#define SWIGTYPE_p_ndShapeCapsule swig_types[55]
#define SWIGTYPE_p_ndShapeChamferCylinder swig_types[56]
#define SWIGTYPE_p_ndShapeCompound swig_types[57]
#define SWIGTYPE_p_ndShapeCompound__ndTreeArray swig_types[58]
#define SWIGTYPE_p_ndShapeCompound__ndTreeArray__dNode swig_types[59]
#define SWIGTYPE_p_ndShapeCone swig_types[60]
#define SWIGTYPE_p_ndShapeConvex swig_types[61]
#define SWIGTYPE_p_ndShapeConvexHull swig_types[62]
#define SWIGTYPE_p_ndShapeConvexPolygon swig_types[63]
#define SWIGTYPE_p_ndShapeCylinder swig_types[64]
#define SWIGTYPE_p_ndShapeDebugCallback swig_types[65]
#define SWIGTYPE_p_ndShapeDebugCallback__ndEdgeType swig_types[66]
#define SWIGTYPE_p_ndShapeHeightfield swig_types[67]
#define SWIGTYPE_p_ndShapeInfo swig_types[68]
#define SWIGTYPE_p_ndShapeInstance swig_types[69]
#define SWIGTYPE_p_ndShapeLoaderCache swig_types[70]
#define SWIGTYPE_p_ndShapeMaterial swig_types[71]
#define SWIGTYPE_p_ndShapeMaterial__dExtraData swig_types[72]
#define SWIGTYPE_p_ndShapeMaterial__nData swig_types[73]
#define SWIGTYPE_p_ndShapeNull swig_types[74]
#define SWIGTYPE_p_ndShapePoint swig_types[75]
#define SWIGTYPE_p_ndShapeSphere swig_types[76]
#define SWIGTYPE_p_ndShapeStaticMesh swig_types[77]
#define SWIGTYPE_p_ndShapeStaticProceduralMesh swig_types[78]
#define SWIGTYPE_p_ndShapeStatic_bvh swig_types[79]
#define SWIGTYPE_p_ndSkeletonContainer swig_types[80]
#define SWIGTYPE_p_ndSphereInfo swig_types[81]
#define SWIGTYPE_p_nd__TiXmlNode swig_types[82]
#define SWIGTYPE_p_short swig_types[83]
#define SWIGTYPE_p_signed_char swig_types[84]
#define SWIGTYPE_p_void swig_types[85]
static swig_type_info *swig_types[87];
static swig_module_info swig_module = {swig_types, 86, 0, 0, 0, 0};
#define SWIG_TypeQuery(name) SWIG_TypeQueryModule(&swig_module, &swig_module, name)
#define SWIG_MangledTypeQuery(name) SWIG_MangledTypeQueryModule(&swig_module, &swig_module, name)

/* -------- TYPES TABLE (END) -------- */

#ifdef SWIG_TypeQuery
# undef SWIG_TypeQuery
#endif
#define SWIG_TypeQuery SWIG_Python_TypeQuery

/*-----------------------------------------------
              @(target):= _newton.so
  ------------------------------------------------*/
#if PY_VERSION_HEX >= 0x03000000
#  define SWIG_init    PyInit__newton

#else
#  define SWIG_init    init_newton

#endif
#define SWIG_name    "_newton"

#define SWIGVERSION 0x040002 
#define SWIG_VERSION SWIGVERSION


#define SWIG_as_voidptr(a) const_cast< void * >(static_cast< const void * >(a)) 
#define SWIG_as_voidptrptr(a) ((void)SWIG_as_voidptr(*a),reinterpret_cast< void** >(a)) 


#include <stdexcept>


namespace swig {
  class SwigPtr_PyObject {
  protected:
    PyObject *_obj;

  public:
    SwigPtr_PyObject() :_obj(0)
    {
    }

    SwigPtr_PyObject(const SwigPtr_PyObject& item) : _obj(item._obj)
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      Py_XINCREF(_obj);      
      SWIG_PYTHON_THREAD_END_BLOCK;
    }
    
    SwigPtr_PyObject(PyObject *obj, bool initial_ref = true) :_obj(obj)
    {
      if (initial_ref) {
        SWIG_PYTHON_THREAD_BEGIN_BLOCK;
        Py_XINCREF(_obj);
        SWIG_PYTHON_THREAD_END_BLOCK;
      }
    }
    
    SwigPtr_PyObject & operator=(const SwigPtr_PyObject& item) 
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      Py_XINCREF(item._obj);
      Py_XDECREF(_obj);
      _obj = item._obj;
      SWIG_PYTHON_THREAD_END_BLOCK;
      return *this;      
    }
    
    ~SwigPtr_PyObject() 
    {
      SWIG_PYTHON_THREAD_BEGIN_BLOCK;
      Py_XDECREF(_obj);
      SWIG_PYTHON_THREAD_END_BLOCK;
    }
    
    operator PyObject *() const
    {
      return _obj;
    }

    PyObject *operator->() const
    {
      return _obj;
    }
  };
}


namespace swig {
  struct SwigVar_PyObject : SwigPtr_PyObject {
    SwigVar_PyObject(PyObject* obj = 0) : SwigPtr_PyObject(obj, false) { }
    
    SwigVar_PyObject & operator = (PyObject* obj)
    {
      Py_XDECREF(_obj);
      _obj = obj;
      return *this;      
    }
  };
}


	#include <ndNewton.h>
	#include <newtonWorld.h>


#include <float.h>


#include <math.h>


/* Getting isfinite working pre C99 across multiple platforms is non-trivial. Users can provide SWIG_isfinite on older platforms. */
#ifndef SWIG_isfinite
/* isfinite() is a macro for C99 */
# if defined(isfinite)
#  define SWIG_isfinite(X) (isfinite(X))
# elif defined(__cplusplus) && __cplusplus >= 201103L
/* Use a template so that this works whether isfinite() is std::isfinite() or
 * in the global namespace.  The reality seems to vary between compiler
 * versions.
 *
 * Make sure namespace std exists to avoid compiler warnings.
 *
 * extern "C++" is required as this fragment can end up inside an extern "C" { } block
 */
namespace std { }
extern "C++" template<typename T>
inline int SWIG_isfinite_func(T x) {
  using namespace std;
  return isfinite(x);
}
#  define SWIG_isfinite(X) (SWIG_isfinite_func(X))
# elif defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 2))
#  define SWIG_isfinite(X) (__builtin_isfinite(X))
# elif defined(__clang__) && defined(__has_builtin)
#  if __has_builtin(__builtin_isfinite)
#   define SWIG_isfinite(X) (__builtin_isfinite(X))
#  endif
# elif defined(_MSC_VER)
#  define SWIG_isfinite(X) (_finite(X))
# elif defined(__sun) && defined(__SVR4)
#  include <ieeefp.h>
#  define SWIG_isfinite(X) (finite(X))
# endif
#endif


/* Accept infinite as a valid float value unless we are unable to check if a value is finite */
#ifdef SWIG_isfinite
# define SWIG_Float_Overflow_Check(X) ((X < -FLT_MAX || X > FLT_MAX) && SWIG_isfinite(X))
#else
# define SWIG_Float_Overflow_Check(X) ((X < -FLT_MAX || X > FLT_MAX))
#endif


SWIGINTERN int
SWIG_AsVal_double (PyObject *obj, double *val)
{
  int res = SWIG_TypeError;
  if (PyFloat_Check(obj)) {
    if (val) *val = PyFloat_AsDouble(obj);
    return SWIG_OK;
#if PY_VERSION_HEX < 0x03000000
  } else if (PyInt_Check(obj)) {
    if (val) *val = (double) PyInt_AsLong(obj);
    return SWIG_OK;
#endif
  } else if (PyLong_Check(obj)) {
    double v = PyLong_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    double d = PyFloat_AsDouble(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = d;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      long v = PyLong_AsLong(obj);
      if (!PyErr_Occurred()) {
	if (val) *val = v;
	return SWIG_AddCast(SWIG_AddCast(SWIG_OK));
      } else {
	PyErr_Clear();
      }
    }
  }
#endif
  return res;
}


SWIGINTERN int
SWIG_AsVal_float (PyObject * obj, float *val)
{
  double v;
  int res = SWIG_AsVal_double (obj, &v);
  if (SWIG_IsOK(res)) {
    if (SWIG_Float_Overflow_Check(v)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< float >(v);
    }
  }  
  return res;
}


#include <limits.h>
#if !defined(SWIG_NO_LLONG_MAX)
# if !defined(LLONG_MAX) && defined(__GNUC__) && defined (__LONG_LONG_MAX__)
#   define LLONG_MAX __LONG_LONG_MAX__
#   define LLONG_MIN (-LLONG_MAX - 1LL)
#   define ULLONG_MAX (LLONG_MAX * 2ULL + 1ULL)
# endif
#endif


SWIGINTERNINLINE int
SWIG_CanCastAsInteger(double *d, double min, double max) {
  double x = *d;
  if ((min <= x && x <= max)) {
   double fx = floor(x);
   double cx = ceil(x);
   double rd =  ((x - fx) < 0.5) ? fx : cx; /* simple rint */
   if ((errno == EDOM) || (errno == ERANGE)) {
     errno = 0;
   } else {
     double summ, reps, diff;
     if (rd < x) {
       diff = x - rd;
     } else if (rd > x) {
       diff = rd - x;
     } else {
       return 1;
     }
     summ = rd + x;
     reps = diff/summ;
     if (reps < 8*DBL_EPSILON) {
       *d = rd;
       return 1;
     }
   }
  }
  return 0;
}


SWIGINTERN int
SWIG_AsVal_long (PyObject *obj, long* val)
{
#if PY_VERSION_HEX < 0x03000000
  if (PyInt_Check(obj)) {
    if (val) *val = PyInt_AsLong(obj);
    return SWIG_OK;
  } else
#endif
  if (PyLong_Check(obj)) {
    long v = PyLong_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
      return SWIG_OverflowError;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    long v = PyInt_AsLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, LONG_MIN, LONG_MAX)) {
	if (val) *val = (long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsVal_int (PyObject * obj, int *val)
{
  long v;
  int res = SWIG_AsVal_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v < INT_MIN || v > INT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< int >(v);
    }
  }  
  return res;
}


  #define SWIG_From_double   PyFloat_FromDouble 


SWIGINTERNINLINE PyObject *
SWIG_From_float  (float value)
{    
  return SWIG_From_double  (value);
}


SWIGINTERNINLINE PyObject*
  SWIG_From_int  (int value)
{
  return PyInt_FromLong((long) value);
}


SWIGINTERN swig_type_info*
SWIG_pchar_descriptor(void)
{
  static int init = 0;
  static swig_type_info* info = 0;
  if (!init) {
    info = SWIG_TypeQuery("_p_char");
    init = 1;
  }
  return info;
}


SWIGINTERN int
SWIG_AsCharPtrAndSize(PyObject *obj, char** cptr, size_t* psize, int *alloc)
{
#if PY_VERSION_HEX>=0x03000000
#if defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
  if (PyBytes_Check(obj))
#else
  if (PyUnicode_Check(obj))
#endif
#else  
  if (PyString_Check(obj))
#endif
  {
    char *cstr; Py_ssize_t len;
    int ret = SWIG_OK;
#if PY_VERSION_HEX>=0x03000000
#if !defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
    if (!alloc && cptr) {
        /* We can't allow converting without allocation, since the internal
           representation of string in Python 3 is UCS-2/UCS-4 but we require
           a UTF-8 representation.
           TODO(bhy) More detailed explanation */
        return SWIG_RuntimeError;
    }
    obj = PyUnicode_AsUTF8String(obj);
    if (!obj)
      return SWIG_TypeError;
    if (alloc)
      *alloc = SWIG_NEWOBJ;
#endif
    if (PyBytes_AsStringAndSize(obj, &cstr, &len) == -1)
      return SWIG_TypeError;
#else
    if (PyString_AsStringAndSize(obj, &cstr, &len) == -1)
      return SWIG_TypeError;
#endif
    if (cptr) {
      if (alloc) {
	if (*alloc == SWIG_NEWOBJ) {
	  *cptr = reinterpret_cast< char* >(memcpy(new char[len + 1], cstr, sizeof(char)*(len + 1)));
	  *alloc = SWIG_NEWOBJ;
	} else {
	  *cptr = cstr;
	  *alloc = SWIG_OLDOBJ;
	}
      } else {
#if PY_VERSION_HEX>=0x03000000
#if defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
	*cptr = PyBytes_AsString(obj);
#else
	assert(0); /* Should never reach here with Unicode strings in Python 3 */
#endif
#else
	*cptr = SWIG_Python_str_AsChar(obj);
        if (!*cptr)
          ret = SWIG_TypeError;
#endif
      }
    }
    if (psize) *psize = len + 1;
#if PY_VERSION_HEX>=0x03000000 && !defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
    Py_XDECREF(obj);
#endif
    return ret;
  } else {
#if defined(SWIG_PYTHON_2_UNICODE)
#if defined(SWIG_PYTHON_STRICT_BYTE_CHAR)
#error "Cannot use both SWIG_PYTHON_2_UNICODE and SWIG_PYTHON_STRICT_BYTE_CHAR at once"
#endif
#if PY_VERSION_HEX<0x03000000
    if (PyUnicode_Check(obj)) {
      char *cstr; Py_ssize_t len;
      if (!alloc && cptr) {
        return SWIG_RuntimeError;
      }
      obj = PyUnicode_AsUTF8String(obj);
      if (!obj)
        return SWIG_TypeError;
      if (PyString_AsStringAndSize(obj, &cstr, &len) != -1) {
        if (cptr) {
          if (alloc) *alloc = SWIG_NEWOBJ;
          *cptr = reinterpret_cast< char* >(memcpy(new char[len + 1], cstr, sizeof(char)*(len + 1)));
        }
        if (psize) *psize = len + 1;

        Py_XDECREF(obj);
        return SWIG_OK;
      } else {
        Py_XDECREF(obj);
      }
    }
#endif
#endif

    swig_type_info* pchar_descriptor = SWIG_pchar_descriptor();
    if (pchar_descriptor) {
      void* vptr = 0;
      if (SWIG_ConvertPtr(obj, &vptr, pchar_descriptor, 0) == SWIG_OK) {
	if (cptr) *cptr = (char *) vptr;
	if (psize) *psize = vptr ? (strlen((char *)vptr) + 1) : 0;
	if (alloc) *alloc = SWIG_OLDOBJ;
	return SWIG_OK;
      }
    }
  }
  return SWIG_TypeError;
}





#if defined(LLONG_MAX) && !defined(SWIG_LONG_LONG_AVAILABLE)
#  define SWIG_LONG_LONG_AVAILABLE
#endif


#ifdef SWIG_LONG_LONG_AVAILABLE
SWIGINTERN int
SWIG_AsVal_long_SS_long (PyObject *obj, long long *val)
{
  int res = SWIG_TypeError;
  if (PyLong_Check(obj)) {
    long long v = PyLong_AsLongLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
      res = SWIG_OverflowError;
    }
  } else {
    long v;
    res = SWIG_AsVal_long (obj,&v);
    if (SWIG_IsOK(res)) {
      if (val) *val = v;
      return res;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    const double mant_max = 1LL << DBL_MANT_DIG;
    const double mant_min = -mant_max;
    double d;
    res = SWIG_AsVal_double (obj,&d);
    if (SWIG_IsOK(res) && !SWIG_CanCastAsInteger(&d, mant_min, mant_max))
      return SWIG_OverflowError;
    if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, mant_min, mant_max)) {
      if (val) *val = (long long)(d);
      return SWIG_AddCast(res);
    }
    res = SWIG_TypeError;
  }
#endif
  return res;
}
#endif


SWIGINTERNINLINE PyObject*
  SWIG_From_bool  (bool value)
{
  return PyBool_FromLong(value ? 1 : 0);
}


#ifdef SWIG_LONG_LONG_AVAILABLE
SWIGINTERNINLINE PyObject* 
SWIG_From_long_SS_long  (long long value)
{
  return ((value < LONG_MIN) || (value > LONG_MAX)) ?
    PyLong_FromLongLong(value) : PyInt_FromLong(static_cast< long >(value));
}
#endif


SWIGINTERN int
SWIG_AsVal_bool (PyObject *obj, bool *val)
{
  int r;
  if (!PyBool_Check(obj))
    return SWIG_ERROR;
  r = PyObject_IsTrue(obj);
  if (r == -1)
    return SWIG_ERROR;
  if (val) *val = r ? true : false;
  return SWIG_OK;
}


#ifdef SWIG_LONG_LONG_AVAILABLE
SWIGINTERNINLINE PyObject* 
SWIG_From_unsigned_SS_long_SS_long  (unsigned long long value)
{
  return (value > LONG_MAX) ?
    PyLong_FromUnsignedLongLong(value) : PyInt_FromLong(static_cast< long >(value));
}
#endif


SWIGINTERNINLINE PyObject*
  SWIG_From_unsigned_SS_int  (unsigned int value)
{
  return PyInt_FromSize_t((size_t) value);
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_long (PyObject *obj, unsigned long *val) 
{
#if PY_VERSION_HEX < 0x03000000
  if (PyInt_Check(obj)) {
    long v = PyInt_AsLong(obj);
    if (v >= 0) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      return SWIG_OverflowError;
    }
  } else
#endif
  if (PyLong_Check(obj)) {
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_OK;
    } else {
      PyErr_Clear();
      return SWIG_OverflowError;
    }
  }
#ifdef SWIG_PYTHON_CAST_MODE
  {
    int dispatch = 0;
    unsigned long v = PyLong_AsUnsignedLong(obj);
    if (!PyErr_Occurred()) {
      if (val) *val = v;
      return SWIG_AddCast(SWIG_OK);
    } else {
      PyErr_Clear();
    }
    if (!dispatch) {
      double d;
      int res = SWIG_AddCast(SWIG_AsVal_double (obj,&d));
      if (SWIG_IsOK(res) && SWIG_CanCastAsInteger(&d, 0, ULONG_MAX)) {
	if (val) *val = (unsigned long)(d);
	return res;
      }
    }
  }
#endif
  return SWIG_TypeError;
}


SWIGINTERN int
SWIG_AsVal_unsigned_SS_int (PyObject * obj, unsigned int *val)
{
  unsigned long v;
  int res = SWIG_AsVal_unsigned_SS_long (obj, &v);
  if (SWIG_IsOK(res)) {
    if ((v > UINT_MAX)) {
      return SWIG_OverflowError;
    } else {
      if (val) *val = static_cast< unsigned int >(v);
    }
  }  
  return res;
}

#ifdef __cplusplus
extern "C" {
#endif
SWIGINTERN PyObject *_wrap_new_dVector__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  dVector *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (dVector *)new dVector();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dVector, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_dVector__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  __m128i arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  dVector *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p___m128i,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_dVector" "', argument " "1"" of type '" "__m128i const""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_dVector" "', argument " "1"" of type '" "__m128i const""'");
    } else {
      __m128i * temp = reinterpret_cast< __m128i * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  result = (dVector *)new dVector(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dVector, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_dVector__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  __m128 arg1 ;
  void *argp1 ;
  int res1 = 0 ;
  dVector *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p___m128,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_dVector" "', argument " "1"" of type '" "__m128 const""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_dVector" "', argument " "1"" of type '" "__m128 const""'");
    } else {
      __m128 * temp = reinterpret_cast< __m128 * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  result = (dVector *)new dVector(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dVector, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_dVector__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  dVector *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_dVector" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  result = (dVector *)new dVector(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dVector, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_dVector__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float *arg1 = (float *) (float *)0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  dVector *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_dVector" "', argument " "1"" of type '" "float const *const""'"); 
  }
  arg1 = reinterpret_cast< float * >(argp1);
  result = (dVector *)new dVector((float const *)arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dVector, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_dVector__SWIG_5(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float *arg1 = (float *) (float *)0 ;
  int *arg2 = (int *) (int *)0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  dVector *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_dVector" "', argument " "1"" of type '" "float const *const""'"); 
  }
  arg1 = reinterpret_cast< float * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_dVector" "', argument " "2"" of type '" "int const *const""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  result = (dVector *)new dVector((float const *)arg1,(int const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dVector, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_dVector__SWIG_6(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double *arg1 = (double *) (double *)0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  dVector *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_dVector" "', argument " "1"" of type '" "double const *const""'"); 
  }
  arg1 = reinterpret_cast< double * >(argp1);
  result = (dVector *)new dVector((double const *)arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dVector, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_dVector__SWIG_7(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dVector *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  dVector *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_dVector" "', argument " "1"" of type '" "dVector const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_dVector" "', argument " "1"" of type '" "dVector const &""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  result = (dVector *)new dVector((dVector const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dVector, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_dVector__SWIG_8(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  dVector *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_dBigVector,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_dVector" "', argument " "1"" of type '" "dBigVector const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_dVector" "', argument " "1"" of type '" "dBigVector const &""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  result = (dVector *)new dVector((dBigVector const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dVector, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_dVector__SWIG_9(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  dVector *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_dVector" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_dVector" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_dVector" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_dVector" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  result = (dVector *)new dVector(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dVector, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_dVector__SWIG_10(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  dVector *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_dVector" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_dVector" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_dVector" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_dVector" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  result = (dVector *)new dVector(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dVector, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_dVector(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_dVector", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_dVector__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p___m128i, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_dVector__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p___m128, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_dVector__SWIG_2(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_float, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_dVector__SWIG_4(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_double, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_dVector__SWIG_6(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_dVector, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_dVector__SWIG_7(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_dBigVector, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_dVector__SWIG_8(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_dVector__SWIG_3(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_float, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_int, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_dVector__SWIG_5(self, argc, argv);
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_dVector__SWIG_10(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_dVector__SWIG_9(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_dVector'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    dVector::dVector()\n"
    "    dVector::dVector(__m128i const)\n"
    "    dVector::dVector(__m128 const)\n"
    "    dVector::dVector(float const)\n"
    "    dVector::dVector(float const *const)\n"
    "    dVector::dVector(float const *const,int const *const)\n"
    "    dVector::dVector(double const *const)\n"
    "    dVector::dVector(dVector const &)\n"
    "    dVector::dVector(dBigVector const &)\n"
    "    dVector::dVector(float,float,float,float)\n"
    "    dVector::dVector(int,int,int,int)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_dVector_GetX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector_GetX" "', argument " "1"" of type '" "dVector const *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  result = (float)((dVector const *)arg1)->GetX();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dVector_GetY(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector_GetY" "', argument " "1"" of type '" "dVector const *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  result = (float)((dVector const *)arg1)->GetY();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dVector_GetZ(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector_GetZ" "', argument " "1"" of type '" "dVector const *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  result = (float)((dVector const *)arg1)->GetZ();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dVector_GetW(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector_GetW" "', argument " "1"" of type '" "dVector const *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  result = (float)((dVector const *)arg1)->GetW();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dVector_SetX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "dVector_SetX", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector_SetX" "', argument " "1"" of type '" "dVector *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dVector_SetX" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->SetX(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dVector_SetY(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "dVector_SetY", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector_SetY" "', argument " "1"" of type '" "dVector *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dVector_SetY" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->SetY(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dVector_SetZ(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "dVector_SetZ", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector_SetZ" "', argument " "1"" of type '" "dVector *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dVector_SetZ" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->SetZ(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dVector_SetW(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "dVector_SetW", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector_SetW" "', argument " "1"" of type '" "dVector *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dVector_SetW" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->SetW(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dVector_GetScalar(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector_GetScalar" "', argument " "1"" of type '" "dVector const *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  result = (float)((dVector const *)arg1)->GetScalar();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dVector_Store(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "dVector_Store", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector_Store" "', argument " "1"" of type '" "dVector const *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dVector_Store" "', argument " "2"" of type '" "float *const""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  ((dVector const *)arg1)->Store(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dVector_BroadcastX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dVector result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector_BroadcastX" "', argument " "1"" of type '" "dVector const *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  result = ((dVector const *)arg1)->BroadcastX();
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dVector_BroadcastY(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dVector result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector_BroadcastY" "', argument " "1"" of type '" "dVector const *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  result = ((dVector const *)arg1)->BroadcastY();
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dVector_BroadcastZ(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dVector result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector_BroadcastZ" "', argument " "1"" of type '" "dVector const *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  result = ((dVector const *)arg1)->BroadcastZ();
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dVector_BroadcastW(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dVector result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector_BroadcastW" "', argument " "1"" of type '" "dVector const *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  result = ((dVector const *)arg1)->BroadcastW();
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dVector_Scale(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  dVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "dVector_Scale", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector_Scale" "', argument " "1"" of type '" "dVector const *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dVector_Scale" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = ((dVector const *)arg1)->Scale(arg2);
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dVector_GetElement__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector_GetElement" "', argument " "1"" of type '" "dVector *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dVector_GetElement" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (float *) &(arg1)->operator [](arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dVector_GetElement__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector_GetElement" "', argument " "1"" of type '" "dVector const *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dVector_GetElement" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (float *) &((dVector const *)arg1)->operator [](arg2);
  resultobj = SWIG_From_float(static_cast< float >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dVector_GetElement(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "dVector_GetElement", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_dVector, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_dVector_GetElement__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_dVector, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_dVector_GetElement__SWIG_1(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'dVector_GetElement'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    dVector::operator [](int)\n"
    "    dVector::operator [](int) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_dVector___add__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  dVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "dVector___add__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector___add__" "', argument " "1"" of type '" "dVector const *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dVector___add__" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dVector___add__" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  result = ((dVector const *)arg1)->operator +((dVector const &)*arg2);
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_dVector___sub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  dVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "dVector___sub__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector___sub__" "', argument " "1"" of type '" "dVector const *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dVector___sub__" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dVector___sub__" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  result = ((dVector const *)arg1)->operator -((dVector const &)*arg2);
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_dVector___mul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  dVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "dVector___mul__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector___mul__" "', argument " "1"" of type '" "dVector const *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dVector___mul__" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dVector___mul__" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  result = ((dVector const *)arg1)->operator *((dVector const &)*arg2);
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_dVector___iadd__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  dVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dVector *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "dVector___iadd__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector___iadd__" "', argument " "1"" of type '" "dVector *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dVector___iadd__" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dVector___iadd__" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  result = (dVector *) &(arg1)->operator +=((dVector const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dVector___isub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  dVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dVector *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "dVector___isub__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector___isub__" "', argument " "1"" of type '" "dVector *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dVector___isub__" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dVector___isub__" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  result = (dVector *) &(arg1)->operator -=((dVector const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dVector___imul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  dVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dVector *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "dVector___imul__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector___imul__" "', argument " "1"" of type '" "dVector *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dVector___imul__" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dVector___imul__" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  result = (dVector *) &(arg1)->operator *=((dVector const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dVector_CrossProduct__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  dVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  dVector result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector_CrossProduct" "', argument " "1"" of type '" "dVector const *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dVector_CrossProduct" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dVector_CrossProduct" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  result = ((dVector const *)arg1)->CrossProduct((dVector const &)*arg2);
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dVector_DotProduct(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  dVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "dVector_DotProduct", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector_DotProduct" "', argument " "1"" of type '" "dVector const *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dVector_DotProduct" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dVector_DotProduct" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  result = ((dVector const *)arg1)->DotProduct((dVector const &)*arg2);
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dVector_CrossProduct__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  dVector *arg2 = 0 ;
  dVector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  dVector result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector_CrossProduct" "', argument " "1"" of type '" "dVector const *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dVector_CrossProduct" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dVector_CrossProduct" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "dVector_CrossProduct" "', argument " "3"" of type '" "dVector const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dVector_CrossProduct" "', argument " "3"" of type '" "dVector const &""'"); 
  }
  arg3 = reinterpret_cast< dVector * >(argp3);
  result = ((dVector const *)arg1)->CrossProduct((dVector const &)*arg2,(dVector const &)*arg3);
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dVector_CrossProduct(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "dVector_CrossProduct", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_dVector, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_dVector, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_dVector_CrossProduct__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_dVector, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_dVector, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_dVector, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_dVector_CrossProduct__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'dVector_CrossProduct'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    dVector::CrossProduct(dVector const &) const\n"
    "    dVector::CrossProduct(dVector const &,dVector const &) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_dVector_Reciproc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dVector result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector_Reciproc" "', argument " "1"" of type '" "dVector const *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  result = ((dVector const *)arg1)->Reciproc();
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dVector_MulAdd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  dVector *arg2 = 0 ;
  dVector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject *swig_obj[3] ;
  dVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "dVector_MulAdd", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector_MulAdd" "', argument " "1"" of type '" "dVector const *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dVector_MulAdd" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dVector_MulAdd" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "dVector_MulAdd" "', argument " "3"" of type '" "dVector const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dVector_MulAdd" "', argument " "3"" of type '" "dVector const &""'"); 
  }
  arg3 = reinterpret_cast< dVector * >(argp3);
  result = ((dVector const *)arg1)->MulAdd((dVector const &)*arg2,(dVector const &)*arg3);
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dVector_MulSub(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  dVector *arg2 = 0 ;
  dVector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject *swig_obj[3] ;
  dVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "dVector_MulSub", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector_MulSub" "', argument " "1"" of type '" "dVector const *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dVector_MulSub" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dVector_MulSub" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "dVector_MulSub" "', argument " "3"" of type '" "dVector const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dVector_MulSub" "', argument " "3"" of type '" "dVector const &""'"); 
  }
  arg3 = reinterpret_cast< dVector * >(argp3);
  result = ((dVector const *)arg1)->MulSub((dVector const &)*arg2,(dVector const &)*arg3);
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dVector_AddHorizontal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dVector result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector_AddHorizontal" "', argument " "1"" of type '" "dVector const *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  result = ((dVector const *)arg1)->AddHorizontal();
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dVector_Abs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dVector result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector_Abs" "', argument " "1"" of type '" "dVector const *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  result = ((dVector const *)arg1)->Abs();
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dVector_GetMax__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  dVector result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector_GetMax" "', argument " "1"" of type '" "dVector const *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  result = ((dVector const *)arg1)->GetMax();
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dVector_GetMax__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  dVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  dVector result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector_GetMax" "', argument " "1"" of type '" "dVector const *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dVector_GetMax" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dVector_GetMax" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  result = ((dVector const *)arg1)->GetMax((dVector const &)*arg2);
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dVector_GetMax(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "dVector_GetMax", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_dVector, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_dVector_GetMax__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_dVector, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_dVector, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_dVector_GetMax__SWIG_1(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'dVector_GetMax'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    dVector::GetMax() const\n"
    "    dVector::GetMax(dVector const &) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_dVector_GetMin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  dVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "dVector_GetMin", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector_GetMin" "', argument " "1"" of type '" "dVector const *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dVector_GetMin" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dVector_GetMin" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  result = ((dVector const *)arg1)->GetMin((dVector const &)*arg2);
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dVector_GetInt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dVector result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector_GetInt" "', argument " "1"" of type '" "dVector const *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  result = ((dVector const *)arg1)->GetInt();
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dVector_TestZero(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dVector result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector_TestZero" "', argument " "1"" of type '" "dVector const *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  result = ((dVector const *)arg1)->TestZero();
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dVector_Floor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dVector result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector_Floor" "', argument " "1"" of type '" "dVector const *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  result = ((dVector const *)arg1)->Floor();
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dVector_Sqrt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dVector result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector_Sqrt" "', argument " "1"" of type '" "dVector const *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  result = ((dVector const *)arg1)->Sqrt();
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dVector_InvSqrt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dVector result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector_InvSqrt" "', argument " "1"" of type '" "dVector const *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  result = ((dVector const *)arg1)->InvSqrt();
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dVector_InvMagSqrt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dVector result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector_InvMagSqrt" "', argument " "1"" of type '" "dVector const *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  result = ((dVector const *)arg1)->InvMagSqrt();
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dVector_Normalize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dVector result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector_Normalize" "', argument " "1"" of type '" "dVector const *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  result = ((dVector const *)arg1)->Normalize();
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dVector___gt__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  dVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "dVector___gt__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector___gt__" "', argument " "1"" of type '" "dVector const *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dVector___gt__" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dVector___gt__" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  result = ((dVector const *)arg1)->operator >((dVector const &)*arg2);
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_dVector___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  dVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "dVector___eq__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector___eq__" "', argument " "1"" of type '" "dVector const *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dVector___eq__" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dVector___eq__" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  result = ((dVector const *)arg1)->operator ==((dVector const &)*arg2);
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_dVector___lt__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  dVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "dVector___lt__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector___lt__" "', argument " "1"" of type '" "dVector const *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dVector___lt__" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dVector___lt__" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  result = ((dVector const *)arg1)->operator <((dVector const &)*arg2);
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_dVector___ge__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  dVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "dVector___ge__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector___ge__" "', argument " "1"" of type '" "dVector const *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dVector___ge__" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dVector___ge__" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  result = ((dVector const *)arg1)->operator >=((dVector const &)*arg2);
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_dVector___le__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  dVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "dVector___le__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector___le__" "', argument " "1"" of type '" "dVector const *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dVector___le__" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dVector___le__" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  result = ((dVector const *)arg1)->operator <=((dVector const &)*arg2);
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_dVector___and__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  dVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "dVector___and__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector___and__" "', argument " "1"" of type '" "dVector const *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dVector___and__" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dVector___and__" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  result = ((dVector const *)arg1)->operator &((dVector const &)*arg2);
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_dVector___or__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  dVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "dVector___or__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector___or__" "', argument " "1"" of type '" "dVector const *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dVector___or__" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dVector___or__" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  result = ((dVector const *)arg1)->operator |((dVector const &)*arg2);
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_dVector___xor__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  dVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "dVector___xor__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector___xor__" "', argument " "1"" of type '" "dVector const *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dVector___xor__" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dVector___xor__" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  result = ((dVector const *)arg1)->operator ^((dVector const &)*arg2);
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_dVector_AndNot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  dVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "dVector_AndNot", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector_AndNot" "', argument " "1"" of type '" "dVector const *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dVector_AndNot" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dVector_AndNot" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  result = ((dVector const *)arg1)->AndNot((dVector const &)*arg2);
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dVector_Select(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  dVector *arg2 = 0 ;
  dVector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject *swig_obj[3] ;
  dVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "dVector_Select", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector_Select" "', argument " "1"" of type '" "dVector const *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dVector_Select" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dVector_Select" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "dVector_Select" "', argument " "3"" of type '" "dVector const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dVector_Select" "', argument " "3"" of type '" "dVector const &""'"); 
  }
  arg3 = reinterpret_cast< dVector * >(argp3);
  result = ((dVector const *)arg1)->Select((dVector const &)*arg2,(dVector const &)*arg3);
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dVector_GetSignMask(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector_GetSignMask" "', argument " "1"" of type '" "dVector const *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  result = (int)((dVector const *)arg1)->GetSignMask();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dVector_ShiftRight(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dVector result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector_ShiftRight" "', argument " "1"" of type '" "dVector const *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  result = ((dVector const *)arg1)->ShiftRight();
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dVector_ShiftTripleRight(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dVector result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector_ShiftTripleRight" "', argument " "1"" of type '" "dVector const *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  result = ((dVector const *)arg1)->ShiftTripleRight();
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dVector_ShiftTripleLeft(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dVector result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector_ShiftTripleLeft" "', argument " "1"" of type '" "dVector const *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  result = ((dVector const *)arg1)->ShiftTripleLeft();
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dVector_ShiftRightLogical(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  dVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "dVector_ShiftRightLogical", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector_ShiftRightLogical" "', argument " "1"" of type '" "dVector const *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dVector_ShiftRightLogical" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = ((dVector const *)arg1)->ShiftRightLogical(arg2);
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dVector_Transpose4x4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = 0 ;
  dVector *arg2 = 0 ;
  dVector *arg3 = 0 ;
  dVector *arg4 = 0 ;
  dVector *arg5 = 0 ;
  dVector *arg6 = 0 ;
  dVector *arg7 = 0 ;
  dVector *arg8 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  PyObject *swig_obj[8] ;
  
  if (!SWIG_Python_UnpackTuple(args, "dVector_Transpose4x4", 8, 8, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_dVector,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector_Transpose4x4" "', argument " "1"" of type '" "dVector &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dVector_Transpose4x4" "', argument " "1"" of type '" "dVector &""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dVector_Transpose4x4" "', argument " "2"" of type '" "dVector &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dVector_Transpose4x4" "', argument " "2"" of type '" "dVector &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_dVector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "dVector_Transpose4x4" "', argument " "3"" of type '" "dVector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dVector_Transpose4x4" "', argument " "3"" of type '" "dVector &""'"); 
  }
  arg3 = reinterpret_cast< dVector * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_dVector,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "dVector_Transpose4x4" "', argument " "4"" of type '" "dVector &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dVector_Transpose4x4" "', argument " "4"" of type '" "dVector &""'"); 
  }
  arg4 = reinterpret_cast< dVector * >(argp4);
  res5 = SWIG_ConvertPtr(swig_obj[4], &argp5, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "dVector_Transpose4x4" "', argument " "5"" of type '" "dVector const &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dVector_Transpose4x4" "', argument " "5"" of type '" "dVector const &""'"); 
  }
  arg5 = reinterpret_cast< dVector * >(argp5);
  res6 = SWIG_ConvertPtr(swig_obj[5], &argp6, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "dVector_Transpose4x4" "', argument " "6"" of type '" "dVector const &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dVector_Transpose4x4" "', argument " "6"" of type '" "dVector const &""'"); 
  }
  arg6 = reinterpret_cast< dVector * >(argp6);
  res7 = SWIG_ConvertPtr(swig_obj[6], &argp7, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "dVector_Transpose4x4" "', argument " "7"" of type '" "dVector const &""'"); 
  }
  if (!argp7) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dVector_Transpose4x4" "', argument " "7"" of type '" "dVector const &""'"); 
  }
  arg7 = reinterpret_cast< dVector * >(argp7);
  res8 = SWIG_ConvertPtr(swig_obj[7], &argp8, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "dVector_Transpose4x4" "', argument " "8"" of type '" "dVector const &""'"); 
  }
  if (!argp8) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dVector_Transpose4x4" "', argument " "8"" of type '" "dVector const &""'"); 
  }
  arg8 = reinterpret_cast< dVector * >(argp8);
  dVector::Transpose4x4(*arg1,*arg2,*arg3,*arg4,(dVector const &)*arg5,(dVector const &)*arg6,(dVector const &)*arg7,(dVector const &)*arg8);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dVector_Trace(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  char *arg2 = (char *) (char *)0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  char *buf2 = 0 ;
  int alloc2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "dVector_Trace", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dVector_Trace" "', argument " "1"" of type '" "dVector const *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  res2 = SWIG_AsCharPtrAndSize(swig_obj[1], &buf2, NULL, &alloc2);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dVector_Trace" "', argument " "2"" of type '" "char *const""'");
  }
  arg2 = reinterpret_cast< char * >(buf2);
  ((dVector const *)arg1)->Trace(arg2);
  resultobj = SWIG_Py_Void();
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return resultobj;
fail:
  if (alloc2 == SWIG_NEWOBJ) delete[] buf2;
  return NULL;
}


SWIGINTERN int Swig_var_dVector_m_zero_set(PyObject *_val) {
  {
    void *argp = 0;
    int res = SWIG_ConvertPtr(_val, &argp, SWIGTYPE_p_dVector,  0  | 0);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""dVector::m_zero""' of type '""dVector""'");
    }
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""dVector::m_zero""' of type '""dVector""'");
    } else {
      dVector * temp;
      temp  = reinterpret_cast< dVector * >(argp);
      dVector::m_zero = *temp;
      if (SWIG_IsNewObj(res)) delete temp;
    }
  }
  return 0;
fail:
  return 1;
}


SWIGINTERN PyObject *Swig_var_dVector_m_zero_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_NewPointerObj(SWIG_as_voidptr(&dVector::m_zero), SWIGTYPE_p_dVector,  0 );
  return pyobj;
}


SWIGINTERN PyObject *_wrap_dVector_m_zero_get(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(args)) {
  return Swig_var_dVector_m_zero_get();
}


SWIGINTERN PyObject *_wrap_dVector_m_zero_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  int res;
  
  res = Swig_var_dVector_m_zero_set(args);
  return !res ? SWIG_Py_Void() : NULL;
}


SWIGINTERN int Swig_var_dVector_m_one_set(PyObject *_val) {
  {
    void *argp = 0;
    int res = SWIG_ConvertPtr(_val, &argp, SWIGTYPE_p_dVector,  0  | 0);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""dVector::m_one""' of type '""dVector""'");
    }
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""dVector::m_one""' of type '""dVector""'");
    } else {
      dVector * temp;
      temp  = reinterpret_cast< dVector * >(argp);
      dVector::m_one = *temp;
      if (SWIG_IsNewObj(res)) delete temp;
    }
  }
  return 0;
fail:
  return 1;
}


SWIGINTERN PyObject *Swig_var_dVector_m_one_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_NewPointerObj(SWIG_as_voidptr(&dVector::m_one), SWIGTYPE_p_dVector,  0 );
  return pyobj;
}


SWIGINTERN PyObject *_wrap_dVector_m_one_get(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(args)) {
  return Swig_var_dVector_m_one_get();
}


SWIGINTERN PyObject *_wrap_dVector_m_one_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  int res;
  
  res = Swig_var_dVector_m_one_set(args);
  return !res ? SWIG_Py_Void() : NULL;
}


SWIGINTERN int Swig_var_dVector_m_wOne_set(PyObject *_val) {
  {
    void *argp = 0;
    int res = SWIG_ConvertPtr(_val, &argp, SWIGTYPE_p_dVector,  0  | 0);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""dVector::m_wOne""' of type '""dVector""'");
    }
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""dVector::m_wOne""' of type '""dVector""'");
    } else {
      dVector * temp;
      temp  = reinterpret_cast< dVector * >(argp);
      dVector::m_wOne = *temp;
      if (SWIG_IsNewObj(res)) delete temp;
    }
  }
  return 0;
fail:
  return 1;
}


SWIGINTERN PyObject *Swig_var_dVector_m_wOne_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_NewPointerObj(SWIG_as_voidptr(&dVector::m_wOne), SWIGTYPE_p_dVector,  0 );
  return pyobj;
}


SWIGINTERN PyObject *_wrap_dVector_m_wOne_get(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(args)) {
  return Swig_var_dVector_m_wOne_get();
}


SWIGINTERN PyObject *_wrap_dVector_m_wOne_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  int res;
  
  res = Swig_var_dVector_m_wOne_set(args);
  return !res ? SWIG_Py_Void() : NULL;
}


SWIGINTERN int Swig_var_dVector_m_two_set(PyObject *_val) {
  {
    void *argp = 0;
    int res = SWIG_ConvertPtr(_val, &argp, SWIGTYPE_p_dVector,  0  | 0);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""dVector::m_two""' of type '""dVector""'");
    }
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""dVector::m_two""' of type '""dVector""'");
    } else {
      dVector * temp;
      temp  = reinterpret_cast< dVector * >(argp);
      dVector::m_two = *temp;
      if (SWIG_IsNewObj(res)) delete temp;
    }
  }
  return 0;
fail:
  return 1;
}


SWIGINTERN PyObject *Swig_var_dVector_m_two_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_NewPointerObj(SWIG_as_voidptr(&dVector::m_two), SWIGTYPE_p_dVector,  0 );
  return pyobj;
}


SWIGINTERN PyObject *_wrap_dVector_m_two_get(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(args)) {
  return Swig_var_dVector_m_two_get();
}


SWIGINTERN PyObject *_wrap_dVector_m_two_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  int res;
  
  res = Swig_var_dVector_m_two_set(args);
  return !res ? SWIG_Py_Void() : NULL;
}


SWIGINTERN int Swig_var_dVector_m_half_set(PyObject *_val) {
  {
    void *argp = 0;
    int res = SWIG_ConvertPtr(_val, &argp, SWIGTYPE_p_dVector,  0  | 0);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""dVector::m_half""' of type '""dVector""'");
    }
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""dVector::m_half""' of type '""dVector""'");
    } else {
      dVector * temp;
      temp  = reinterpret_cast< dVector * >(argp);
      dVector::m_half = *temp;
      if (SWIG_IsNewObj(res)) delete temp;
    }
  }
  return 0;
fail:
  return 1;
}


SWIGINTERN PyObject *Swig_var_dVector_m_half_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_NewPointerObj(SWIG_as_voidptr(&dVector::m_half), SWIGTYPE_p_dVector,  0 );
  return pyobj;
}


SWIGINTERN PyObject *_wrap_dVector_m_half_get(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(args)) {
  return Swig_var_dVector_m_half_get();
}


SWIGINTERN PyObject *_wrap_dVector_m_half_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  int res;
  
  res = Swig_var_dVector_m_half_set(args);
  return !res ? SWIG_Py_Void() : NULL;
}


SWIGINTERN int Swig_var_dVector_m_three_set(PyObject *_val) {
  {
    void *argp = 0;
    int res = SWIG_ConvertPtr(_val, &argp, SWIGTYPE_p_dVector,  0  | 0);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""dVector::m_three""' of type '""dVector""'");
    }
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""dVector::m_three""' of type '""dVector""'");
    } else {
      dVector * temp;
      temp  = reinterpret_cast< dVector * >(argp);
      dVector::m_three = *temp;
      if (SWIG_IsNewObj(res)) delete temp;
    }
  }
  return 0;
fail:
  return 1;
}


SWIGINTERN PyObject *Swig_var_dVector_m_three_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_NewPointerObj(SWIG_as_voidptr(&dVector::m_three), SWIGTYPE_p_dVector,  0 );
  return pyobj;
}


SWIGINTERN PyObject *_wrap_dVector_m_three_get(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(args)) {
  return Swig_var_dVector_m_three_get();
}


SWIGINTERN PyObject *_wrap_dVector_m_three_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  int res;
  
  res = Swig_var_dVector_m_three_set(args);
  return !res ? SWIG_Py_Void() : NULL;
}


SWIGINTERN int Swig_var_dVector_m_negOne_set(PyObject *_val) {
  {
    void *argp = 0;
    int res = SWIG_ConvertPtr(_val, &argp, SWIGTYPE_p_dVector,  0  | 0);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""dVector::m_negOne""' of type '""dVector""'");
    }
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""dVector::m_negOne""' of type '""dVector""'");
    } else {
      dVector * temp;
      temp  = reinterpret_cast< dVector * >(argp);
      dVector::m_negOne = *temp;
      if (SWIG_IsNewObj(res)) delete temp;
    }
  }
  return 0;
fail:
  return 1;
}


SWIGINTERN PyObject *Swig_var_dVector_m_negOne_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_NewPointerObj(SWIG_as_voidptr(&dVector::m_negOne), SWIGTYPE_p_dVector,  0 );
  return pyobj;
}


SWIGINTERN PyObject *_wrap_dVector_m_negOne_get(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(args)) {
  return Swig_var_dVector_m_negOne_get();
}


SWIGINTERN PyObject *_wrap_dVector_m_negOne_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  int res;
  
  res = Swig_var_dVector_m_negOne_set(args);
  return !res ? SWIG_Py_Void() : NULL;
}


SWIGINTERN int Swig_var_dVector_m_xMask_set(PyObject *_val) {
  {
    void *argp = 0;
    int res = SWIG_ConvertPtr(_val, &argp, SWIGTYPE_p_dVector,  0  | 0);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""dVector::m_xMask""' of type '""dVector""'");
    }
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""dVector::m_xMask""' of type '""dVector""'");
    } else {
      dVector * temp;
      temp  = reinterpret_cast< dVector * >(argp);
      dVector::m_xMask = *temp;
      if (SWIG_IsNewObj(res)) delete temp;
    }
  }
  return 0;
fail:
  return 1;
}


SWIGINTERN PyObject *Swig_var_dVector_m_xMask_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_NewPointerObj(SWIG_as_voidptr(&dVector::m_xMask), SWIGTYPE_p_dVector,  0 );
  return pyobj;
}


SWIGINTERN PyObject *_wrap_dVector_m_xMask_get(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(args)) {
  return Swig_var_dVector_m_xMask_get();
}


SWIGINTERN PyObject *_wrap_dVector_m_xMask_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  int res;
  
  res = Swig_var_dVector_m_xMask_set(args);
  return !res ? SWIG_Py_Void() : NULL;
}


SWIGINTERN int Swig_var_dVector_m_yMask_set(PyObject *_val) {
  {
    void *argp = 0;
    int res = SWIG_ConvertPtr(_val, &argp, SWIGTYPE_p_dVector,  0  | 0);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""dVector::m_yMask""' of type '""dVector""'");
    }
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""dVector::m_yMask""' of type '""dVector""'");
    } else {
      dVector * temp;
      temp  = reinterpret_cast< dVector * >(argp);
      dVector::m_yMask = *temp;
      if (SWIG_IsNewObj(res)) delete temp;
    }
  }
  return 0;
fail:
  return 1;
}


SWIGINTERN PyObject *Swig_var_dVector_m_yMask_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_NewPointerObj(SWIG_as_voidptr(&dVector::m_yMask), SWIGTYPE_p_dVector,  0 );
  return pyobj;
}


SWIGINTERN PyObject *_wrap_dVector_m_yMask_get(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(args)) {
  return Swig_var_dVector_m_yMask_get();
}


SWIGINTERN PyObject *_wrap_dVector_m_yMask_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  int res;
  
  res = Swig_var_dVector_m_yMask_set(args);
  return !res ? SWIG_Py_Void() : NULL;
}


SWIGINTERN int Swig_var_dVector_m_zMask_set(PyObject *_val) {
  {
    void *argp = 0;
    int res = SWIG_ConvertPtr(_val, &argp, SWIGTYPE_p_dVector,  0  | 0);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""dVector::m_zMask""' of type '""dVector""'");
    }
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""dVector::m_zMask""' of type '""dVector""'");
    } else {
      dVector * temp;
      temp  = reinterpret_cast< dVector * >(argp);
      dVector::m_zMask = *temp;
      if (SWIG_IsNewObj(res)) delete temp;
    }
  }
  return 0;
fail:
  return 1;
}


SWIGINTERN PyObject *Swig_var_dVector_m_zMask_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_NewPointerObj(SWIG_as_voidptr(&dVector::m_zMask), SWIGTYPE_p_dVector,  0 );
  return pyobj;
}


SWIGINTERN PyObject *_wrap_dVector_m_zMask_get(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(args)) {
  return Swig_var_dVector_m_zMask_get();
}


SWIGINTERN PyObject *_wrap_dVector_m_zMask_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  int res;
  
  res = Swig_var_dVector_m_zMask_set(args);
  return !res ? SWIG_Py_Void() : NULL;
}


SWIGINTERN int Swig_var_dVector_m_wMask_set(PyObject *_val) {
  {
    void *argp = 0;
    int res = SWIG_ConvertPtr(_val, &argp, SWIGTYPE_p_dVector,  0  | 0);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""dVector::m_wMask""' of type '""dVector""'");
    }
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""dVector::m_wMask""' of type '""dVector""'");
    } else {
      dVector * temp;
      temp  = reinterpret_cast< dVector * >(argp);
      dVector::m_wMask = *temp;
      if (SWIG_IsNewObj(res)) delete temp;
    }
  }
  return 0;
fail:
  return 1;
}


SWIGINTERN PyObject *Swig_var_dVector_m_wMask_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_NewPointerObj(SWIG_as_voidptr(&dVector::m_wMask), SWIGTYPE_p_dVector,  0 );
  return pyobj;
}


SWIGINTERN PyObject *_wrap_dVector_m_wMask_get(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(args)) {
  return Swig_var_dVector_m_wMask_get();
}


SWIGINTERN PyObject *_wrap_dVector_m_wMask_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  int res;
  
  res = Swig_var_dVector_m_wMask_set(args);
  return !res ? SWIG_Py_Void() : NULL;
}


SWIGINTERN int Swig_var_dVector_m_xyzwMask_set(PyObject *_val) {
  {
    void *argp = 0;
    int res = SWIG_ConvertPtr(_val, &argp, SWIGTYPE_p_dVector,  0  | 0);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""dVector::m_xyzwMask""' of type '""dVector""'");
    }
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""dVector::m_xyzwMask""' of type '""dVector""'");
    } else {
      dVector * temp;
      temp  = reinterpret_cast< dVector * >(argp);
      dVector::m_xyzwMask = *temp;
      if (SWIG_IsNewObj(res)) delete temp;
    }
  }
  return 0;
fail:
  return 1;
}


SWIGINTERN PyObject *Swig_var_dVector_m_xyzwMask_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_NewPointerObj(SWIG_as_voidptr(&dVector::m_xyzwMask), SWIGTYPE_p_dVector,  0 );
  return pyobj;
}


SWIGINTERN PyObject *_wrap_dVector_m_xyzwMask_get(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(args)) {
  return Swig_var_dVector_m_xyzwMask_get();
}


SWIGINTERN PyObject *_wrap_dVector_m_xyzwMask_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  int res;
  
  res = Swig_var_dVector_m_xyzwMask_set(args);
  return !res ? SWIG_Py_Void() : NULL;
}


SWIGINTERN int Swig_var_dVector_m_epsilon_set(PyObject *_val) {
  {
    void *argp = 0;
    int res = SWIG_ConvertPtr(_val, &argp, SWIGTYPE_p_dVector,  0  | 0);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""dVector::m_epsilon""' of type '""dVector""'");
    }
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""dVector::m_epsilon""' of type '""dVector""'");
    } else {
      dVector * temp;
      temp  = reinterpret_cast< dVector * >(argp);
      dVector::m_epsilon = *temp;
      if (SWIG_IsNewObj(res)) delete temp;
    }
  }
  return 0;
fail:
  return 1;
}


SWIGINTERN PyObject *Swig_var_dVector_m_epsilon_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_NewPointerObj(SWIG_as_voidptr(&dVector::m_epsilon), SWIGTYPE_p_dVector,  0 );
  return pyobj;
}


SWIGINTERN PyObject *_wrap_dVector_m_epsilon_get(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(args)) {
  return Swig_var_dVector_m_epsilon_get();
}


SWIGINTERN PyObject *_wrap_dVector_m_epsilon_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  int res;
  
  res = Swig_var_dVector_m_epsilon_set(args);
  return !res ? SWIG_Py_Void() : NULL;
}


SWIGINTERN int Swig_var_dVector_m_signMask_set(PyObject *_val) {
  {
    void *argp = 0;
    int res = SWIG_ConvertPtr(_val, &argp, SWIGTYPE_p_dVector,  0  | 0);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""dVector::m_signMask""' of type '""dVector""'");
    }
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""dVector::m_signMask""' of type '""dVector""'");
    } else {
      dVector * temp;
      temp  = reinterpret_cast< dVector * >(argp);
      dVector::m_signMask = *temp;
      if (SWIG_IsNewObj(res)) delete temp;
    }
  }
  return 0;
fail:
  return 1;
}


SWIGINTERN PyObject *Swig_var_dVector_m_signMask_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_NewPointerObj(SWIG_as_voidptr(&dVector::m_signMask), SWIGTYPE_p_dVector,  0 );
  return pyobj;
}


SWIGINTERN PyObject *_wrap_dVector_m_signMask_get(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(args)) {
  return Swig_var_dVector_m_signMask_get();
}


SWIGINTERN PyObject *_wrap_dVector_m_signMask_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  int res;
  
  res = Swig_var_dVector_m_signMask_set(args);
  return !res ? SWIG_Py_Void() : NULL;
}


SWIGINTERN int Swig_var_dVector_m_triplexMask_set(PyObject *_val) {
  {
    void *argp = 0;
    int res = SWIG_ConvertPtr(_val, &argp, SWIGTYPE_p_dVector,  0  | 0);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""dVector::m_triplexMask""' of type '""dVector""'");
    }
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""dVector::m_triplexMask""' of type '""dVector""'");
    } else {
      dVector * temp;
      temp  = reinterpret_cast< dVector * >(argp);
      dVector::m_triplexMask = *temp;
      if (SWIG_IsNewObj(res)) delete temp;
    }
  }
  return 0;
fail:
  return 1;
}


SWIGINTERN PyObject *Swig_var_dVector_m_triplexMask_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_NewPointerObj(SWIG_as_voidptr(&dVector::m_triplexMask), SWIGTYPE_p_dVector,  0 );
  return pyobj;
}


SWIGINTERN PyObject *_wrap_dVector_m_triplexMask_get(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(args)) {
  return Swig_var_dVector_m_triplexMask_get();
}


SWIGINTERN PyObject *_wrap_dVector_m_triplexMask_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  int res;
  
  res = Swig_var_dVector_m_triplexMask_set(args);
  return !res ? SWIG_Py_Void() : NULL;
}


SWIGINTERN PyObject *_wrap_delete_dVector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector *arg1 = (dVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dVector, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_dVector" "', argument " "1"" of type '" "dVector *""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *dVector_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_dVector, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *dVector_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_dBigVector__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  dBigVector *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (dBigVector *)new dBigVector();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dBigVector, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_dBigVector__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  dBigVector *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_dBigVector,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_dBigVector" "', argument " "1"" of type '" "dBigVector const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_dBigVector" "', argument " "1"" of type '" "dBigVector const &""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  result = (dBigVector *)new dBigVector((dBigVector const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dBigVector, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_dBigVector__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  __m128d arg1 ;
  __m128d arg2 ;
  void *argp1 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  dBigVector *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p___m128d,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_dBigVector" "', argument " "1"" of type '" "__m128d const""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_dBigVector" "', argument " "1"" of type '" "__m128d const""'");
    } else {
      __m128d * temp = reinterpret_cast< __m128d * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p___m128d,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_dBigVector" "', argument " "2"" of type '" "__m128d const""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_dBigVector" "', argument " "2"" of type '" "__m128d const""'");
    } else {
      __m128d * temp = reinterpret_cast< __m128d * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (dBigVector *)new dBigVector(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dBigVector, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_dBigVector__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  __m128i arg1 ;
  __m128i arg2 ;
  void *argp1 ;
  int res1 = 0 ;
  void *argp2 ;
  int res2 = 0 ;
  dBigVector *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  {
    res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p___m128i,  0  | 0);
    if (!SWIG_IsOK(res1)) {
      SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_dBigVector" "', argument " "1"" of type '" "__m128i const""'"); 
    }  
    if (!argp1) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_dBigVector" "', argument " "1"" of type '" "__m128i const""'");
    } else {
      __m128i * temp = reinterpret_cast< __m128i * >(argp1);
      arg1 = *temp;
      if (SWIG_IsNewObj(res1)) delete temp;
    }
  }
  {
    res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p___m128i,  0  | 0);
    if (!SWIG_IsOK(res2)) {
      SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_dBigVector" "', argument " "2"" of type '" "__m128i const""'"); 
    }  
    if (!argp2) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_dBigVector" "', argument " "2"" of type '" "__m128i const""'");
    } else {
      __m128i * temp = reinterpret_cast< __m128i * >(argp2);
      arg2 = *temp;
      if (SWIG_IsNewObj(res2)) delete temp;
    }
  }
  result = (dBigVector *)new dBigVector(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dBigVector, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_dBigVector__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  double val1 ;
  int ecode1 = 0 ;
  dBigVector *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_dBigVector" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  result = (dBigVector *)new dBigVector(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dBigVector, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_dBigVector__SWIG_5(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double *arg1 = (double *) (double *)0 ;
  long long *arg2 = (long long *) (long long *)0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  dBigVector *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_dBigVector" "', argument " "1"" of type '" "double const *const""'"); 
  }
  arg1 = reinterpret_cast< double * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_long_long, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_dBigVector" "', argument " "2"" of type '" "long long const *const""'"); 
  }
  arg2 = reinterpret_cast< long long * >(argp2);
  result = (dBigVector *)new dBigVector((double const *)arg1,(long long const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dBigVector, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_dBigVector__SWIG_6(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dVector *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  dBigVector *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_dBigVector" "', argument " "1"" of type '" "dVector const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_dBigVector" "', argument " "1"" of type '" "dVector const &""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  result = (dBigVector *)new dBigVector((dVector const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dBigVector, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_dBigVector__SWIG_7(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double *arg1 = (double *) (double *)0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  dBigVector *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_dBigVector" "', argument " "1"" of type '" "double const *const""'"); 
  }
  arg1 = reinterpret_cast< double * >(argp1);
  result = (dBigVector *)new dBigVector((double const *)arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dBigVector, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_dBigVector__SWIG_8(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  double arg1 ;
  double arg2 ;
  double arg3 ;
  double arg4 ;
  double val1 ;
  int ecode1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  double val3 ;
  int ecode3 = 0 ;
  double val4 ;
  int ecode4 = 0 ;
  dBigVector *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  ecode1 = SWIG_AsVal_double(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_dBigVector" "', argument " "1"" of type '" "double""'");
  } 
  arg1 = static_cast< double >(val1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_dBigVector" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  ecode3 = SWIG_AsVal_double(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_dBigVector" "', argument " "3"" of type '" "double""'");
  } 
  arg3 = static_cast< double >(val3);
  ecode4 = SWIG_AsVal_double(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_dBigVector" "', argument " "4"" of type '" "double""'");
  } 
  arg4 = static_cast< double >(val4);
  result = (dBigVector *)new dBigVector(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dBigVector, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_dBigVector__SWIG_9(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  int arg1 ;
  int arg2 ;
  int arg3 ;
  int arg4 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  dBigVector *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_dBigVector" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_dBigVector" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_dBigVector" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_dBigVector" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  result = (dBigVector *)new dBigVector(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dBigVector, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_dBigVector__SWIG_10(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  long long arg1 ;
  long long arg2 ;
  long long arg3 ;
  long long arg4 ;
  long long val1 ;
  int ecode1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  long long val3 ;
  int ecode3 = 0 ;
  long long val4 ;
  int ecode4 = 0 ;
  dBigVector *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  ecode1 = SWIG_AsVal_long_SS_long(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_dBigVector" "', argument " "1"" of type '" "long long""'");
  } 
  arg1 = static_cast< long long >(val1);
  ecode2 = SWIG_AsVal_long_SS_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_dBigVector" "', argument " "2"" of type '" "long long""'");
  } 
  arg2 = static_cast< long long >(val2);
  ecode3 = SWIG_AsVal_long_SS_long(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_dBigVector" "', argument " "3"" of type '" "long long""'");
  } 
  arg3 = static_cast< long long >(val3);
  ecode4 = SWIG_AsVal_long_SS_long(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_dBigVector" "', argument " "4"" of type '" "long long""'");
  } 
  arg4 = static_cast< long long >(val4);
  result = (dBigVector *)new dBigVector(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dBigVector, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_dBigVector(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_dBigVector", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_dBigVector__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_dBigVector, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_dBigVector__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_dVector, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_dBigVector__SWIG_6(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_double, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_dBigVector__SWIG_7(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_dBigVector__SWIG_4(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_double, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_long_long, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_dBigVector__SWIG_5(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p___m128i, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p___m128i, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_dBigVector__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p___m128d, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p___m128d, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_dBigVector__SWIG_2(self, argc, argv);
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_int(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_dBigVector__SWIG_9(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_long_SS_long(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_long_SS_long(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_long_SS_long(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_long_SS_long(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_dBigVector__SWIG_10(self, argc, argv);
          }
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_double(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_double(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_double(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_double(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_dBigVector__SWIG_8(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_dBigVector'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    dBigVector::dBigVector()\n"
    "    dBigVector::dBigVector(dBigVector const &)\n"
    "    dBigVector::dBigVector(__m128d const,__m128d const)\n"
    "    dBigVector::dBigVector(__m128i const,__m128i const)\n"
    "    dBigVector::dBigVector(double const)\n"
    "    dBigVector::dBigVector(double const *const,long long const *const)\n"
    "    dBigVector::dBigVector(dVector const &)\n"
    "    dBigVector::dBigVector(double const *const)\n"
    "    dBigVector::dBigVector(double,double,double,double)\n"
    "    dBigVector::dBigVector(int,int,int,int)\n"
    "    dBigVector::dBigVector(long long,long long,long long,long long)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_dBigVector_GetX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector_GetX" "', argument " "1"" of type '" "dBigVector const *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  result = (double)((dBigVector const *)arg1)->GetX();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dBigVector_GetY(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector_GetY" "', argument " "1"" of type '" "dBigVector const *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  result = (double)((dBigVector const *)arg1)->GetY();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dBigVector_GetZ(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector_GetZ" "', argument " "1"" of type '" "dBigVector const *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  result = (double)((dBigVector const *)arg1)->GetZ();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dBigVector_GetW(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector_GetW" "', argument " "1"" of type '" "dBigVector const *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  result = (double)((dBigVector const *)arg1)->GetW();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dBigVector_SetX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "dBigVector_SetX", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector_SetX" "', argument " "1"" of type '" "dBigVector *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dBigVector_SetX" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->SetX(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dBigVector_SetY(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "dBigVector_SetY", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector_SetY" "', argument " "1"" of type '" "dBigVector *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dBigVector_SetY" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->SetY(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dBigVector_SetZ(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "dBigVector_SetZ", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector_SetZ" "', argument " "1"" of type '" "dBigVector *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dBigVector_SetZ" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->SetZ(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dBigVector_SetW(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "dBigVector_SetW", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector_SetW" "', argument " "1"" of type '" "dBigVector *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dBigVector_SetW" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  (arg1)->SetW(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dBigVector_GetScalar(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  double result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector_GetScalar" "', argument " "1"" of type '" "dBigVector const *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  result = (double)((dBigVector const *)arg1)->GetScalar();
  resultobj = SWIG_From_double(static_cast< double >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dBigVector_GetElement__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  double *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector_GetElement" "', argument " "1"" of type '" "dBigVector *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dBigVector_GetElement" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (double *) &(arg1)->operator [](arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_double, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dBigVector_GetElement__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  double *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector_GetElement" "', argument " "1"" of type '" "dBigVector const *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dBigVector_GetElement" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (double *) &((dBigVector const *)arg1)->operator [](arg2);
  resultobj = SWIG_From_double(static_cast< double >(*result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dBigVector_GetElement(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "dBigVector_GetElement", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_dBigVector, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_dBigVector_GetElement__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_dBigVector, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_dBigVector_GetElement__SWIG_1(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'dBigVector_GetElement'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    dBigVector::operator [](int)\n"
    "    dBigVector::operator [](int) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_dBigVector___add__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  dBigVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dBigVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "dBigVector___add__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector___add__" "', argument " "1"" of type '" "dBigVector const *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dBigVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dBigVector___add__" "', argument " "2"" of type '" "dBigVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dBigVector___add__" "', argument " "2"" of type '" "dBigVector const &""'"); 
  }
  arg2 = reinterpret_cast< dBigVector * >(argp2);
  result = ((dBigVector const *)arg1)->operator +((dBigVector const &)*arg2);
  resultobj = SWIG_NewPointerObj((new dBigVector(static_cast< const dBigVector& >(result))), SWIGTYPE_p_dBigVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_dBigVector___sub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  dBigVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dBigVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "dBigVector___sub__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector___sub__" "', argument " "1"" of type '" "dBigVector const *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dBigVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dBigVector___sub__" "', argument " "2"" of type '" "dBigVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dBigVector___sub__" "', argument " "2"" of type '" "dBigVector const &""'"); 
  }
  arg2 = reinterpret_cast< dBigVector * >(argp2);
  result = ((dBigVector const *)arg1)->operator -((dBigVector const &)*arg2);
  resultobj = SWIG_NewPointerObj((new dBigVector(static_cast< const dBigVector& >(result))), SWIGTYPE_p_dBigVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_dBigVector___mul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  dBigVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dBigVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "dBigVector___mul__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector___mul__" "', argument " "1"" of type '" "dBigVector const *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dBigVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dBigVector___mul__" "', argument " "2"" of type '" "dBigVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dBigVector___mul__" "', argument " "2"" of type '" "dBigVector const &""'"); 
  }
  arg2 = reinterpret_cast< dBigVector * >(argp2);
  result = ((dBigVector const *)arg1)->operator *((dBigVector const &)*arg2);
  resultobj = SWIG_NewPointerObj((new dBigVector(static_cast< const dBigVector& >(result))), SWIGTYPE_p_dBigVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_dBigVector___iadd__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  dBigVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dBigVector *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "dBigVector___iadd__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector___iadd__" "', argument " "1"" of type '" "dBigVector *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dBigVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dBigVector___iadd__" "', argument " "2"" of type '" "dBigVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dBigVector___iadd__" "', argument " "2"" of type '" "dBigVector const &""'"); 
  }
  arg2 = reinterpret_cast< dBigVector * >(argp2);
  result = (dBigVector *) &(arg1)->operator +=((dBigVector const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dBigVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dBigVector___isub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  dBigVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dBigVector *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "dBigVector___isub__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector___isub__" "', argument " "1"" of type '" "dBigVector *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dBigVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dBigVector___isub__" "', argument " "2"" of type '" "dBigVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dBigVector___isub__" "', argument " "2"" of type '" "dBigVector const &""'"); 
  }
  arg2 = reinterpret_cast< dBigVector * >(argp2);
  result = (dBigVector *) &(arg1)->operator -=((dBigVector const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dBigVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dBigVector___imul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  dBigVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dBigVector *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "dBigVector___imul__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector___imul__" "', argument " "1"" of type '" "dBigVector *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dBigVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dBigVector___imul__" "', argument " "2"" of type '" "dBigVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dBigVector___imul__" "', argument " "2"" of type '" "dBigVector const &""'"); 
  }
  arg2 = reinterpret_cast< dBigVector * >(argp2);
  result = (dBigVector *) &(arg1)->operator *=((dBigVector const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dBigVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dBigVector_MulAdd(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  dBigVector *arg2 = 0 ;
  dBigVector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject *swig_obj[3] ;
  dBigVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "dBigVector_MulAdd", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector_MulAdd" "', argument " "1"" of type '" "dBigVector const *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dBigVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dBigVector_MulAdd" "', argument " "2"" of type '" "dBigVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dBigVector_MulAdd" "', argument " "2"" of type '" "dBigVector const &""'"); 
  }
  arg2 = reinterpret_cast< dBigVector * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_dBigVector,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "dBigVector_MulAdd" "', argument " "3"" of type '" "dBigVector const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dBigVector_MulAdd" "', argument " "3"" of type '" "dBigVector const &""'"); 
  }
  arg3 = reinterpret_cast< dBigVector * >(argp3);
  result = ((dBigVector const *)arg1)->MulAdd((dBigVector const &)*arg2,(dBigVector const &)*arg3);
  resultobj = SWIG_NewPointerObj((new dBigVector(static_cast< const dBigVector& >(result))), SWIGTYPE_p_dBigVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dBigVector_MulSub(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  dBigVector *arg2 = 0 ;
  dBigVector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject *swig_obj[3] ;
  dBigVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "dBigVector_MulSub", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector_MulSub" "', argument " "1"" of type '" "dBigVector const *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dBigVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dBigVector_MulSub" "', argument " "2"" of type '" "dBigVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dBigVector_MulSub" "', argument " "2"" of type '" "dBigVector const &""'"); 
  }
  arg2 = reinterpret_cast< dBigVector * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_dBigVector,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "dBigVector_MulSub" "', argument " "3"" of type '" "dBigVector const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dBigVector_MulSub" "', argument " "3"" of type '" "dBigVector const &""'"); 
  }
  arg3 = reinterpret_cast< dBigVector * >(argp3);
  result = ((dBigVector const *)arg1)->MulSub((dBigVector const &)*arg2,(dBigVector const &)*arg3);
  resultobj = SWIG_NewPointerObj((new dBigVector(static_cast< const dBigVector& >(result))), SWIGTYPE_p_dBigVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dBigVector_CrossProduct__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  dBigVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  dBigVector result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector_CrossProduct" "', argument " "1"" of type '" "dBigVector const *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dBigVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dBigVector_CrossProduct" "', argument " "2"" of type '" "dBigVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dBigVector_CrossProduct" "', argument " "2"" of type '" "dBigVector const &""'"); 
  }
  arg2 = reinterpret_cast< dBigVector * >(argp2);
  result = ((dBigVector const *)arg1)->CrossProduct((dBigVector const &)*arg2);
  resultobj = SWIG_NewPointerObj((new dBigVector(static_cast< const dBigVector& >(result))), SWIGTYPE_p_dBigVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dBigVector_AddHorizontal(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dBigVector result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector_AddHorizontal" "', argument " "1"" of type '" "dBigVector const *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  result = ((dBigVector const *)arg1)->AddHorizontal();
  resultobj = SWIG_NewPointerObj((new dBigVector(static_cast< const dBigVector& >(result))), SWIGTYPE_p_dBigVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dBigVector_BroadcastX(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dBigVector result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector_BroadcastX" "', argument " "1"" of type '" "dBigVector const *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  result = ((dBigVector const *)arg1)->BroadcastX();
  resultobj = SWIG_NewPointerObj((new dBigVector(static_cast< const dBigVector& >(result))), SWIGTYPE_p_dBigVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dBigVector_BroadcastY(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dBigVector result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector_BroadcastY" "', argument " "1"" of type '" "dBigVector const *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  result = ((dBigVector const *)arg1)->BroadcastY();
  resultobj = SWIG_NewPointerObj((new dBigVector(static_cast< const dBigVector& >(result))), SWIGTYPE_p_dBigVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dBigVector_BroadcastZ(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dBigVector result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector_BroadcastZ" "', argument " "1"" of type '" "dBigVector const *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  result = ((dBigVector const *)arg1)->BroadcastZ();
  resultobj = SWIG_NewPointerObj((new dBigVector(static_cast< const dBigVector& >(result))), SWIGTYPE_p_dBigVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dBigVector_BroadcastW(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dBigVector result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector_BroadcastW" "', argument " "1"" of type '" "dBigVector const *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  result = ((dBigVector const *)arg1)->BroadcastW();
  resultobj = SWIG_NewPointerObj((new dBigVector(static_cast< const dBigVector& >(result))), SWIGTYPE_p_dBigVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dBigVector_Scale(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  double arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  double val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  dBigVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "dBigVector_Scale", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector_Scale" "', argument " "1"" of type '" "dBigVector const *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  ecode2 = SWIG_AsVal_double(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dBigVector_Scale" "', argument " "2"" of type '" "double""'");
  } 
  arg2 = static_cast< double >(val2);
  result = ((dBigVector const *)arg1)->Scale(arg2);
  resultobj = SWIG_NewPointerObj((new dBigVector(static_cast< const dBigVector& >(result))), SWIGTYPE_p_dBigVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dBigVector_Abs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dBigVector result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector_Abs" "', argument " "1"" of type '" "dBigVector const *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  result = ((dBigVector const *)arg1)->Abs();
  resultobj = SWIG_NewPointerObj((new dBigVector(static_cast< const dBigVector& >(result))), SWIGTYPE_p_dBigVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dBigVector_Reciproc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dBigVector result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector_Reciproc" "', argument " "1"" of type '" "dBigVector const *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  result = ((dBigVector const *)arg1)->Reciproc();
  resultobj = SWIG_NewPointerObj((new dBigVector(static_cast< const dBigVector& >(result))), SWIGTYPE_p_dBigVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dBigVector_Sqrt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dBigVector result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector_Sqrt" "', argument " "1"" of type '" "dBigVector const *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  result = ((dBigVector const *)arg1)->Sqrt();
  resultobj = SWIG_NewPointerObj((new dBigVector(static_cast< const dBigVector& >(result))), SWIGTYPE_p_dBigVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dBigVector_InvSqrt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dBigVector result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector_InvSqrt" "', argument " "1"" of type '" "dBigVector const *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  result = ((dBigVector const *)arg1)->InvSqrt();
  resultobj = SWIG_NewPointerObj((new dBigVector(static_cast< const dBigVector& >(result))), SWIGTYPE_p_dBigVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dBigVector_InvMagSqrt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dBigVector result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector_InvMagSqrt" "', argument " "1"" of type '" "dBigVector const *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  result = ((dBigVector const *)arg1)->InvMagSqrt();
  resultobj = SWIG_NewPointerObj((new dBigVector(static_cast< const dBigVector& >(result))), SWIGTYPE_p_dBigVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dBigVector_Normalize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dBigVector result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector_Normalize" "', argument " "1"" of type '" "dBigVector const *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  result = ((dBigVector const *)arg1)->Normalize();
  resultobj = SWIG_NewPointerObj((new dBigVector(static_cast< const dBigVector& >(result))), SWIGTYPE_p_dBigVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dBigVector_GetMax__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  dBigVector result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector_GetMax" "', argument " "1"" of type '" "dBigVector const *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  result = ((dBigVector const *)arg1)->GetMax();
  resultobj = SWIG_NewPointerObj((new dBigVector(static_cast< const dBigVector& >(result))), SWIGTYPE_p_dBigVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dBigVector_GetMax__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  dBigVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  dBigVector result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector_GetMax" "', argument " "1"" of type '" "dBigVector const *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dBigVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dBigVector_GetMax" "', argument " "2"" of type '" "dBigVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dBigVector_GetMax" "', argument " "2"" of type '" "dBigVector const &""'"); 
  }
  arg2 = reinterpret_cast< dBigVector * >(argp2);
  result = ((dBigVector const *)arg1)->GetMax((dBigVector const &)*arg2);
  resultobj = SWIG_NewPointerObj((new dBigVector(static_cast< const dBigVector& >(result))), SWIGTYPE_p_dBigVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dBigVector_GetMax(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "dBigVector_GetMax", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_dBigVector, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_dBigVector_GetMax__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_dBigVector, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_dBigVector, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_dBigVector_GetMax__SWIG_1(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'dBigVector_GetMax'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    dBigVector::GetMax() const\n"
    "    dBigVector::GetMax(dBigVector const &) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_dBigVector_GetMin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  dBigVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dBigVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "dBigVector_GetMin", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector_GetMin" "', argument " "1"" of type '" "dBigVector const *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dBigVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dBigVector_GetMin" "', argument " "2"" of type '" "dBigVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dBigVector_GetMin" "', argument " "2"" of type '" "dBigVector const &""'"); 
  }
  arg2 = reinterpret_cast< dBigVector * >(argp2);
  result = ((dBigVector const *)arg1)->GetMin((dBigVector const &)*arg2);
  resultobj = SWIG_NewPointerObj((new dBigVector(static_cast< const dBigVector& >(result))), SWIGTYPE_p_dBigVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dBigVector_GetInt(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dBigVector result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector_GetInt" "', argument " "1"" of type '" "dBigVector const *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  result = ((dBigVector const *)arg1)->GetInt();
  resultobj = SWIG_NewPointerObj((new dBigVector(static_cast< const dBigVector& >(result))), SWIGTYPE_p_dBigVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dBigVector___gt__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  dBigVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dBigVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "dBigVector___gt__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector___gt__" "', argument " "1"" of type '" "dBigVector const *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dBigVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dBigVector___gt__" "', argument " "2"" of type '" "dBigVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dBigVector___gt__" "', argument " "2"" of type '" "dBigVector const &""'"); 
  }
  arg2 = reinterpret_cast< dBigVector * >(argp2);
  result = ((dBigVector const *)arg1)->operator >((dBigVector const &)*arg2);
  resultobj = SWIG_NewPointerObj((new dBigVector(static_cast< const dBigVector& >(result))), SWIGTYPE_p_dBigVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_dBigVector___eq__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  dBigVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dBigVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "dBigVector___eq__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector___eq__" "', argument " "1"" of type '" "dBigVector const *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dBigVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dBigVector___eq__" "', argument " "2"" of type '" "dBigVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dBigVector___eq__" "', argument " "2"" of type '" "dBigVector const &""'"); 
  }
  arg2 = reinterpret_cast< dBigVector * >(argp2);
  result = ((dBigVector const *)arg1)->operator ==((dBigVector const &)*arg2);
  resultobj = SWIG_NewPointerObj((new dBigVector(static_cast< const dBigVector& >(result))), SWIGTYPE_p_dBigVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_dBigVector___lt__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  dBigVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dBigVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "dBigVector___lt__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector___lt__" "', argument " "1"" of type '" "dBigVector const *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dBigVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dBigVector___lt__" "', argument " "2"" of type '" "dBigVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dBigVector___lt__" "', argument " "2"" of type '" "dBigVector const &""'"); 
  }
  arg2 = reinterpret_cast< dBigVector * >(argp2);
  result = ((dBigVector const *)arg1)->operator <((dBigVector const &)*arg2);
  resultobj = SWIG_NewPointerObj((new dBigVector(static_cast< const dBigVector& >(result))), SWIGTYPE_p_dBigVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_dBigVector___ge__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  dBigVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dBigVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "dBigVector___ge__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector___ge__" "', argument " "1"" of type '" "dBigVector const *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dBigVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dBigVector___ge__" "', argument " "2"" of type '" "dBigVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dBigVector___ge__" "', argument " "2"" of type '" "dBigVector const &""'"); 
  }
  arg2 = reinterpret_cast< dBigVector * >(argp2);
  result = ((dBigVector const *)arg1)->operator >=((dBigVector const &)*arg2);
  resultobj = SWIG_NewPointerObj((new dBigVector(static_cast< const dBigVector& >(result))), SWIGTYPE_p_dBigVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_dBigVector___le__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  dBigVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dBigVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "dBigVector___le__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector___le__" "', argument " "1"" of type '" "dBigVector const *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dBigVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dBigVector___le__" "', argument " "2"" of type '" "dBigVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dBigVector___le__" "', argument " "2"" of type '" "dBigVector const &""'"); 
  }
  arg2 = reinterpret_cast< dBigVector * >(argp2);
  result = ((dBigVector const *)arg1)->operator <=((dBigVector const &)*arg2);
  resultobj = SWIG_NewPointerObj((new dBigVector(static_cast< const dBigVector& >(result))), SWIGTYPE_p_dBigVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_dBigVector___and__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  dBigVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dBigVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "dBigVector___and__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector___and__" "', argument " "1"" of type '" "dBigVector const *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dBigVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dBigVector___and__" "', argument " "2"" of type '" "dBigVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dBigVector___and__" "', argument " "2"" of type '" "dBigVector const &""'"); 
  }
  arg2 = reinterpret_cast< dBigVector * >(argp2);
  result = ((dBigVector const *)arg1)->operator &((dBigVector const &)*arg2);
  resultobj = SWIG_NewPointerObj((new dBigVector(static_cast< const dBigVector& >(result))), SWIGTYPE_p_dBigVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_dBigVector___or__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  dBigVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dBigVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "dBigVector___or__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector___or__" "', argument " "1"" of type '" "dBigVector const *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dBigVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dBigVector___or__" "', argument " "2"" of type '" "dBigVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dBigVector___or__" "', argument " "2"" of type '" "dBigVector const &""'"); 
  }
  arg2 = reinterpret_cast< dBigVector * >(argp2);
  result = ((dBigVector const *)arg1)->operator |((dBigVector const &)*arg2);
  resultobj = SWIG_NewPointerObj((new dBigVector(static_cast< const dBigVector& >(result))), SWIGTYPE_p_dBigVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_dBigVector___xor__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  dBigVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dBigVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "dBigVector___xor__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector___xor__" "', argument " "1"" of type '" "dBigVector const *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dBigVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dBigVector___xor__" "', argument " "2"" of type '" "dBigVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dBigVector___xor__" "', argument " "2"" of type '" "dBigVector const &""'"); 
  }
  arg2 = reinterpret_cast< dBigVector * >(argp2);
  result = ((dBigVector const *)arg1)->operator ^((dBigVector const &)*arg2);
  resultobj = SWIG_NewPointerObj((new dBigVector(static_cast< const dBigVector& >(result))), SWIGTYPE_p_dBigVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_dBigVector_AndNot(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  dBigVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dBigVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "dBigVector_AndNot", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector_AndNot" "', argument " "1"" of type '" "dBigVector const *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dBigVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dBigVector_AndNot" "', argument " "2"" of type '" "dBigVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dBigVector_AndNot" "', argument " "2"" of type '" "dBigVector const &""'"); 
  }
  arg2 = reinterpret_cast< dBigVector * >(argp2);
  result = ((dBigVector const *)arg1)->AndNot((dBigVector const &)*arg2);
  resultobj = SWIG_NewPointerObj((new dBigVector(static_cast< const dBigVector& >(result))), SWIGTYPE_p_dBigVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dBigVector_Select(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  dBigVector *arg2 = 0 ;
  dBigVector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject *swig_obj[3] ;
  dBigVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "dBigVector_Select", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector_Select" "', argument " "1"" of type '" "dBigVector const *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dBigVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dBigVector_Select" "', argument " "2"" of type '" "dBigVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dBigVector_Select" "', argument " "2"" of type '" "dBigVector const &""'"); 
  }
  arg2 = reinterpret_cast< dBigVector * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_dBigVector,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "dBigVector_Select" "', argument " "3"" of type '" "dBigVector const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dBigVector_Select" "', argument " "3"" of type '" "dBigVector const &""'"); 
  }
  arg3 = reinterpret_cast< dBigVector * >(argp3);
  result = ((dBigVector const *)arg1)->Select((dBigVector const &)*arg2,(dBigVector const &)*arg3);
  resultobj = SWIG_NewPointerObj((new dBigVector(static_cast< const dBigVector& >(result))), SWIGTYPE_p_dBigVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dBigVector_ShiftRight(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dBigVector result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector_ShiftRight" "', argument " "1"" of type '" "dBigVector const *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  result = ((dBigVector const *)arg1)->ShiftRight();
  resultobj = SWIG_NewPointerObj((new dBigVector(static_cast< const dBigVector& >(result))), SWIGTYPE_p_dBigVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dBigVector_ShiftTripleRight(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dBigVector result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector_ShiftTripleRight" "', argument " "1"" of type '" "dBigVector const *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  result = ((dBigVector const *)arg1)->ShiftTripleRight();
  resultobj = SWIG_NewPointerObj((new dBigVector(static_cast< const dBigVector& >(result))), SWIGTYPE_p_dBigVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dBigVector_ShiftTripleLeft(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dBigVector result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector_ShiftTripleLeft" "', argument " "1"" of type '" "dBigVector const *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  result = ((dBigVector const *)arg1)->ShiftTripleLeft();
  resultobj = SWIG_NewPointerObj((new dBigVector(static_cast< const dBigVector& >(result))), SWIGTYPE_p_dBigVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dBigVector_ShiftRightLogical(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  dBigVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "dBigVector_ShiftRightLogical", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector_ShiftRightLogical" "', argument " "1"" of type '" "dBigVector const *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dBigVector_ShiftRightLogical" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = ((dBigVector const *)arg1)->ShiftRightLogical(arg2);
  resultobj = SWIG_NewPointerObj((new dBigVector(static_cast< const dBigVector& >(result))), SWIGTYPE_p_dBigVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dBigVector_GetSignMask(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector_GetSignMask" "', argument " "1"" of type '" "dBigVector const *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  result = (int)((dBigVector const *)arg1)->GetSignMask();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dBigVector_Floor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dBigVector result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector_Floor" "', argument " "1"" of type '" "dBigVector const *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  result = ((dBigVector const *)arg1)->Floor();
  resultobj = SWIG_NewPointerObj((new dBigVector(static_cast< const dBigVector& >(result))), SWIGTYPE_p_dBigVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dBigVector_TestZero(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dBigVector result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector_TestZero" "', argument " "1"" of type '" "dBigVector const *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  result = ((dBigVector const *)arg1)->TestZero();
  resultobj = SWIG_NewPointerObj((new dBigVector(static_cast< const dBigVector& >(result))), SWIGTYPE_p_dBigVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dBigVector_Transpose4x4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = 0 ;
  dBigVector *arg2 = 0 ;
  dBigVector *arg3 = 0 ;
  dBigVector *arg4 = 0 ;
  dBigVector *arg5 = 0 ;
  dBigVector *arg6 = 0 ;
  dBigVector *arg7 = 0 ;
  dBigVector *arg8 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  void *argp8 = 0 ;
  int res8 = 0 ;
  PyObject *swig_obj[8] ;
  
  if (!SWIG_Python_UnpackTuple(args, "dBigVector_Transpose4x4", 8, 8, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_dBigVector,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector_Transpose4x4" "', argument " "1"" of type '" "dBigVector &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dBigVector_Transpose4x4" "', argument " "1"" of type '" "dBigVector &""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dBigVector,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dBigVector_Transpose4x4" "', argument " "2"" of type '" "dBigVector &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dBigVector_Transpose4x4" "', argument " "2"" of type '" "dBigVector &""'"); 
  }
  arg2 = reinterpret_cast< dBigVector * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_dBigVector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "dBigVector_Transpose4x4" "', argument " "3"" of type '" "dBigVector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dBigVector_Transpose4x4" "', argument " "3"" of type '" "dBigVector &""'"); 
  }
  arg3 = reinterpret_cast< dBigVector * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_dBigVector,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "dBigVector_Transpose4x4" "', argument " "4"" of type '" "dBigVector &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dBigVector_Transpose4x4" "', argument " "4"" of type '" "dBigVector &""'"); 
  }
  arg4 = reinterpret_cast< dBigVector * >(argp4);
  res5 = SWIG_ConvertPtr(swig_obj[4], &argp5, SWIGTYPE_p_dBigVector,  0  | 0);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "dBigVector_Transpose4x4" "', argument " "5"" of type '" "dBigVector const &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dBigVector_Transpose4x4" "', argument " "5"" of type '" "dBigVector const &""'"); 
  }
  arg5 = reinterpret_cast< dBigVector * >(argp5);
  res6 = SWIG_ConvertPtr(swig_obj[5], &argp6, SWIGTYPE_p_dBigVector,  0  | 0);
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "dBigVector_Transpose4x4" "', argument " "6"" of type '" "dBigVector const &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dBigVector_Transpose4x4" "', argument " "6"" of type '" "dBigVector const &""'"); 
  }
  arg6 = reinterpret_cast< dBigVector * >(argp6);
  res7 = SWIG_ConvertPtr(swig_obj[6], &argp7, SWIGTYPE_p_dBigVector,  0  | 0);
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "dBigVector_Transpose4x4" "', argument " "7"" of type '" "dBigVector const &""'"); 
  }
  if (!argp7) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dBigVector_Transpose4x4" "', argument " "7"" of type '" "dBigVector const &""'"); 
  }
  arg7 = reinterpret_cast< dBigVector * >(argp7);
  res8 = SWIG_ConvertPtr(swig_obj[7], &argp8, SWIGTYPE_p_dBigVector,  0  | 0);
  if (!SWIG_IsOK(res8)) {
    SWIG_exception_fail(SWIG_ArgError(res8), "in method '" "dBigVector_Transpose4x4" "', argument " "8"" of type '" "dBigVector const &""'"); 
  }
  if (!argp8) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dBigVector_Transpose4x4" "', argument " "8"" of type '" "dBigVector const &""'"); 
  }
  arg8 = reinterpret_cast< dBigVector * >(argp8);
  dBigVector::Transpose4x4(*arg1,*arg2,*arg3,*arg4,(dBigVector const &)*arg5,(dBigVector const &)*arg6,(dBigVector const &)*arg7,(dBigVector const &)*arg8);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dBigVector_DotProduct(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  dBigVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dBigVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "dBigVector_DotProduct", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector_DotProduct" "', argument " "1"" of type '" "dBigVector const *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dBigVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dBigVector_DotProduct" "', argument " "2"" of type '" "dBigVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dBigVector_DotProduct" "', argument " "2"" of type '" "dBigVector const &""'"); 
  }
  arg2 = reinterpret_cast< dBigVector * >(argp2);
  result = ((dBigVector const *)arg1)->DotProduct((dBigVector const &)*arg2);
  resultobj = SWIG_NewPointerObj((new dBigVector(static_cast< const dBigVector& >(result))), SWIGTYPE_p_dBigVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dBigVector_CrossProduct__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  dBigVector *arg2 = 0 ;
  dBigVector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  dBigVector result;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dBigVector_CrossProduct" "', argument " "1"" of type '" "dBigVector const *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dBigVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dBigVector_CrossProduct" "', argument " "2"" of type '" "dBigVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dBigVector_CrossProduct" "', argument " "2"" of type '" "dBigVector const &""'"); 
  }
  arg2 = reinterpret_cast< dBigVector * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_dBigVector,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "dBigVector_CrossProduct" "', argument " "3"" of type '" "dBigVector const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dBigVector_CrossProduct" "', argument " "3"" of type '" "dBigVector const &""'"); 
  }
  arg3 = reinterpret_cast< dBigVector * >(argp3);
  result = ((dBigVector const *)arg1)->CrossProduct((dBigVector const &)*arg2,(dBigVector const &)*arg3);
  resultobj = SWIG_NewPointerObj((new dBigVector(static_cast< const dBigVector& >(result))), SWIGTYPE_p_dBigVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dBigVector_CrossProduct(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "dBigVector_CrossProduct", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_dBigVector, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_dBigVector, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_dBigVector_CrossProduct__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_dBigVector, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_dBigVector, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_dBigVector, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_dBigVector_CrossProduct__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'dBigVector_CrossProduct'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    dBigVector::CrossProduct(dBigVector const &) const\n"
    "    dBigVector::CrossProduct(dBigVector const &,dBigVector const &) const\n");
  return 0;
}


SWIGINTERN int Swig_var_dBigVector_m_zero_set(PyObject *_val) {
  {
    void *argp = 0;
    int res = SWIG_ConvertPtr(_val, &argp, SWIGTYPE_p_dBigVector,  0  | 0);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""dBigVector::m_zero""' of type '""dBigVector""'");
    }
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""dBigVector::m_zero""' of type '""dBigVector""'");
    } else {
      dBigVector * temp;
      temp  = reinterpret_cast< dBigVector * >(argp);
      dBigVector::m_zero = *temp;
      if (SWIG_IsNewObj(res)) delete temp;
    }
  }
  return 0;
fail:
  return 1;
}


SWIGINTERN PyObject *Swig_var_dBigVector_m_zero_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_NewPointerObj(SWIG_as_voidptr(&dBigVector::m_zero), SWIGTYPE_p_dBigVector,  0 );
  return pyobj;
}


SWIGINTERN PyObject *_wrap_dBigVector_m_zero_get(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(args)) {
  return Swig_var_dBigVector_m_zero_get();
}


SWIGINTERN PyObject *_wrap_dBigVector_m_zero_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  int res;
  
  res = Swig_var_dBigVector_m_zero_set(args);
  return !res ? SWIG_Py_Void() : NULL;
}


SWIGINTERN int Swig_var_dBigVector_m_one_set(PyObject *_val) {
  {
    void *argp = 0;
    int res = SWIG_ConvertPtr(_val, &argp, SWIGTYPE_p_dBigVector,  0  | 0);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""dBigVector::m_one""' of type '""dBigVector""'");
    }
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""dBigVector::m_one""' of type '""dBigVector""'");
    } else {
      dBigVector * temp;
      temp  = reinterpret_cast< dBigVector * >(argp);
      dBigVector::m_one = *temp;
      if (SWIG_IsNewObj(res)) delete temp;
    }
  }
  return 0;
fail:
  return 1;
}


SWIGINTERN PyObject *Swig_var_dBigVector_m_one_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_NewPointerObj(SWIG_as_voidptr(&dBigVector::m_one), SWIGTYPE_p_dBigVector,  0 );
  return pyobj;
}


SWIGINTERN PyObject *_wrap_dBigVector_m_one_get(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(args)) {
  return Swig_var_dBigVector_m_one_get();
}


SWIGINTERN PyObject *_wrap_dBigVector_m_one_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  int res;
  
  res = Swig_var_dBigVector_m_one_set(args);
  return !res ? SWIG_Py_Void() : NULL;
}


SWIGINTERN int Swig_var_dBigVector_m_wOne_set(PyObject *_val) {
  {
    void *argp = 0;
    int res = SWIG_ConvertPtr(_val, &argp, SWIGTYPE_p_dBigVector,  0  | 0);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""dBigVector::m_wOne""' of type '""dBigVector""'");
    }
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""dBigVector::m_wOne""' of type '""dBigVector""'");
    } else {
      dBigVector * temp;
      temp  = reinterpret_cast< dBigVector * >(argp);
      dBigVector::m_wOne = *temp;
      if (SWIG_IsNewObj(res)) delete temp;
    }
  }
  return 0;
fail:
  return 1;
}


SWIGINTERN PyObject *Swig_var_dBigVector_m_wOne_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_NewPointerObj(SWIG_as_voidptr(&dBigVector::m_wOne), SWIGTYPE_p_dBigVector,  0 );
  return pyobj;
}


SWIGINTERN PyObject *_wrap_dBigVector_m_wOne_get(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(args)) {
  return Swig_var_dBigVector_m_wOne_get();
}


SWIGINTERN PyObject *_wrap_dBigVector_m_wOne_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  int res;
  
  res = Swig_var_dBigVector_m_wOne_set(args);
  return !res ? SWIG_Py_Void() : NULL;
}


SWIGINTERN int Swig_var_dBigVector_m_two_set(PyObject *_val) {
  {
    void *argp = 0;
    int res = SWIG_ConvertPtr(_val, &argp, SWIGTYPE_p_dBigVector,  0  | 0);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""dBigVector::m_two""' of type '""dBigVector""'");
    }
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""dBigVector::m_two""' of type '""dBigVector""'");
    } else {
      dBigVector * temp;
      temp  = reinterpret_cast< dBigVector * >(argp);
      dBigVector::m_two = *temp;
      if (SWIG_IsNewObj(res)) delete temp;
    }
  }
  return 0;
fail:
  return 1;
}


SWIGINTERN PyObject *Swig_var_dBigVector_m_two_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_NewPointerObj(SWIG_as_voidptr(&dBigVector::m_two), SWIGTYPE_p_dBigVector,  0 );
  return pyobj;
}


SWIGINTERN PyObject *_wrap_dBigVector_m_two_get(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(args)) {
  return Swig_var_dBigVector_m_two_get();
}


SWIGINTERN PyObject *_wrap_dBigVector_m_two_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  int res;
  
  res = Swig_var_dBigVector_m_two_set(args);
  return !res ? SWIG_Py_Void() : NULL;
}


SWIGINTERN int Swig_var_dBigVector_m_half_set(PyObject *_val) {
  {
    void *argp = 0;
    int res = SWIG_ConvertPtr(_val, &argp, SWIGTYPE_p_dBigVector,  0  | 0);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""dBigVector::m_half""' of type '""dBigVector""'");
    }
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""dBigVector::m_half""' of type '""dBigVector""'");
    } else {
      dBigVector * temp;
      temp  = reinterpret_cast< dBigVector * >(argp);
      dBigVector::m_half = *temp;
      if (SWIG_IsNewObj(res)) delete temp;
    }
  }
  return 0;
fail:
  return 1;
}


SWIGINTERN PyObject *Swig_var_dBigVector_m_half_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_NewPointerObj(SWIG_as_voidptr(&dBigVector::m_half), SWIGTYPE_p_dBigVector,  0 );
  return pyobj;
}


SWIGINTERN PyObject *_wrap_dBigVector_m_half_get(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(args)) {
  return Swig_var_dBigVector_m_half_get();
}


SWIGINTERN PyObject *_wrap_dBigVector_m_half_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  int res;
  
  res = Swig_var_dBigVector_m_half_set(args);
  return !res ? SWIG_Py_Void() : NULL;
}


SWIGINTERN int Swig_var_dBigVector_m_three_set(PyObject *_val) {
  {
    void *argp = 0;
    int res = SWIG_ConvertPtr(_val, &argp, SWIGTYPE_p_dBigVector,  0  | 0);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""dBigVector::m_three""' of type '""dBigVector""'");
    }
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""dBigVector::m_three""' of type '""dBigVector""'");
    } else {
      dBigVector * temp;
      temp  = reinterpret_cast< dBigVector * >(argp);
      dBigVector::m_three = *temp;
      if (SWIG_IsNewObj(res)) delete temp;
    }
  }
  return 0;
fail:
  return 1;
}


SWIGINTERN PyObject *Swig_var_dBigVector_m_three_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_NewPointerObj(SWIG_as_voidptr(&dBigVector::m_three), SWIGTYPE_p_dBigVector,  0 );
  return pyobj;
}


SWIGINTERN PyObject *_wrap_dBigVector_m_three_get(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(args)) {
  return Swig_var_dBigVector_m_three_get();
}


SWIGINTERN PyObject *_wrap_dBigVector_m_three_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  int res;
  
  res = Swig_var_dBigVector_m_three_set(args);
  return !res ? SWIG_Py_Void() : NULL;
}


SWIGINTERN int Swig_var_dBigVector_m_negOne_set(PyObject *_val) {
  {
    void *argp = 0;
    int res = SWIG_ConvertPtr(_val, &argp, SWIGTYPE_p_dBigVector,  0  | 0);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""dBigVector::m_negOne""' of type '""dBigVector""'");
    }
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""dBigVector::m_negOne""' of type '""dBigVector""'");
    } else {
      dBigVector * temp;
      temp  = reinterpret_cast< dBigVector * >(argp);
      dBigVector::m_negOne = *temp;
      if (SWIG_IsNewObj(res)) delete temp;
    }
  }
  return 0;
fail:
  return 1;
}


SWIGINTERN PyObject *Swig_var_dBigVector_m_negOne_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_NewPointerObj(SWIG_as_voidptr(&dBigVector::m_negOne), SWIGTYPE_p_dBigVector,  0 );
  return pyobj;
}


SWIGINTERN PyObject *_wrap_dBigVector_m_negOne_get(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(args)) {
  return Swig_var_dBigVector_m_negOne_get();
}


SWIGINTERN PyObject *_wrap_dBigVector_m_negOne_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  int res;
  
  res = Swig_var_dBigVector_m_negOne_set(args);
  return !res ? SWIG_Py_Void() : NULL;
}


SWIGINTERN int Swig_var_dBigVector_m_xMask_set(PyObject *_val) {
  {
    void *argp = 0;
    int res = SWIG_ConvertPtr(_val, &argp, SWIGTYPE_p_dBigVector,  0  | 0);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""dBigVector::m_xMask""' of type '""dBigVector""'");
    }
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""dBigVector::m_xMask""' of type '""dBigVector""'");
    } else {
      dBigVector * temp;
      temp  = reinterpret_cast< dBigVector * >(argp);
      dBigVector::m_xMask = *temp;
      if (SWIG_IsNewObj(res)) delete temp;
    }
  }
  return 0;
fail:
  return 1;
}


SWIGINTERN PyObject *Swig_var_dBigVector_m_xMask_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_NewPointerObj(SWIG_as_voidptr(&dBigVector::m_xMask), SWIGTYPE_p_dBigVector,  0 );
  return pyobj;
}


SWIGINTERN PyObject *_wrap_dBigVector_m_xMask_get(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(args)) {
  return Swig_var_dBigVector_m_xMask_get();
}


SWIGINTERN PyObject *_wrap_dBigVector_m_xMask_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  int res;
  
  res = Swig_var_dBigVector_m_xMask_set(args);
  return !res ? SWIG_Py_Void() : NULL;
}


SWIGINTERN int Swig_var_dBigVector_m_yMask_set(PyObject *_val) {
  {
    void *argp = 0;
    int res = SWIG_ConvertPtr(_val, &argp, SWIGTYPE_p_dBigVector,  0  | 0);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""dBigVector::m_yMask""' of type '""dBigVector""'");
    }
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""dBigVector::m_yMask""' of type '""dBigVector""'");
    } else {
      dBigVector * temp;
      temp  = reinterpret_cast< dBigVector * >(argp);
      dBigVector::m_yMask = *temp;
      if (SWIG_IsNewObj(res)) delete temp;
    }
  }
  return 0;
fail:
  return 1;
}


SWIGINTERN PyObject *Swig_var_dBigVector_m_yMask_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_NewPointerObj(SWIG_as_voidptr(&dBigVector::m_yMask), SWIGTYPE_p_dBigVector,  0 );
  return pyobj;
}


SWIGINTERN PyObject *_wrap_dBigVector_m_yMask_get(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(args)) {
  return Swig_var_dBigVector_m_yMask_get();
}


SWIGINTERN PyObject *_wrap_dBigVector_m_yMask_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  int res;
  
  res = Swig_var_dBigVector_m_yMask_set(args);
  return !res ? SWIG_Py_Void() : NULL;
}


SWIGINTERN int Swig_var_dBigVector_m_zMask_set(PyObject *_val) {
  {
    void *argp = 0;
    int res = SWIG_ConvertPtr(_val, &argp, SWIGTYPE_p_dBigVector,  0  | 0);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""dBigVector::m_zMask""' of type '""dBigVector""'");
    }
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""dBigVector::m_zMask""' of type '""dBigVector""'");
    } else {
      dBigVector * temp;
      temp  = reinterpret_cast< dBigVector * >(argp);
      dBigVector::m_zMask = *temp;
      if (SWIG_IsNewObj(res)) delete temp;
    }
  }
  return 0;
fail:
  return 1;
}


SWIGINTERN PyObject *Swig_var_dBigVector_m_zMask_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_NewPointerObj(SWIG_as_voidptr(&dBigVector::m_zMask), SWIGTYPE_p_dBigVector,  0 );
  return pyobj;
}


SWIGINTERN PyObject *_wrap_dBigVector_m_zMask_get(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(args)) {
  return Swig_var_dBigVector_m_zMask_get();
}


SWIGINTERN PyObject *_wrap_dBigVector_m_zMask_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  int res;
  
  res = Swig_var_dBigVector_m_zMask_set(args);
  return !res ? SWIG_Py_Void() : NULL;
}


SWIGINTERN int Swig_var_dBigVector_m_wMask_set(PyObject *_val) {
  {
    void *argp = 0;
    int res = SWIG_ConvertPtr(_val, &argp, SWIGTYPE_p_dBigVector,  0  | 0);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""dBigVector::m_wMask""' of type '""dBigVector""'");
    }
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""dBigVector::m_wMask""' of type '""dBigVector""'");
    } else {
      dBigVector * temp;
      temp  = reinterpret_cast< dBigVector * >(argp);
      dBigVector::m_wMask = *temp;
      if (SWIG_IsNewObj(res)) delete temp;
    }
  }
  return 0;
fail:
  return 1;
}


SWIGINTERN PyObject *Swig_var_dBigVector_m_wMask_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_NewPointerObj(SWIG_as_voidptr(&dBigVector::m_wMask), SWIGTYPE_p_dBigVector,  0 );
  return pyobj;
}


SWIGINTERN PyObject *_wrap_dBigVector_m_wMask_get(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(args)) {
  return Swig_var_dBigVector_m_wMask_get();
}


SWIGINTERN PyObject *_wrap_dBigVector_m_wMask_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  int res;
  
  res = Swig_var_dBigVector_m_wMask_set(args);
  return !res ? SWIG_Py_Void() : NULL;
}


SWIGINTERN int Swig_var_dBigVector_m_xyzwMask_set(PyObject *_val) {
  {
    void *argp = 0;
    int res = SWIG_ConvertPtr(_val, &argp, SWIGTYPE_p_dBigVector,  0  | 0);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""dBigVector::m_xyzwMask""' of type '""dBigVector""'");
    }
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""dBigVector::m_xyzwMask""' of type '""dBigVector""'");
    } else {
      dBigVector * temp;
      temp  = reinterpret_cast< dBigVector * >(argp);
      dBigVector::m_xyzwMask = *temp;
      if (SWIG_IsNewObj(res)) delete temp;
    }
  }
  return 0;
fail:
  return 1;
}


SWIGINTERN PyObject *Swig_var_dBigVector_m_xyzwMask_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_NewPointerObj(SWIG_as_voidptr(&dBigVector::m_xyzwMask), SWIGTYPE_p_dBigVector,  0 );
  return pyobj;
}


SWIGINTERN PyObject *_wrap_dBigVector_m_xyzwMask_get(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(args)) {
  return Swig_var_dBigVector_m_xyzwMask_get();
}


SWIGINTERN PyObject *_wrap_dBigVector_m_xyzwMask_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  int res;
  
  res = Swig_var_dBigVector_m_xyzwMask_set(args);
  return !res ? SWIG_Py_Void() : NULL;
}


SWIGINTERN int Swig_var_dBigVector_m_epsilon_set(PyObject *_val) {
  {
    void *argp = 0;
    int res = SWIG_ConvertPtr(_val, &argp, SWIGTYPE_p_dBigVector,  0  | 0);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""dBigVector::m_epsilon""' of type '""dBigVector""'");
    }
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""dBigVector::m_epsilon""' of type '""dBigVector""'");
    } else {
      dBigVector * temp;
      temp  = reinterpret_cast< dBigVector * >(argp);
      dBigVector::m_epsilon = *temp;
      if (SWIG_IsNewObj(res)) delete temp;
    }
  }
  return 0;
fail:
  return 1;
}


SWIGINTERN PyObject *Swig_var_dBigVector_m_epsilon_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_NewPointerObj(SWIG_as_voidptr(&dBigVector::m_epsilon), SWIGTYPE_p_dBigVector,  0 );
  return pyobj;
}


SWIGINTERN PyObject *_wrap_dBigVector_m_epsilon_get(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(args)) {
  return Swig_var_dBigVector_m_epsilon_get();
}


SWIGINTERN PyObject *_wrap_dBigVector_m_epsilon_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  int res;
  
  res = Swig_var_dBigVector_m_epsilon_set(args);
  return !res ? SWIG_Py_Void() : NULL;
}


SWIGINTERN int Swig_var_dBigVector_m_signMask_set(PyObject *_val) {
  {
    void *argp = 0;
    int res = SWIG_ConvertPtr(_val, &argp, SWIGTYPE_p_dBigVector,  0  | 0);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""dBigVector::m_signMask""' of type '""dBigVector""'");
    }
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""dBigVector::m_signMask""' of type '""dBigVector""'");
    } else {
      dBigVector * temp;
      temp  = reinterpret_cast< dBigVector * >(argp);
      dBigVector::m_signMask = *temp;
      if (SWIG_IsNewObj(res)) delete temp;
    }
  }
  return 0;
fail:
  return 1;
}


SWIGINTERN PyObject *Swig_var_dBigVector_m_signMask_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_NewPointerObj(SWIG_as_voidptr(&dBigVector::m_signMask), SWIGTYPE_p_dBigVector,  0 );
  return pyobj;
}


SWIGINTERN PyObject *_wrap_dBigVector_m_signMask_get(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(args)) {
  return Swig_var_dBigVector_m_signMask_get();
}


SWIGINTERN PyObject *_wrap_dBigVector_m_signMask_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  int res;
  
  res = Swig_var_dBigVector_m_signMask_set(args);
  return !res ? SWIG_Py_Void() : NULL;
}


SWIGINTERN int Swig_var_dBigVector_m_triplexMask_set(PyObject *_val) {
  {
    void *argp = 0;
    int res = SWIG_ConvertPtr(_val, &argp, SWIGTYPE_p_dBigVector,  0  | 0);
    if (!SWIG_IsOK(res)) {
      SWIG_exception_fail(SWIG_ArgError(res), "in variable '""dBigVector::m_triplexMask""' of type '""dBigVector""'");
    }
    if (!argp) {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""dBigVector::m_triplexMask""' of type '""dBigVector""'");
    } else {
      dBigVector * temp;
      temp  = reinterpret_cast< dBigVector * >(argp);
      dBigVector::m_triplexMask = *temp;
      if (SWIG_IsNewObj(res)) delete temp;
    }
  }
  return 0;
fail:
  return 1;
}


SWIGINTERN PyObject *Swig_var_dBigVector_m_triplexMask_get(void) {
  PyObject *pyobj = 0;
  
  pyobj = SWIG_NewPointerObj(SWIG_as_voidptr(&dBigVector::m_triplexMask), SWIGTYPE_p_dBigVector,  0 );
  return pyobj;
}


SWIGINTERN PyObject *_wrap_dBigVector_m_triplexMask_get(PyObject *SWIGUNUSEDPARM(self), PyObject *SWIGUNUSEDPARM(args)) {
  return Swig_var_dBigVector_m_triplexMask_get();
}


SWIGINTERN PyObject *_wrap_dBigVector_m_triplexMask_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  int res;
  
  res = Swig_var_dBigVector_m_triplexMask_set(args);
  return !res ? SWIG_Py_Void() : NULL;
}


SWIGINTERN PyObject *_wrap_delete_dBigVector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dBigVector *arg1 = (dBigVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dBigVector, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_dBigVector" "', argument " "1"" of type '" "dBigVector *""'"); 
  }
  arg1 = reinterpret_cast< dBigVector * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *dBigVector_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_dBigVector, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *dBigVector_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_dGetZeroMatrix(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dMatrix *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "dGetZeroMatrix", 0, 0, 0)) SWIG_fail;
  result = (dMatrix *) &dGetZeroMatrix();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dMatrix, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dGetIdentityMatrix(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dMatrix *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "dGetIdentityMatrix", 0, 0, 0)) SWIG_fail;
  result = (dMatrix *) &dGetIdentityMatrix();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dMatrix, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_dMatrix__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  dMatrix *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (dMatrix *)new dMatrix();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dMatrix, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_dMatrix__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float *arg1 = (float *) (float *)0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  dMatrix *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_dMatrix" "', argument " "1"" of type '" "float const *const""'"); 
  }
  arg1 = reinterpret_cast< float * >(argp1);
  result = (dMatrix *)new dMatrix((float const *)arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dMatrix, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_dMatrix__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dVector *arg1 = 0 ;
  dVector *arg2 = 0 ;
  dVector *arg3 = 0 ;
  dVector *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  dMatrix *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_dMatrix" "', argument " "1"" of type '" "dVector const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_dMatrix" "', argument " "1"" of type '" "dVector const &""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_dMatrix" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_dMatrix" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_dMatrix" "', argument " "3"" of type '" "dVector const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_dMatrix" "', argument " "3"" of type '" "dVector const &""'"); 
  }
  arg3 = reinterpret_cast< dVector * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_dMatrix" "', argument " "4"" of type '" "dVector const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_dMatrix" "', argument " "4"" of type '" "dVector const &""'"); 
  }
  arg4 = reinterpret_cast< dVector * >(argp4);
  result = (dMatrix *)new dMatrix((dVector const &)*arg1,(dVector const &)*arg2,(dVector const &)*arg3,(dVector const &)*arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dMatrix, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_dMatrix__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dQuaternion *arg1 = 0 ;
  dVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  dMatrix *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_dQuaternion,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_dMatrix" "', argument " "1"" of type '" "dQuaternion const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_dMatrix" "', argument " "1"" of type '" "dQuaternion const &""'"); 
  }
  arg1 = reinterpret_cast< dQuaternion * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_dMatrix" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_dMatrix" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  result = (dMatrix *)new dMatrix((dQuaternion const &)*arg1,(dVector const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dMatrix, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_dMatrix(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dMatrix *arg1 = (dMatrix *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dMatrix, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_dMatrix" "', argument " "1"" of type '" "dMatrix *""'"); 
  }
  arg1 = reinterpret_cast< dMatrix * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_dMatrix__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dVector *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  dMatrix *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_dMatrix" "', argument " "1"" of type '" "dVector const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_dMatrix" "', argument " "1"" of type '" "dVector const &""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  result = (dMatrix *)new dMatrix((dVector const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dMatrix, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_dMatrix__SWIG_5(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dVector *arg1 = 0 ;
  dVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  dMatrix *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_dMatrix" "', argument " "1"" of type '" "dVector const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_dMatrix" "', argument " "1"" of type '" "dVector const &""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_dMatrix" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_dMatrix" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  result = (dMatrix *)new dMatrix((dVector const &)*arg1,(dVector const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dMatrix, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dMatrix_GetElement__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dMatrix *arg1 = (dMatrix *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  dVector *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dMatrix, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dMatrix_GetElement" "', argument " "1"" of type '" "dMatrix *""'"); 
  }
  arg1 = reinterpret_cast< dMatrix * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dMatrix_GetElement" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (dVector *) &(arg1)->operator [](arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dVector, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dMatrix_GetElement__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dMatrix *arg1 = (dMatrix *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  dVector *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dMatrix, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dMatrix_GetElement" "', argument " "1"" of type '" "dMatrix const *""'"); 
  }
  arg1 = reinterpret_cast< dMatrix * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dMatrix_GetElement" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (dVector *) &((dMatrix const *)arg1)->operator [](arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dVector, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dMatrix_GetElement(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "dMatrix_GetElement", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_dMatrix, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_dMatrix_GetElement__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_dMatrix, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_dMatrix_GetElement__SWIG_1(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'dMatrix_GetElement'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    dMatrix::operator [](int)\n"
    "    dMatrix::operator [](int) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_dMatrix_Inverse(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dMatrix *arg1 = (dMatrix *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dMatrix result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dMatrix, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dMatrix_Inverse" "', argument " "1"" of type '" "dMatrix const *""'"); 
  }
  arg1 = reinterpret_cast< dMatrix * >(argp1);
  result = ((dMatrix const *)arg1)->Inverse();
  resultobj = SWIG_NewPointerObj((new dMatrix(static_cast< const dMatrix& >(result))), SWIGTYPE_p_dMatrix, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dMatrix_Inverse4x4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dMatrix *arg1 = (dMatrix *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dMatrix result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dMatrix, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dMatrix_Inverse4x4" "', argument " "1"" of type '" "dMatrix const *""'"); 
  }
  arg1 = reinterpret_cast< dMatrix * >(argp1);
  result = ((dMatrix const *)arg1)->Inverse4x4();
  resultobj = SWIG_NewPointerObj((new dMatrix(static_cast< const dMatrix& >(result))), SWIGTYPE_p_dMatrix, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dMatrix_Transpose(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dMatrix *arg1 = (dMatrix *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dMatrix result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dMatrix, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dMatrix_Transpose" "', argument " "1"" of type '" "dMatrix const *""'"); 
  }
  arg1 = reinterpret_cast< dMatrix * >(argp1);
  result = ((dMatrix const *)arg1)->Transpose();
  resultobj = SWIG_NewPointerObj((new dMatrix(static_cast< const dMatrix& >(result))), SWIGTYPE_p_dMatrix, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dMatrix_Transpose4X4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dMatrix *arg1 = (dMatrix *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dMatrix result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dMatrix, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dMatrix_Transpose4X4" "', argument " "1"" of type '" "dMatrix const *""'"); 
  }
  arg1 = reinterpret_cast< dMatrix * >(argp1);
  result = ((dMatrix const *)arg1)->Transpose4X4();
  resultobj = SWIG_NewPointerObj((new dMatrix(static_cast< const dMatrix& >(result))), SWIGTYPE_p_dMatrix, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dMatrix_RotateVector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dMatrix *arg1 = (dMatrix *) 0 ;
  dVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "dMatrix_RotateVector", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dMatrix, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dMatrix_RotateVector" "', argument " "1"" of type '" "dMatrix const *""'"); 
  }
  arg1 = reinterpret_cast< dMatrix * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dMatrix_RotateVector" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dMatrix_RotateVector" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  result = ((dMatrix const *)arg1)->RotateVector((dVector const &)*arg2);
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dMatrix_UnrotateVector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dMatrix *arg1 = (dMatrix *) 0 ;
  dVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "dMatrix_UnrotateVector", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dMatrix, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dMatrix_UnrotateVector" "', argument " "1"" of type '" "dMatrix const *""'"); 
  }
  arg1 = reinterpret_cast< dMatrix * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dMatrix_UnrotateVector" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dMatrix_UnrotateVector" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  result = ((dMatrix const *)arg1)->UnrotateVector((dVector const &)*arg2);
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dMatrix_TransformVector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dMatrix *arg1 = (dMatrix *) 0 ;
  dVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "dMatrix_TransformVector", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dMatrix, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dMatrix_TransformVector" "', argument " "1"" of type '" "dMatrix const *""'"); 
  }
  arg1 = reinterpret_cast< dMatrix * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dMatrix_TransformVector" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dMatrix_TransformVector" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  result = ((dMatrix const *)arg1)->TransformVector((dVector const &)*arg2);
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dMatrix_UntransformVector(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dMatrix *arg1 = (dMatrix *) 0 ;
  dVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "dMatrix_UntransformVector", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dMatrix, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dMatrix_UntransformVector" "', argument " "1"" of type '" "dMatrix const *""'"); 
  }
  arg1 = reinterpret_cast< dMatrix * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dMatrix_UntransformVector" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dMatrix_UntransformVector" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  result = ((dMatrix const *)arg1)->UntransformVector((dVector const &)*arg2);
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dMatrix_TransformPlane(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dMatrix *arg1 = (dMatrix *) 0 ;
  dPlane *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dPlane result;
  
  if (!SWIG_Python_UnpackTuple(args, "dMatrix_TransformPlane", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dMatrix, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dMatrix_TransformPlane" "', argument " "1"" of type '" "dMatrix const *""'"); 
  }
  arg1 = reinterpret_cast< dMatrix * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dPlane,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dMatrix_TransformPlane" "', argument " "2"" of type '" "dPlane const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dMatrix_TransformPlane" "', argument " "2"" of type '" "dPlane const &""'"); 
  }
  arg2 = reinterpret_cast< dPlane * >(argp2);
  result = ((dMatrix const *)arg1)->TransformPlane((dPlane const &)*arg2);
  resultobj = SWIG_NewPointerObj((new dPlane(static_cast< const dPlane& >(result))), SWIGTYPE_p_dPlane, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dMatrix_UntransformPlane(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dMatrix *arg1 = (dMatrix *) 0 ;
  dPlane *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dPlane result;
  
  if (!SWIG_Python_UnpackTuple(args, "dMatrix_UntransformPlane", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dMatrix, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dMatrix_UntransformPlane" "', argument " "1"" of type '" "dMatrix const *""'"); 
  }
  arg1 = reinterpret_cast< dMatrix * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dPlane,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dMatrix_UntransformPlane" "', argument " "2"" of type '" "dPlane const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dMatrix_UntransformPlane" "', argument " "2"" of type '" "dPlane const &""'"); 
  }
  arg2 = reinterpret_cast< dPlane * >(argp2);
  result = ((dMatrix const *)arg1)->UntransformPlane((dPlane const &)*arg2);
  resultobj = SWIG_NewPointerObj((new dPlane(static_cast< const dPlane& >(result))), SWIGTYPE_p_dPlane, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dMatrix_TransformVector1x4(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dMatrix *arg1 = (dMatrix *) 0 ;
  dVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "dMatrix_TransformVector1x4", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dMatrix, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dMatrix_TransformVector1x4" "', argument " "1"" of type '" "dMatrix const *""'"); 
  }
  arg1 = reinterpret_cast< dMatrix * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dMatrix_TransformVector1x4" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dMatrix_TransformVector1x4" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  result = ((dMatrix const *)arg1)->TransformVector1x4((dVector const &)*arg2);
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dMatrix_SolveByGaussianElimination(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dMatrix *arg1 = (dMatrix *) 0 ;
  dVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "dMatrix_SolveByGaussianElimination", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dMatrix, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dMatrix_SolveByGaussianElimination" "', argument " "1"" of type '" "dMatrix const *""'"); 
  }
  arg1 = reinterpret_cast< dMatrix * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dMatrix_SolveByGaussianElimination" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dMatrix_SolveByGaussianElimination" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  result = ((dMatrix const *)arg1)->SolveByGaussianElimination((dVector const &)*arg2);
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dMatrix_TransformBBox(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dMatrix *arg1 = (dMatrix *) 0 ;
  dVector *arg2 = 0 ;
  dVector *arg3 = 0 ;
  dVector *arg4 = 0 ;
  dVector *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject *swig_obj[5] ;
  
  if (!SWIG_Python_UnpackTuple(args, "dMatrix_TransformBBox", 5, 5, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dMatrix, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dMatrix_TransformBBox" "', argument " "1"" of type '" "dMatrix const *""'"); 
  }
  arg1 = reinterpret_cast< dMatrix * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dMatrix_TransformBBox" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dMatrix_TransformBBox" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "dMatrix_TransformBBox" "', argument " "3"" of type '" "dVector const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dMatrix_TransformBBox" "', argument " "3"" of type '" "dVector const &""'"); 
  }
  arg3 = reinterpret_cast< dVector * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_dVector,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "dMatrix_TransformBBox" "', argument " "4"" of type '" "dVector &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dMatrix_TransformBBox" "', argument " "4"" of type '" "dVector &""'"); 
  }
  arg4 = reinterpret_cast< dVector * >(argp4);
  res5 = SWIG_ConvertPtr(swig_obj[4], &argp5, SWIGTYPE_p_dVector,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "dMatrix_TransformBBox" "', argument " "5"" of type '" "dVector &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dMatrix_TransformBBox" "', argument " "5"" of type '" "dVector &""'"); 
  }
  arg5 = reinterpret_cast< dVector * >(argp5);
  ((dMatrix const *)arg1)->TransformBBox((dVector const &)*arg2,(dVector const &)*arg3,*arg4,*arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dMatrix_CalcPitchYawRoll(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dMatrix *arg1 = (dMatrix *) 0 ;
  dVector *arg2 = 0 ;
  dVector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "dMatrix_CalcPitchYawRoll", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dMatrix, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dMatrix_CalcPitchYawRoll" "', argument " "1"" of type '" "dMatrix const *""'"); 
  }
  arg1 = reinterpret_cast< dMatrix * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dMatrix_CalcPitchYawRoll" "', argument " "2"" of type '" "dVector &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dMatrix_CalcPitchYawRoll" "', argument " "2"" of type '" "dVector &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_dVector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "dMatrix_CalcPitchYawRoll" "', argument " "3"" of type '" "dVector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dMatrix_CalcPitchYawRoll" "', argument " "3"" of type '" "dVector &""'"); 
  }
  arg3 = reinterpret_cast< dVector * >(argp3);
  ((dMatrix const *)arg1)->CalcPitchYawRoll(*arg2,*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dMatrix_TransformTriplex__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dMatrix *arg1 = (dMatrix *) 0 ;
  float *arg2 = (float *) (float *)0 ;
  int arg3 ;
  float *arg4 = (float *) (float *)0 ;
  int arg5 ;
  int arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  
  if ((nobjs < 6) || (nobjs > 6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dMatrix, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dMatrix_TransformTriplex" "', argument " "1"" of type '" "dMatrix const *""'"); 
  }
  arg1 = reinterpret_cast< dMatrix * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dMatrix_TransformTriplex" "', argument " "2"" of type '" "float *const""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "dMatrix_TransformTriplex" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "dMatrix_TransformTriplex" "', argument " "4"" of type '" "float const *const""'"); 
  }
  arg4 = reinterpret_cast< float * >(argp4);
  ecode5 = SWIG_AsVal_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "dMatrix_TransformTriplex" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  ecode6 = SWIG_AsVal_int(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "dMatrix_TransformTriplex" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  ((dMatrix const *)arg1)->TransformTriplex(arg2,arg3,(float const *)arg4,arg5,arg6);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dMatrix_TransformTriplex__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dMatrix *arg1 = (dMatrix *) 0 ;
  double *arg2 = (double *) (double *)0 ;
  int arg3 ;
  double *arg4 = (double *) (double *)0 ;
  int arg5 ;
  int arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  
  if ((nobjs < 6) || (nobjs > 6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dMatrix, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dMatrix_TransformTriplex" "', argument " "1"" of type '" "dMatrix const *""'"); 
  }
  arg1 = reinterpret_cast< dMatrix * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dMatrix_TransformTriplex" "', argument " "2"" of type '" "double *const""'"); 
  }
  arg2 = reinterpret_cast< double * >(argp2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "dMatrix_TransformTriplex" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "dMatrix_TransformTriplex" "', argument " "4"" of type '" "double const *const""'"); 
  }
  arg4 = reinterpret_cast< double * >(argp4);
  ecode5 = SWIG_AsVal_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "dMatrix_TransformTriplex" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  ecode6 = SWIG_AsVal_int(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "dMatrix_TransformTriplex" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  ((dMatrix const *)arg1)->TransformTriplex(arg2,arg3,(double const *)arg4,arg5,arg6);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dMatrix_TransformTriplex__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dMatrix *arg1 = (dMatrix *) 0 ;
  double *arg2 = (double *) (double *)0 ;
  int arg3 ;
  float *arg4 = (float *) (float *)0 ;
  int arg5 ;
  int arg6 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  int val5 ;
  int ecode5 = 0 ;
  int val6 ;
  int ecode6 = 0 ;
  
  if ((nobjs < 6) || (nobjs > 6)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dMatrix, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dMatrix_TransformTriplex" "', argument " "1"" of type '" "dMatrix const *""'"); 
  }
  arg1 = reinterpret_cast< dMatrix * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_double, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dMatrix_TransformTriplex" "', argument " "2"" of type '" "double *const""'"); 
  }
  arg2 = reinterpret_cast< double * >(argp2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "dMatrix_TransformTriplex" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "dMatrix_TransformTriplex" "', argument " "4"" of type '" "float const *const""'"); 
  }
  arg4 = reinterpret_cast< float * >(argp4);
  ecode5 = SWIG_AsVal_int(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "dMatrix_TransformTriplex" "', argument " "5"" of type '" "int""'");
  } 
  arg5 = static_cast< int >(val5);
  ecode6 = SWIG_AsVal_int(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "dMatrix_TransformTriplex" "', argument " "6"" of type '" "int""'");
  } 
  arg6 = static_cast< int >(val6);
  ((dMatrix const *)arg1)->TransformTriplex(arg2,arg3,(float const *)arg4,arg5,arg6);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dMatrix_TransformTriplex(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[7] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "dMatrix_TransformTriplex", 0, 6, argv))) SWIG_fail;
  --argc;
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_dMatrix, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_float, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_float, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_int(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_dMatrix_TransformTriplex__SWIG_0(self, argc, argv);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_dMatrix, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_double, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_double, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_int(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_dMatrix_TransformTriplex__SWIG_1(self, argc, argv);
              }
            }
          }
        }
      }
    }
  }
  if (argc == 6) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_dMatrix, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_double, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_float, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            {
              int res = SWIG_AsVal_int(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_int(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_dMatrix_TransformTriplex__SWIG_2(self, argc, argv);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'dMatrix_TransformTriplex'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    dMatrix::TransformTriplex(float *const,int,float const *const,int,int) const\n"
    "    dMatrix::TransformTriplex(double *const,int,double const *const,int,int) const\n"
    "    dMatrix::TransformTriplex(double *const,int,float const *const,int,int) const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_dMatrix_TestIdentity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dMatrix *arg1 = (dMatrix *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dMatrix, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dMatrix_TestIdentity" "', argument " "1"" of type '" "dMatrix const *""'"); 
  }
  arg1 = reinterpret_cast< dMatrix * >(argp1);
  result = (bool)((dMatrix const *)arg1)->TestIdentity();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dMatrix_TestSymetric3x3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dMatrix *arg1 = (dMatrix *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dMatrix, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dMatrix_TestSymetric3x3" "', argument " "1"" of type '" "dMatrix const *""'"); 
  }
  arg1 = reinterpret_cast< dMatrix * >(argp1);
  result = (bool)((dMatrix const *)arg1)->TestSymetric3x3();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dMatrix_TestOrthogonal__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dMatrix *arg1 = (dMatrix *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  bool result;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dMatrix, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dMatrix_TestOrthogonal" "', argument " "1"" of type '" "dMatrix const *""'"); 
  }
  arg1 = reinterpret_cast< dMatrix * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dMatrix_TestOrthogonal" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (bool)((dMatrix const *)arg1)->TestOrthogonal(arg2);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dMatrix_TestOrthogonal__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dMatrix *arg1 = (dMatrix *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool result;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dMatrix, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dMatrix_TestOrthogonal" "', argument " "1"" of type '" "dMatrix const *""'"); 
  }
  arg1 = reinterpret_cast< dMatrix * >(argp1);
  result = (bool)((dMatrix const *)arg1)->TestOrthogonal();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dMatrix_TestOrthogonal(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "dMatrix_TestOrthogonal", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_dMatrix, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_dMatrix_TestOrthogonal__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_dMatrix, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_dMatrix_TestOrthogonal__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'dMatrix_TestOrthogonal'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    dMatrix::TestOrthogonal(float) const\n"
    "    dMatrix::TestOrthogonal() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_dMatrix_Multiply3X3(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dMatrix *arg1 = (dMatrix *) 0 ;
  dMatrix *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dMatrix result;
  
  if (!SWIG_Python_UnpackTuple(args, "dMatrix_Multiply3X3", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dMatrix, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dMatrix_Multiply3X3" "', argument " "1"" of type '" "dMatrix const *""'"); 
  }
  arg1 = reinterpret_cast< dMatrix * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dMatrix,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dMatrix_Multiply3X3" "', argument " "2"" of type '" "dMatrix const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dMatrix_Multiply3X3" "', argument " "2"" of type '" "dMatrix const &""'"); 
  }
  arg2 = reinterpret_cast< dMatrix * >(argp2);
  result = ((dMatrix const *)arg1)->Multiply3X3((dMatrix const &)*arg2);
  resultobj = SWIG_NewPointerObj((new dMatrix(static_cast< const dMatrix& >(result))), SWIGTYPE_p_dMatrix, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dMatrix___mul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dMatrix *arg1 = (dMatrix *) 0 ;
  dMatrix *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dMatrix result;
  
  if (!SWIG_Python_UnpackTuple(args, "dMatrix___mul__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dMatrix, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dMatrix___mul__" "', argument " "1"" of type '" "dMatrix const *""'"); 
  }
  arg1 = reinterpret_cast< dMatrix * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dMatrix,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dMatrix___mul__" "', argument " "2"" of type '" "dMatrix const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dMatrix___mul__" "', argument " "2"" of type '" "dMatrix const &""'"); 
  }
  arg2 = reinterpret_cast< dMatrix * >(argp2);
  result = ((dMatrix const *)arg1)->operator *((dMatrix const &)*arg2);
  resultobj = SWIG_NewPointerObj((new dMatrix(static_cast< const dMatrix& >(result))), SWIGTYPE_p_dMatrix, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_dMatrix_EigenVectors(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dMatrix *arg1 = (dMatrix *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dVector result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dMatrix, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dMatrix_EigenVectors" "', argument " "1"" of type '" "dMatrix *""'"); 
  }
  arg1 = reinterpret_cast< dMatrix * >(argp1);
  result = (arg1)->EigenVectors();
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dMatrix_PolarDecomposition(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dMatrix *arg1 = (dMatrix *) 0 ;
  dMatrix *arg2 = 0 ;
  dVector *arg3 = 0 ;
  dMatrix *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject *swig_obj[4] ;
  
  if (!SWIG_Python_UnpackTuple(args, "dMatrix_PolarDecomposition", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dMatrix, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dMatrix_PolarDecomposition" "', argument " "1"" of type '" "dMatrix const *""'"); 
  }
  arg1 = reinterpret_cast< dMatrix * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dMatrix,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dMatrix_PolarDecomposition" "', argument " "2"" of type '" "dMatrix &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dMatrix_PolarDecomposition" "', argument " "2"" of type '" "dMatrix &""'"); 
  }
  arg2 = reinterpret_cast< dMatrix * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_dVector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "dMatrix_PolarDecomposition" "', argument " "3"" of type '" "dVector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dMatrix_PolarDecomposition" "', argument " "3"" of type '" "dVector &""'"); 
  }
  arg3 = reinterpret_cast< dVector * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_dMatrix,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "dMatrix_PolarDecomposition" "', argument " "4"" of type '" "dMatrix &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dMatrix_PolarDecomposition" "', argument " "4"" of type '" "dMatrix &""'"); 
  }
  arg4 = reinterpret_cast< dMatrix * >(argp4);
  ((dMatrix const *)arg1)->PolarDecomposition(*arg2,*arg3,*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_dMatrix__SWIG_6(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dMatrix *arg1 = 0 ;
  dVector *arg2 = 0 ;
  dMatrix *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  dMatrix *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_dMatrix,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_dMatrix" "', argument " "1"" of type '" "dMatrix const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_dMatrix" "', argument " "1"" of type '" "dMatrix const &""'"); 
  }
  arg1 = reinterpret_cast< dMatrix * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_dMatrix" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_dMatrix" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_dMatrix,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "new_dMatrix" "', argument " "3"" of type '" "dMatrix const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_dMatrix" "', argument " "3"" of type '" "dMatrix const &""'"); 
  }
  arg3 = reinterpret_cast< dMatrix * >(argp3);
  result = (dMatrix *)new dMatrix((dMatrix const &)*arg1,(dVector const &)*arg2,(dMatrix const &)*arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dMatrix, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_dMatrix(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_dMatrix", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_dMatrix__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_float, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_dMatrix__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_dVector, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_dMatrix__SWIG_4(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_dQuaternion, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_dVector, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_dMatrix__SWIG_3(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_dVector, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_dVector, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_dMatrix__SWIG_5(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_dMatrix, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_dVector, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_dMatrix, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_new_dMatrix__SWIG_6(self, argc, argv);
        }
      }
    }
  }
  if (argc == 4) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_dVector, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_dVector, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_dVector, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          int res = SWIG_ConvertPtr(argv[3], 0, SWIGTYPE_p_dVector, SWIG_POINTER_NO_NULL | 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_new_dMatrix__SWIG_2(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_dMatrix'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    dMatrix::dMatrix()\n"
    "    dMatrix::dMatrix(float const *const)\n"
    "    dMatrix::dMatrix(dVector const &,dVector const &,dVector const &,dVector const &)\n"
    "    dMatrix::dMatrix(dQuaternion const &,dVector const &)\n"
    "    dMatrix::dMatrix(dVector const &)\n"
    "    dMatrix::dMatrix(dVector const &,dVector const &)\n"
    "    dMatrix::dMatrix(dMatrix const &,dVector const &,dMatrix const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_dMatrix_m_front_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dMatrix *arg1 = (dMatrix *) 0 ;
  dVector *arg2 = (dVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "dMatrix_m_front_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dMatrix, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dMatrix_m_front_set" "', argument " "1"" of type '" "dMatrix *""'"); 
  }
  arg1 = reinterpret_cast< dMatrix * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dMatrix_m_front_set" "', argument " "2"" of type '" "dVector *""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  if (arg1) (arg1)->m_front = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dMatrix_m_front_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dMatrix *arg1 = (dMatrix *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dVector *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dMatrix, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dMatrix_m_front_get" "', argument " "1"" of type '" "dMatrix *""'"); 
  }
  arg1 = reinterpret_cast< dMatrix * >(argp1);
  result = (dVector *)& ((arg1)->m_front);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dVector, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dMatrix_m_up_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dMatrix *arg1 = (dMatrix *) 0 ;
  dVector *arg2 = (dVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "dMatrix_m_up_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dMatrix, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dMatrix_m_up_set" "', argument " "1"" of type '" "dMatrix *""'"); 
  }
  arg1 = reinterpret_cast< dMatrix * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dMatrix_m_up_set" "', argument " "2"" of type '" "dVector *""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  if (arg1) (arg1)->m_up = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dMatrix_m_up_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dMatrix *arg1 = (dMatrix *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dVector *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dMatrix, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dMatrix_m_up_get" "', argument " "1"" of type '" "dMatrix *""'"); 
  }
  arg1 = reinterpret_cast< dMatrix * >(argp1);
  result = (dVector *)& ((arg1)->m_up);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dVector, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dMatrix_m_right_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dMatrix *arg1 = (dMatrix *) 0 ;
  dVector *arg2 = (dVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "dMatrix_m_right_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dMatrix, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dMatrix_m_right_set" "', argument " "1"" of type '" "dMatrix *""'"); 
  }
  arg1 = reinterpret_cast< dMatrix * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dMatrix_m_right_set" "', argument " "2"" of type '" "dVector *""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  if (arg1) (arg1)->m_right = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dMatrix_m_right_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dMatrix *arg1 = (dMatrix *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dVector *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dMatrix, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dMatrix_m_right_get" "', argument " "1"" of type '" "dMatrix *""'"); 
  }
  arg1 = reinterpret_cast< dMatrix * >(argp1);
  result = (dVector *)& ((arg1)->m_right);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dVector, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dMatrix_m_posit_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dMatrix *arg1 = (dMatrix *) 0 ;
  dVector *arg2 = (dVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "dMatrix_m_posit_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dMatrix, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dMatrix_m_posit_set" "', argument " "1"" of type '" "dMatrix *""'"); 
  }
  arg1 = reinterpret_cast< dMatrix * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dMatrix_m_posit_set" "', argument " "2"" of type '" "dVector *""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  if (arg1) (arg1)->m_posit = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dMatrix_m_posit_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dMatrix *arg1 = (dMatrix *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dVector *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dMatrix, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dMatrix_m_posit_get" "', argument " "1"" of type '" "dMatrix *""'"); 
  }
  arg1 = reinterpret_cast< dMatrix * >(argp1);
  result = (dVector *)& ((arg1)->m_posit);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dVector, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *dMatrix_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_dMatrix, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *dMatrix_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_dPitchMatrix(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject *swig_obj[1] ;
  dMatrix result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "dPitchMatrix" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  result = dPitchMatrix(arg1);
  resultobj = SWIG_NewPointerObj((new dMatrix(static_cast< const dMatrix& >(result))), SWIGTYPE_p_dMatrix, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dYawMatrix(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject *swig_obj[1] ;
  dMatrix result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "dYawMatrix" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  result = dYawMatrix(arg1);
  resultobj = SWIG_NewPointerObj((new dMatrix(static_cast< const dMatrix& >(result))), SWIGTYPE_p_dMatrix, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dRollMatrix(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  PyObject *swig_obj[1] ;
  dMatrix result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "dRollMatrix" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  result = dRollMatrix(arg1);
  resultobj = SWIG_NewPointerObj((new dMatrix(static_cast< const dMatrix& >(result))), SWIGTYPE_p_dMatrix, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_dQuaternion__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  dQuaternion *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (dQuaternion *)new dQuaternion();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dQuaternion, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_dQuaternion__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dVector *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  dQuaternion *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_dQuaternion" "', argument " "1"" of type '" "dVector const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_dQuaternion" "', argument " "1"" of type '" "dVector const &""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  result = (dQuaternion *)new dQuaternion((dVector const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dQuaternion, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_dQuaternion__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dQuaternion *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  dQuaternion *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_dQuaternion,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_dQuaternion" "', argument " "1"" of type '" "dQuaternion const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_dQuaternion" "', argument " "1"" of type '" "dQuaternion const &""'"); 
  }
  arg1 = reinterpret_cast< dQuaternion * >(argp1);
  result = (dQuaternion *)new dQuaternion((dQuaternion const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dQuaternion, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_dQuaternion__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dMatrix *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  dQuaternion *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_dMatrix,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_dQuaternion" "', argument " "1"" of type '" "dMatrix const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_dQuaternion" "', argument " "1"" of type '" "dMatrix const &""'"); 
  }
  arg1 = reinterpret_cast< dMatrix * >(argp1);
  result = (dQuaternion *)new dQuaternion((dMatrix const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dQuaternion, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_dQuaternion__SWIG_4(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  dQuaternion *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_dQuaternion" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_dQuaternion" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_dQuaternion" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_dQuaternion" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  result = (dQuaternion *)new dQuaternion(arg1,arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dQuaternion, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_dQuaternion__SWIG_5(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dVector *arg1 = 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  dQuaternion *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_dQuaternion" "', argument " "1"" of type '" "dVector const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_dQuaternion" "', argument " "1"" of type '" "dVector const &""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_dQuaternion" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (dQuaternion *)new dQuaternion((dVector const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dQuaternion, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_dQuaternion(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_dQuaternion", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_dQuaternion__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_dQuaternion, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_dQuaternion__SWIG_2(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_dVector, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_dQuaternion__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_dMatrix, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_dQuaternion__SWIG_3(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_dVector, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_dQuaternion__SWIG_5(self, argc, argv);
      }
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            return _wrap_new_dQuaternion__SWIG_4(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_dQuaternion'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    dQuaternion::dQuaternion()\n"
    "    dQuaternion::dQuaternion(dVector const &)\n"
    "    dQuaternion::dQuaternion(dQuaternion const &)\n"
    "    dQuaternion::dQuaternion(dMatrix const &)\n"
    "    dQuaternion::dQuaternion(float,float,float,float)\n"
    "    dQuaternion::dQuaternion(dVector const &,float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_dQuaternion_Normalize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dQuaternion *arg1 = (dQuaternion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dQuaternion result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dQuaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dQuaternion_Normalize" "', argument " "1"" of type '" "dQuaternion const *""'"); 
  }
  arg1 = reinterpret_cast< dQuaternion * >(argp1);
  result = ((dQuaternion const *)arg1)->Normalize();
  resultobj = SWIG_NewPointerObj((new dQuaternion(static_cast< const dQuaternion& >(result))), SWIGTYPE_p_dQuaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dQuaternion_Scale(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dQuaternion *arg1 = (dQuaternion *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  dQuaternion result;
  
  if (!SWIG_Python_UnpackTuple(args, "dQuaternion_Scale", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dQuaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dQuaternion_Scale" "', argument " "1"" of type '" "dQuaternion const *""'"); 
  }
  arg1 = reinterpret_cast< dQuaternion * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "dQuaternion_Scale" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = ((dQuaternion const *)arg1)->Scale(arg2);
  resultobj = SWIG_NewPointerObj((new dQuaternion(static_cast< const dQuaternion& >(result))), SWIGTYPE_p_dQuaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dQuaternion_Inverse(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dQuaternion *arg1 = (dQuaternion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dQuaternion result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dQuaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dQuaternion_Inverse" "', argument " "1"" of type '" "dQuaternion const *""'"); 
  }
  arg1 = reinterpret_cast< dQuaternion * >(argp1);
  result = ((dQuaternion const *)arg1)->Inverse();
  resultobj = SWIG_NewPointerObj((new dQuaternion(static_cast< const dQuaternion& >(result))), SWIGTYPE_p_dQuaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dQuaternion___add__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dQuaternion *arg1 = (dQuaternion *) 0 ;
  dQuaternion *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dQuaternion result;
  
  if (!SWIG_Python_UnpackTuple(args, "dQuaternion___add__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dQuaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dQuaternion___add__" "', argument " "1"" of type '" "dQuaternion const *""'"); 
  }
  arg1 = reinterpret_cast< dQuaternion * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dQuaternion,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dQuaternion___add__" "', argument " "2"" of type '" "dQuaternion const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dQuaternion___add__" "', argument " "2"" of type '" "dQuaternion const &""'"); 
  }
  arg2 = reinterpret_cast< dQuaternion * >(argp2);
  result = ((dQuaternion const *)arg1)->operator +((dQuaternion const &)*arg2);
  resultobj = SWIG_NewPointerObj((new dQuaternion(static_cast< const dQuaternion& >(result))), SWIGTYPE_p_dQuaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_dQuaternion___sub__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dQuaternion *arg1 = (dQuaternion *) 0 ;
  dQuaternion *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dQuaternion result;
  
  if (!SWIG_Python_UnpackTuple(args, "dQuaternion___sub__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dQuaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dQuaternion___sub__" "', argument " "1"" of type '" "dQuaternion const *""'"); 
  }
  arg1 = reinterpret_cast< dQuaternion * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dQuaternion,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dQuaternion___sub__" "', argument " "2"" of type '" "dQuaternion const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dQuaternion___sub__" "', argument " "2"" of type '" "dQuaternion const &""'"); 
  }
  arg2 = reinterpret_cast< dQuaternion * >(argp2);
  result = ((dQuaternion const *)arg1)->operator -((dQuaternion const &)*arg2);
  resultobj = SWIG_NewPointerObj((new dQuaternion(static_cast< const dQuaternion& >(result))), SWIGTYPE_p_dQuaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_dQuaternion___mul__(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dQuaternion *arg1 = (dQuaternion *) 0 ;
  dQuaternion *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dQuaternion result;
  
  if (!SWIG_Python_UnpackTuple(args, "dQuaternion___mul__", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dQuaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dQuaternion___mul__" "', argument " "1"" of type '" "dQuaternion const *""'"); 
  }
  arg1 = reinterpret_cast< dQuaternion * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dQuaternion,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dQuaternion___mul__" "', argument " "2"" of type '" "dQuaternion const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dQuaternion___mul__" "', argument " "2"" of type '" "dQuaternion const &""'"); 
  }
  arg2 = reinterpret_cast< dQuaternion * >(argp2);
  result = ((dQuaternion const *)arg1)->operator *((dQuaternion const &)*arg2);
  resultobj = SWIG_NewPointerObj((new dQuaternion(static_cast< const dQuaternion& >(result))), SWIGTYPE_p_dQuaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  PyErr_Clear();
  Py_INCREF(Py_NotImplemented);
  return Py_NotImplemented;
}


SWIGINTERN PyObject *_wrap_dQuaternion_Slerp(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dQuaternion *arg1 = (dQuaternion *) 0 ;
  dQuaternion *arg2 = 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  dQuaternion result;
  
  if (!SWIG_Python_UnpackTuple(args, "dQuaternion_Slerp", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dQuaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dQuaternion_Slerp" "', argument " "1"" of type '" "dQuaternion const *""'"); 
  }
  arg1 = reinterpret_cast< dQuaternion * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dQuaternion,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dQuaternion_Slerp" "', argument " "2"" of type '" "dQuaternion const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dQuaternion_Slerp" "', argument " "2"" of type '" "dQuaternion const &""'"); 
  }
  arg2 = reinterpret_cast< dQuaternion * >(argp2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "dQuaternion_Slerp" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = ((dQuaternion const *)arg1)->Slerp((dQuaternion const &)*arg2,arg3);
  resultobj = SWIG_NewPointerObj((new dQuaternion(static_cast< const dQuaternion& >(result))), SWIGTYPE_p_dQuaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_dQuaternion_CalcAverageOmega(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dQuaternion *arg1 = (dQuaternion *) 0 ;
  dQuaternion *arg2 = 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  dVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "dQuaternion_CalcAverageOmega", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dQuaternion, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "dQuaternion_CalcAverageOmega" "', argument " "1"" of type '" "dQuaternion const *""'"); 
  }
  arg1 = reinterpret_cast< dQuaternion * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dQuaternion,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "dQuaternion_CalcAverageOmega" "', argument " "2"" of type '" "dQuaternion const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "dQuaternion_CalcAverageOmega" "', argument " "2"" of type '" "dQuaternion const &""'"); 
  }
  arg2 = reinterpret_cast< dQuaternion * >(argp2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "dQuaternion_CalcAverageOmega" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = ((dQuaternion const *)arg1)->CalcAverageOmega((dQuaternion const &)*arg2,arg3);
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_dQuaternion(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dQuaternion *arg1 = (dQuaternion *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_dQuaternion, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_dQuaternion" "', argument " "1"" of type '" "dQuaternion *""'"); 
  }
  arg1 = reinterpret_cast< dQuaternion * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *dQuaternion_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_dQuaternion, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *dQuaternion_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_ndShapeMaterial(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeMaterial *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_ndShapeMaterial", 0, 0, 0)) SWIG_fail;
  result = (ndShapeMaterial *)new ndShapeMaterial();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeMaterial, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeMaterial_m_userId_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeMaterial *arg1 = (ndShapeMaterial *) 0 ;
  long long arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  long long val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShapeMaterial_m_userId_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeMaterial_m_userId_set" "', argument " "1"" of type '" "ndShapeMaterial *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeMaterial * >(argp1);
  ecode2 = SWIG_AsVal_long_SS_long(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndShapeMaterial_m_userId_set" "', argument " "2"" of type '" "long long""'");
  } 
  arg2 = static_cast< long long >(val2);
  if (arg1) (arg1)->m_userId = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeMaterial_m_userId_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeMaterial *arg1 = (ndShapeMaterial *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  long long result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeMaterial_m_userId_get" "', argument " "1"" of type '" "ndShapeMaterial *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeMaterial * >(argp1);
  result = (long long) ((arg1)->m_userId);
  resultobj = SWIG_From_long_SS_long(static_cast< long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeMaterial_m_data_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeMaterial *arg1 = (ndShapeMaterial *) 0 ;
  ndShapeMaterial::nData *arg2 = (ndShapeMaterial::nData *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShapeMaterial_m_data_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeMaterial_m_data_set" "', argument " "1"" of type '" "ndShapeMaterial *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeMaterial * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_ndShapeMaterial__nData, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndShapeMaterial_m_data_set" "', argument " "2"" of type '" "ndShapeMaterial::nData *""'"); 
  }
  arg2 = reinterpret_cast< ndShapeMaterial::nData * >(argp2);
  if (arg1) (arg1)->m_data = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeMaterial_m_data_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeMaterial *arg1 = (ndShapeMaterial *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndShapeMaterial::nData *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeMaterial_m_data_get" "', argument " "1"" of type '" "ndShapeMaterial *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeMaterial * >(argp1);
  result = (ndShapeMaterial::nData *)& ((arg1)->m_data);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeMaterial__nData, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeMaterial_m_userParam_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeMaterial *arg1 = (ndShapeMaterial *) 0 ;
  ndShapeMaterial::dExtraData *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShapeMaterial_m_userParam_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeMaterial_m_userParam_set" "', argument " "1"" of type '" "ndShapeMaterial *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeMaterial * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_ndShapeMaterial__dExtraData, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndShapeMaterial_m_userParam_set" "', argument " "2"" of type '" "ndShapeMaterial::dExtraData [6]""'"); 
  } 
  arg2 = reinterpret_cast< ndShapeMaterial::dExtraData * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)6; ++ii) *(ndShapeMaterial::dExtraData *)&arg1->m_userParam[ii] = *((ndShapeMaterial::dExtraData *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""m_userParam""' of type '""ndShapeMaterial::dExtraData [6]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeMaterial_m_userParam_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeMaterial *arg1 = (ndShapeMaterial *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndShapeMaterial::dExtraData *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeMaterial_m_userParam_get" "', argument " "1"" of type '" "ndShapeMaterial *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeMaterial * >(argp1);
  result = (ndShapeMaterial::dExtraData *)(ndShapeMaterial::dExtraData *) ((arg1)->m_userParam);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeMaterial__dExtraData, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ndShapeMaterial(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeMaterial *arg1 = (ndShapeMaterial *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeMaterial, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ndShapeMaterial" "', argument " "1"" of type '" "ndShapeMaterial *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeMaterial * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ndShapeMaterial_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ndShapeMaterial, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ndShapeMaterial_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_ndBoxInfo_m_x_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBoxInfo *arg1 = (ndBoxInfo *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndBoxInfo_m_x_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBoxInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBoxInfo_m_x_set" "', argument " "1"" of type '" "ndBoxInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndBoxInfo * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndBoxInfo_m_x_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->m_x = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBoxInfo_m_x_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBoxInfo *arg1 = (ndBoxInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBoxInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBoxInfo_m_x_get" "', argument " "1"" of type '" "ndBoxInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndBoxInfo * >(argp1);
  result = (float) ((arg1)->m_x);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBoxInfo_m_y_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBoxInfo *arg1 = (ndBoxInfo *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndBoxInfo_m_y_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBoxInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBoxInfo_m_y_set" "', argument " "1"" of type '" "ndBoxInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndBoxInfo * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndBoxInfo_m_y_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->m_y = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBoxInfo_m_y_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBoxInfo *arg1 = (ndBoxInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBoxInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBoxInfo_m_y_get" "', argument " "1"" of type '" "ndBoxInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndBoxInfo * >(argp1);
  result = (float) ((arg1)->m_y);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBoxInfo_m_z_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBoxInfo *arg1 = (ndBoxInfo *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndBoxInfo_m_z_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBoxInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBoxInfo_m_z_set" "', argument " "1"" of type '" "ndBoxInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndBoxInfo * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndBoxInfo_m_z_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->m_z = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBoxInfo_m_z_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBoxInfo *arg1 = (ndBoxInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBoxInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBoxInfo_m_z_get" "', argument " "1"" of type '" "ndBoxInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndBoxInfo * >(argp1);
  result = (float) ((arg1)->m_z);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ndBoxInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBoxInfo *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_ndBoxInfo", 0, 0, 0)) SWIG_fail;
  result = (ndBoxInfo *)new ndBoxInfo();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndBoxInfo, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ndBoxInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBoxInfo *arg1 = (ndBoxInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBoxInfo, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ndBoxInfo" "', argument " "1"" of type '" "ndBoxInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndBoxInfo * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ndBoxInfo_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ndBoxInfo, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ndBoxInfo_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_ndPointInfo_m_noUsed_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndPointInfo *arg1 = (ndPointInfo *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndPointInfo_m_noUsed_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndPointInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndPointInfo_m_noUsed_set" "', argument " "1"" of type '" "ndPointInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndPointInfo * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndPointInfo_m_noUsed_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->m_noUsed = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndPointInfo_m_noUsed_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndPointInfo *arg1 = (ndPointInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndPointInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndPointInfo_m_noUsed_get" "', argument " "1"" of type '" "ndPointInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndPointInfo * >(argp1);
  result = (float) ((arg1)->m_noUsed);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ndPointInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndPointInfo *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_ndPointInfo", 0, 0, 0)) SWIG_fail;
  result = (ndPointInfo *)new ndPointInfo();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndPointInfo, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ndPointInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndPointInfo *arg1 = (ndPointInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndPointInfo, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ndPointInfo" "', argument " "1"" of type '" "ndPointInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndPointInfo * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ndPointInfo_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ndPointInfo, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ndPointInfo_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_ndSphereInfo_m_radius_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndSphereInfo *arg1 = (ndSphereInfo *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndSphereInfo_m_radius_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndSphereInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndSphereInfo_m_radius_set" "', argument " "1"" of type '" "ndSphereInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndSphereInfo * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndSphereInfo_m_radius_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->m_radius = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndSphereInfo_m_radius_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndSphereInfo *arg1 = (ndSphereInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndSphereInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndSphereInfo_m_radius_get" "', argument " "1"" of type '" "ndSphereInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndSphereInfo * >(argp1);
  result = (float) ((arg1)->m_radius);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ndSphereInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndSphereInfo *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_ndSphereInfo", 0, 0, 0)) SWIG_fail;
  result = (ndSphereInfo *)new ndSphereInfo();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndSphereInfo, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ndSphereInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndSphereInfo *arg1 = (ndSphereInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndSphereInfo, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ndSphereInfo" "', argument " "1"" of type '" "ndSphereInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndSphereInfo * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ndSphereInfo_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ndSphereInfo, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ndSphereInfo_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_ndCylinderInfo_m_radio0_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndCylinderInfo *arg1 = (ndCylinderInfo *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndCylinderInfo_m_radio0_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndCylinderInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndCylinderInfo_m_radio0_set" "', argument " "1"" of type '" "ndCylinderInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndCylinderInfo * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndCylinderInfo_m_radio0_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->m_radio0 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndCylinderInfo_m_radio0_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndCylinderInfo *arg1 = (ndCylinderInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndCylinderInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndCylinderInfo_m_radio0_get" "', argument " "1"" of type '" "ndCylinderInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndCylinderInfo * >(argp1);
  result = (float) ((arg1)->m_radio0);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndCylinderInfo_m_radio1_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndCylinderInfo *arg1 = (ndCylinderInfo *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndCylinderInfo_m_radio1_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndCylinderInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndCylinderInfo_m_radio1_set" "', argument " "1"" of type '" "ndCylinderInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndCylinderInfo * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndCylinderInfo_m_radio1_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->m_radio1 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndCylinderInfo_m_radio1_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndCylinderInfo *arg1 = (ndCylinderInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndCylinderInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndCylinderInfo_m_radio1_get" "', argument " "1"" of type '" "ndCylinderInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndCylinderInfo * >(argp1);
  result = (float) ((arg1)->m_radio1);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndCylinderInfo_m_height_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndCylinderInfo *arg1 = (ndCylinderInfo *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndCylinderInfo_m_height_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndCylinderInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndCylinderInfo_m_height_set" "', argument " "1"" of type '" "ndCylinderInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndCylinderInfo * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndCylinderInfo_m_height_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->m_height = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndCylinderInfo_m_height_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndCylinderInfo *arg1 = (ndCylinderInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndCylinderInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndCylinderInfo_m_height_get" "', argument " "1"" of type '" "ndCylinderInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndCylinderInfo * >(argp1);
  result = (float) ((arg1)->m_height);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ndCylinderInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndCylinderInfo *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_ndCylinderInfo", 0, 0, 0)) SWIG_fail;
  result = (ndCylinderInfo *)new ndCylinderInfo();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndCylinderInfo, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ndCylinderInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndCylinderInfo *arg1 = (ndCylinderInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndCylinderInfo, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ndCylinderInfo" "', argument " "1"" of type '" "ndCylinderInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndCylinderInfo * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ndCylinderInfo_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ndCylinderInfo, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ndCylinderInfo_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_ndCapsuleInfo_m_radio0_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndCapsuleInfo *arg1 = (ndCapsuleInfo *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndCapsuleInfo_m_radio0_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndCapsuleInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndCapsuleInfo_m_radio0_set" "', argument " "1"" of type '" "ndCapsuleInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndCapsuleInfo * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndCapsuleInfo_m_radio0_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->m_radio0 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndCapsuleInfo_m_radio0_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndCapsuleInfo *arg1 = (ndCapsuleInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndCapsuleInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndCapsuleInfo_m_radio0_get" "', argument " "1"" of type '" "ndCapsuleInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndCapsuleInfo * >(argp1);
  result = (float) ((arg1)->m_radio0);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndCapsuleInfo_m_radio1_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndCapsuleInfo *arg1 = (ndCapsuleInfo *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndCapsuleInfo_m_radio1_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndCapsuleInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndCapsuleInfo_m_radio1_set" "', argument " "1"" of type '" "ndCapsuleInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndCapsuleInfo * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndCapsuleInfo_m_radio1_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->m_radio1 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndCapsuleInfo_m_radio1_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndCapsuleInfo *arg1 = (ndCapsuleInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndCapsuleInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndCapsuleInfo_m_radio1_get" "', argument " "1"" of type '" "ndCapsuleInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndCapsuleInfo * >(argp1);
  result = (float) ((arg1)->m_radio1);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndCapsuleInfo_m_height_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndCapsuleInfo *arg1 = (ndCapsuleInfo *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndCapsuleInfo_m_height_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndCapsuleInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndCapsuleInfo_m_height_set" "', argument " "1"" of type '" "ndCapsuleInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndCapsuleInfo * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndCapsuleInfo_m_height_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->m_height = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndCapsuleInfo_m_height_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndCapsuleInfo *arg1 = (ndCapsuleInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndCapsuleInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndCapsuleInfo_m_height_get" "', argument " "1"" of type '" "ndCapsuleInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndCapsuleInfo * >(argp1);
  result = (float) ((arg1)->m_height);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ndCapsuleInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndCapsuleInfo *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_ndCapsuleInfo", 0, 0, 0)) SWIG_fail;
  result = (ndCapsuleInfo *)new ndCapsuleInfo();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndCapsuleInfo, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ndCapsuleInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndCapsuleInfo *arg1 = (ndCapsuleInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndCapsuleInfo, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ndCapsuleInfo" "', argument " "1"" of type '" "ndCapsuleInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndCapsuleInfo * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ndCapsuleInfo_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ndCapsuleInfo, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ndCapsuleInfo_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_ndConeInfo_m_radius_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndConeInfo *arg1 = (ndConeInfo *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndConeInfo_m_radius_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndConeInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndConeInfo_m_radius_set" "', argument " "1"" of type '" "ndConeInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndConeInfo * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndConeInfo_m_radius_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->m_radius = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndConeInfo_m_radius_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndConeInfo *arg1 = (ndConeInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndConeInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndConeInfo_m_radius_get" "', argument " "1"" of type '" "ndConeInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndConeInfo * >(argp1);
  result = (float) ((arg1)->m_radius);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndConeInfo_m_height_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndConeInfo *arg1 = (ndConeInfo *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndConeInfo_m_height_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndConeInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndConeInfo_m_height_set" "', argument " "1"" of type '" "ndConeInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndConeInfo * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndConeInfo_m_height_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->m_height = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndConeInfo_m_height_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndConeInfo *arg1 = (ndConeInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndConeInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndConeInfo_m_height_get" "', argument " "1"" of type '" "ndConeInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndConeInfo * >(argp1);
  result = (float) ((arg1)->m_height);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ndConeInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndConeInfo *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_ndConeInfo", 0, 0, 0)) SWIG_fail;
  result = (ndConeInfo *)new ndConeInfo();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndConeInfo, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ndConeInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndConeInfo *arg1 = (ndConeInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndConeInfo, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ndConeInfo" "', argument " "1"" of type '" "ndConeInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndConeInfo * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ndConeInfo_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ndConeInfo, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ndConeInfo_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_ndChamferCylinderInfo_m_r_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndChamferCylinderInfo *arg1 = (ndChamferCylinderInfo *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndChamferCylinderInfo_m_r_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndChamferCylinderInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndChamferCylinderInfo_m_r_set" "', argument " "1"" of type '" "ndChamferCylinderInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndChamferCylinderInfo * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndChamferCylinderInfo_m_r_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->m_r = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndChamferCylinderInfo_m_r_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndChamferCylinderInfo *arg1 = (ndChamferCylinderInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndChamferCylinderInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndChamferCylinderInfo_m_r_get" "', argument " "1"" of type '" "ndChamferCylinderInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndChamferCylinderInfo * >(argp1);
  result = (float) ((arg1)->m_r);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndChamferCylinderInfo_m_height_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndChamferCylinderInfo *arg1 = (ndChamferCylinderInfo *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndChamferCylinderInfo_m_height_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndChamferCylinderInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndChamferCylinderInfo_m_height_set" "', argument " "1"" of type '" "ndChamferCylinderInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndChamferCylinderInfo * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndChamferCylinderInfo_m_height_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->m_height = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndChamferCylinderInfo_m_height_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndChamferCylinderInfo *arg1 = (ndChamferCylinderInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndChamferCylinderInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndChamferCylinderInfo_m_height_get" "', argument " "1"" of type '" "ndChamferCylinderInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndChamferCylinderInfo * >(argp1);
  result = (float) ((arg1)->m_height);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ndChamferCylinderInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndChamferCylinderInfo *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_ndChamferCylinderInfo", 0, 0, 0)) SWIG_fail;
  result = (ndChamferCylinderInfo *)new ndChamferCylinderInfo();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndChamferCylinderInfo, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ndChamferCylinderInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndChamferCylinderInfo *arg1 = (ndChamferCylinderInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndChamferCylinderInfo, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ndChamferCylinderInfo" "', argument " "1"" of type '" "ndChamferCylinderInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndChamferCylinderInfo * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ndChamferCylinderInfo_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ndChamferCylinderInfo, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ndChamferCylinderInfo_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_ndConvexHullInfo_m_vertexCount_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndConvexHullInfo *arg1 = (ndConvexHullInfo *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndConvexHullInfo_m_vertexCount_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndConvexHullInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndConvexHullInfo_m_vertexCount_set" "', argument " "1"" of type '" "ndConvexHullInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndConvexHullInfo * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndConvexHullInfo_m_vertexCount_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->m_vertexCount = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndConvexHullInfo_m_vertexCount_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndConvexHullInfo *arg1 = (ndConvexHullInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndConvexHullInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndConvexHullInfo_m_vertexCount_get" "', argument " "1"" of type '" "ndConvexHullInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndConvexHullInfo * >(argp1);
  result = (int) ((arg1)->m_vertexCount);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndConvexHullInfo_m_strideInBytes_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndConvexHullInfo *arg1 = (ndConvexHullInfo *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndConvexHullInfo_m_strideInBytes_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndConvexHullInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndConvexHullInfo_m_strideInBytes_set" "', argument " "1"" of type '" "ndConvexHullInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndConvexHullInfo * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndConvexHullInfo_m_strideInBytes_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->m_strideInBytes = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndConvexHullInfo_m_strideInBytes_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndConvexHullInfo *arg1 = (ndConvexHullInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndConvexHullInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndConvexHullInfo_m_strideInBytes_get" "', argument " "1"" of type '" "ndConvexHullInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndConvexHullInfo * >(argp1);
  result = (int) ((arg1)->m_strideInBytes);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndConvexHullInfo_m_faceCount_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndConvexHullInfo *arg1 = (ndConvexHullInfo *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndConvexHullInfo_m_faceCount_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndConvexHullInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndConvexHullInfo_m_faceCount_set" "', argument " "1"" of type '" "ndConvexHullInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndConvexHullInfo * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndConvexHullInfo_m_faceCount_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->m_faceCount = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndConvexHullInfo_m_faceCount_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndConvexHullInfo *arg1 = (ndConvexHullInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndConvexHullInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndConvexHullInfo_m_faceCount_get" "', argument " "1"" of type '" "ndConvexHullInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndConvexHullInfo * >(argp1);
  result = (int) ((arg1)->m_faceCount);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndConvexHullInfo_m_vertex_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndConvexHullInfo *arg1 = (ndConvexHullInfo *) 0 ;
  dVector *arg2 = (dVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndConvexHullInfo_m_vertex_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndConvexHullInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndConvexHullInfo_m_vertex_set" "', argument " "1"" of type '" "ndConvexHullInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndConvexHullInfo * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_dVector, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndConvexHullInfo_m_vertex_set" "', argument " "2"" of type '" "dVector *""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  if (arg1) (arg1)->m_vertex = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndConvexHullInfo_m_vertex_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndConvexHullInfo *arg1 = (ndConvexHullInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dVector *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndConvexHullInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndConvexHullInfo_m_vertex_get" "', argument " "1"" of type '" "ndConvexHullInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndConvexHullInfo * >(argp1);
  result = (dVector *) ((arg1)->m_vertex);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dVector, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ndConvexHullInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndConvexHullInfo *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_ndConvexHullInfo", 0, 0, 0)) SWIG_fail;
  result = (ndConvexHullInfo *)new ndConvexHullInfo();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndConvexHullInfo, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ndConvexHullInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndConvexHullInfo *arg1 = (ndConvexHullInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndConvexHullInfo, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ndConvexHullInfo" "', argument " "1"" of type '" "ndConvexHullInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndConvexHullInfo * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ndConvexHullInfo_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ndConvexHullInfo, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ndConvexHullInfo_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_ndCoumpoundInfo_m_noUsed_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndCoumpoundInfo *arg1 = (ndCoumpoundInfo *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndCoumpoundInfo_m_noUsed_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndCoumpoundInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndCoumpoundInfo_m_noUsed_set" "', argument " "1"" of type '" "ndCoumpoundInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndCoumpoundInfo * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndCoumpoundInfo_m_noUsed_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->m_noUsed = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndCoumpoundInfo_m_noUsed_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndCoumpoundInfo *arg1 = (ndCoumpoundInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndCoumpoundInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndCoumpoundInfo_m_noUsed_get" "', argument " "1"" of type '" "ndCoumpoundInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndCoumpoundInfo * >(argp1);
  result = (int) ((arg1)->m_noUsed);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ndCoumpoundInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndCoumpoundInfo *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_ndCoumpoundInfo", 0, 0, 0)) SWIG_fail;
  result = (ndCoumpoundInfo *)new ndCoumpoundInfo();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndCoumpoundInfo, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ndCoumpoundInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndCoumpoundInfo *arg1 = (ndCoumpoundInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndCoumpoundInfo, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ndCoumpoundInfo" "', argument " "1"" of type '" "ndCoumpoundInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndCoumpoundInfo * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ndCoumpoundInfo_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ndCoumpoundInfo, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ndCoumpoundInfo_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_ndProceduralInfoInfo_m_noUsed_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndProceduralInfoInfo *arg1 = (ndProceduralInfoInfo *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndProceduralInfoInfo_m_noUsed_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndProceduralInfoInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndProceduralInfoInfo_m_noUsed_set" "', argument " "1"" of type '" "ndProceduralInfoInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndProceduralInfoInfo * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndProceduralInfoInfo_m_noUsed_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->m_noUsed = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndProceduralInfoInfo_m_noUsed_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndProceduralInfoInfo *arg1 = (ndProceduralInfoInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndProceduralInfoInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndProceduralInfoInfo_m_noUsed_get" "', argument " "1"" of type '" "ndProceduralInfoInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndProceduralInfoInfo * >(argp1);
  result = (int) ((arg1)->m_noUsed);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ndProceduralInfoInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndProceduralInfoInfo *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_ndProceduralInfoInfo", 0, 0, 0)) SWIG_fail;
  result = (ndProceduralInfoInfo *)new ndProceduralInfoInfo();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndProceduralInfoInfo, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ndProceduralInfoInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndProceduralInfoInfo *arg1 = (ndProceduralInfoInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndProceduralInfoInfo, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ndProceduralInfoInfo" "', argument " "1"" of type '" "ndProceduralInfoInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndProceduralInfoInfo * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ndProceduralInfoInfo_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ndProceduralInfoInfo, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ndProceduralInfoInfo_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_ndCollisionBvhInfo_m_vertexCount_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndCollisionBvhInfo *arg1 = (ndCollisionBvhInfo *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndCollisionBvhInfo_m_vertexCount_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndCollisionBvhInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndCollisionBvhInfo_m_vertexCount_set" "', argument " "1"" of type '" "ndCollisionBvhInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndCollisionBvhInfo * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndCollisionBvhInfo_m_vertexCount_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->m_vertexCount = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndCollisionBvhInfo_m_vertexCount_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndCollisionBvhInfo *arg1 = (ndCollisionBvhInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndCollisionBvhInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndCollisionBvhInfo_m_vertexCount_get" "', argument " "1"" of type '" "ndCollisionBvhInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndCollisionBvhInfo * >(argp1);
  result = (int) ((arg1)->m_vertexCount);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndCollisionBvhInfo_m_indexCount_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndCollisionBvhInfo *arg1 = (ndCollisionBvhInfo *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndCollisionBvhInfo_m_indexCount_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndCollisionBvhInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndCollisionBvhInfo_m_indexCount_set" "', argument " "1"" of type '" "ndCollisionBvhInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndCollisionBvhInfo * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndCollisionBvhInfo_m_indexCount_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->m_indexCount = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndCollisionBvhInfo_m_indexCount_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndCollisionBvhInfo *arg1 = (ndCollisionBvhInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndCollisionBvhInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndCollisionBvhInfo_m_indexCount_get" "', argument " "1"" of type '" "ndCollisionBvhInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndCollisionBvhInfo * >(argp1);
  result = (int) ((arg1)->m_indexCount);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ndCollisionBvhInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndCollisionBvhInfo *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_ndCollisionBvhInfo", 0, 0, 0)) SWIG_fail;
  result = (ndCollisionBvhInfo *)new ndCollisionBvhInfo();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndCollisionBvhInfo, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ndCollisionBvhInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndCollisionBvhInfo *arg1 = (ndCollisionBvhInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndCollisionBvhInfo, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ndCollisionBvhInfo" "', argument " "1"" of type '" "ndCollisionBvhInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndCollisionBvhInfo * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ndCollisionBvhInfo_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ndCollisionBvhInfo, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ndCollisionBvhInfo_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_ndHeighfieldInfo_m_width_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndHeighfieldInfo *arg1 = (ndHeighfieldInfo *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndHeighfieldInfo_m_width_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndHeighfieldInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndHeighfieldInfo_m_width_set" "', argument " "1"" of type '" "ndHeighfieldInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndHeighfieldInfo * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndHeighfieldInfo_m_width_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->m_width = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndHeighfieldInfo_m_width_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndHeighfieldInfo *arg1 = (ndHeighfieldInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndHeighfieldInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndHeighfieldInfo_m_width_get" "', argument " "1"" of type '" "ndHeighfieldInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndHeighfieldInfo * >(argp1);
  result = (int) ((arg1)->m_width);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndHeighfieldInfo_m_height_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndHeighfieldInfo *arg1 = (ndHeighfieldInfo *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndHeighfieldInfo_m_height_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndHeighfieldInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndHeighfieldInfo_m_height_set" "', argument " "1"" of type '" "ndHeighfieldInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndHeighfieldInfo * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndHeighfieldInfo_m_height_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->m_height = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndHeighfieldInfo_m_height_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndHeighfieldInfo *arg1 = (ndHeighfieldInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndHeighfieldInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndHeighfieldInfo_m_height_get" "', argument " "1"" of type '" "ndHeighfieldInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndHeighfieldInfo * >(argp1);
  result = (int) ((arg1)->m_height);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndHeighfieldInfo_m_gridsDiagonals_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndHeighfieldInfo *arg1 = (ndHeighfieldInfo *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndHeighfieldInfo_m_gridsDiagonals_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndHeighfieldInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndHeighfieldInfo_m_gridsDiagonals_set" "', argument " "1"" of type '" "ndHeighfieldInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndHeighfieldInfo * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndHeighfieldInfo_m_gridsDiagonals_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->m_gridsDiagonals = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndHeighfieldInfo_m_gridsDiagonals_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndHeighfieldInfo *arg1 = (ndHeighfieldInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndHeighfieldInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndHeighfieldInfo_m_gridsDiagonals_get" "', argument " "1"" of type '" "ndHeighfieldInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndHeighfieldInfo * >(argp1);
  result = (int) ((arg1)->m_gridsDiagonals);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndHeighfieldInfo_m_verticalScale_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndHeighfieldInfo *arg1 = (ndHeighfieldInfo *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndHeighfieldInfo_m_verticalScale_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndHeighfieldInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndHeighfieldInfo_m_verticalScale_set" "', argument " "1"" of type '" "ndHeighfieldInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndHeighfieldInfo * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndHeighfieldInfo_m_verticalScale_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->m_verticalScale = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndHeighfieldInfo_m_verticalScale_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndHeighfieldInfo *arg1 = (ndHeighfieldInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndHeighfieldInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndHeighfieldInfo_m_verticalScale_get" "', argument " "1"" of type '" "ndHeighfieldInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndHeighfieldInfo * >(argp1);
  result = (float) ((arg1)->m_verticalScale);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndHeighfieldInfo_m_horizonalScale_x_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndHeighfieldInfo *arg1 = (ndHeighfieldInfo *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndHeighfieldInfo_m_horizonalScale_x_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndHeighfieldInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndHeighfieldInfo_m_horizonalScale_x_set" "', argument " "1"" of type '" "ndHeighfieldInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndHeighfieldInfo * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndHeighfieldInfo_m_horizonalScale_x_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->m_horizonalScale_x = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndHeighfieldInfo_m_horizonalScale_x_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndHeighfieldInfo *arg1 = (ndHeighfieldInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndHeighfieldInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndHeighfieldInfo_m_horizonalScale_x_get" "', argument " "1"" of type '" "ndHeighfieldInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndHeighfieldInfo * >(argp1);
  result = (float) ((arg1)->m_horizonalScale_x);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndHeighfieldInfo_m_horizonalScale_z_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndHeighfieldInfo *arg1 = (ndHeighfieldInfo *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndHeighfieldInfo_m_horizonalScale_z_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndHeighfieldInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndHeighfieldInfo_m_horizonalScale_z_set" "', argument " "1"" of type '" "ndHeighfieldInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndHeighfieldInfo * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndHeighfieldInfo_m_horizonalScale_z_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->m_horizonalScale_z = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndHeighfieldInfo_m_horizonalScale_z_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndHeighfieldInfo *arg1 = (ndHeighfieldInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndHeighfieldInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndHeighfieldInfo_m_horizonalScale_z_get" "', argument " "1"" of type '" "ndHeighfieldInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndHeighfieldInfo * >(argp1);
  result = (float) ((arg1)->m_horizonalScale_z);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndHeighfieldInfo_m_elevation_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndHeighfieldInfo *arg1 = (ndHeighfieldInfo *) 0 ;
  short *arg2 = (short *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndHeighfieldInfo_m_elevation_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndHeighfieldInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndHeighfieldInfo_m_elevation_set" "', argument " "1"" of type '" "ndHeighfieldInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndHeighfieldInfo * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_short, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndHeighfieldInfo_m_elevation_set" "', argument " "2"" of type '" "short *""'"); 
  }
  arg2 = reinterpret_cast< short * >(argp2);
  if (arg1) (arg1)->m_elevation = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndHeighfieldInfo_m_elevation_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndHeighfieldInfo *arg1 = (ndHeighfieldInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  short *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndHeighfieldInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndHeighfieldInfo_m_elevation_get" "', argument " "1"" of type '" "ndHeighfieldInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndHeighfieldInfo * >(argp1);
  result = (short *) ((arg1)->m_elevation);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_short, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndHeighfieldInfo_m_atributes_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndHeighfieldInfo *arg1 = (ndHeighfieldInfo *) 0 ;
  signed char *arg2 = (signed char *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndHeighfieldInfo_m_atributes_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndHeighfieldInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndHeighfieldInfo_m_atributes_set" "', argument " "1"" of type '" "ndHeighfieldInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndHeighfieldInfo * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_signed_char, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndHeighfieldInfo_m_atributes_set" "', argument " "2"" of type '" "signed char *""'"); 
  }
  arg2 = reinterpret_cast< signed char * >(argp2);
  if (arg1) (arg1)->m_atributes = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndHeighfieldInfo_m_atributes_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndHeighfieldInfo *arg1 = (ndHeighfieldInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  signed char *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndHeighfieldInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndHeighfieldInfo_m_atributes_get" "', argument " "1"" of type '" "ndHeighfieldInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndHeighfieldInfo * >(argp1);
  result = (signed char *) ((arg1)->m_atributes);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_signed_char, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ndHeighfieldInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndHeighfieldInfo *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_ndHeighfieldInfo", 0, 0, 0)) SWIG_fail;
  result = (ndHeighfieldInfo *)new ndHeighfieldInfo();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndHeighfieldInfo, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ndHeighfieldInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndHeighfieldInfo *arg1 = (ndHeighfieldInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndHeighfieldInfo, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ndHeighfieldInfo" "', argument " "1"" of type '" "ndHeighfieldInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndHeighfieldInfo * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ndHeighfieldInfo_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ndHeighfieldInfo, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ndHeighfieldInfo_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_ndShapeInfo_m_offsetMatrix_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInfo *arg1 = (ndShapeInfo *) 0 ;
  dMatrix *arg2 = (dMatrix *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShapeInfo_m_offsetMatrix_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInfo_m_offsetMatrix_set" "', argument " "1"" of type '" "ndShapeInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInfo * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_dMatrix, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndShapeInfo_m_offsetMatrix_set" "', argument " "2"" of type '" "dMatrix *""'"); 
  }
  arg2 = reinterpret_cast< dMatrix * >(argp2);
  if (arg1) (arg1)->m_offsetMatrix = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInfo_m_offsetMatrix_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInfo *arg1 = (ndShapeInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dMatrix *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInfo_m_offsetMatrix_get" "', argument " "1"" of type '" "ndShapeInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInfo * >(argp1);
  result = (dMatrix *)& ((arg1)->m_offsetMatrix);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dMatrix, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInfo_m_scale_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInfo *arg1 = (ndShapeInfo *) 0 ;
  dVector *arg2 = (dVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShapeInfo_m_scale_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInfo_m_scale_set" "', argument " "1"" of type '" "ndShapeInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInfo * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndShapeInfo_m_scale_set" "', argument " "2"" of type '" "dVector *""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  if (arg1) (arg1)->m_scale = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInfo_m_scale_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInfo *arg1 = (ndShapeInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dVector *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInfo_m_scale_get" "', argument " "1"" of type '" "ndShapeInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInfo * >(argp1);
  result = (dVector *)& ((arg1)->m_scale);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dVector, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInfo_m_shapeMaterial_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInfo *arg1 = (ndShapeInfo *) 0 ;
  ndShapeMaterial *arg2 = (ndShapeMaterial *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShapeInfo_m_shapeMaterial_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInfo_m_shapeMaterial_set" "', argument " "1"" of type '" "ndShapeInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInfo * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_ndShapeMaterial, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndShapeInfo_m_shapeMaterial_set" "', argument " "2"" of type '" "ndShapeMaterial *""'"); 
  }
  arg2 = reinterpret_cast< ndShapeMaterial * >(argp2);
  if (arg1) (arg1)->m_shapeMaterial = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInfo_m_shapeMaterial_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInfo *arg1 = (ndShapeInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndShapeMaterial *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInfo_m_shapeMaterial_get" "', argument " "1"" of type '" "ndShapeInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInfo * >(argp1);
  result = (ndShapeMaterial *)& ((arg1)->m_shapeMaterial);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeMaterial, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInfo_m_collisionType_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInfo *arg1 = (ndShapeInfo *) 0 ;
  ndShapeID arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShapeInfo_m_collisionType_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInfo_m_collisionType_set" "', argument " "1"" of type '" "ndShapeInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInfo * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndShapeInfo_m_collisionType_set" "', argument " "2"" of type '" "ndShapeID""'");
  } 
  arg2 = static_cast< ndShapeID >(val2);
  if (arg1) (arg1)->m_collisionType = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInfo_m_collisionType_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInfo *arg1 = (ndShapeInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndShapeID result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInfo, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInfo_m_collisionType_get" "', argument " "1"" of type '" "ndShapeInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInfo * >(argp1);
  result = (ndShapeID) ((arg1)->m_collisionType);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ndShapeInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInfo *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_ndShapeInfo", 0, 0, 0)) SWIG_fail;
  result = (ndShapeInfo *)new ndShapeInfo();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeInfo, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ndShapeInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInfo *arg1 = (ndShapeInfo *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInfo, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ndShapeInfo" "', argument " "1"" of type '" "ndShapeInfo *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInfo * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ndShapeInfo_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ndShapeInfo, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ndShapeInfo_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_ndShape_GetRefCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShape *arg1 = (ndShape *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShape, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShape_GetRefCount" "', argument " "1"" of type '" "ndShape const *""'"); 
  }
  arg1 = reinterpret_cast< ndShape * >(argp1);
  result = (int)((ndShape const *)arg1)->GetRefCount();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShape_Release(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShape *arg1 = (ndShape *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShape, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShape_Release" "', argument " "1"" of type '" "ndShape const *""'"); 
  }
  arg1 = reinterpret_cast< ndShape * >(argp1);
  result = (int)((ndShape const *)arg1)->Release();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShape_AddRef(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShape *arg1 = (ndShape *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndShape *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShape, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShape_AddRef" "', argument " "1"" of type '" "ndShape const *""'"); 
  }
  arg1 = reinterpret_cast< ndShape * >(argp1);
  result = (ndShape *)((ndShape const *)arg1)->AddRef();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShape, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShape_GetAsShapeBox(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShape *arg1 = (ndShape *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndShapeBox *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShape, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShape_GetAsShapeBox" "', argument " "1"" of type '" "ndShape *""'"); 
  }
  arg1 = reinterpret_cast< ndShape * >(argp1);
  result = (ndShapeBox *)(arg1)->GetAsShapeBox();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeBox, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShape_GetAsShapeNull(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShape *arg1 = (ndShape *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndShapeNull *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShape, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShape_GetAsShapeNull" "', argument " "1"" of type '" "ndShape *""'"); 
  }
  arg1 = reinterpret_cast< ndShape * >(argp1);
  result = (ndShapeNull *)(arg1)->GetAsShapeNull();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeNull, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShape_GetAsShapeCone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShape *arg1 = (ndShape *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndShapeCone *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShape, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShape_GetAsShapeCone" "', argument " "1"" of type '" "ndShape *""'"); 
  }
  arg1 = reinterpret_cast< ndShape * >(argp1);
  result = (ndShapeCone *)(arg1)->GetAsShapeCone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeCone, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShape_GetAsShapePoint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShape *arg1 = (ndShape *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndShapePoint *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShape, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShape_GetAsShapePoint" "', argument " "1"" of type '" "ndShape *""'"); 
  }
  arg1 = reinterpret_cast< ndShape * >(argp1);
  result = (ndShapePoint *)(arg1)->GetAsShapePoint();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapePoint, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShape_GetAsShapeConvex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShape *arg1 = (ndShape *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndShapeConvex *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShape, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShape_GetAsShapeConvex" "', argument " "1"" of type '" "ndShape *""'"); 
  }
  arg1 = reinterpret_cast< ndShape * >(argp1);
  result = (ndShapeConvex *)(arg1)->GetAsShapeConvex();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeConvex, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShape_GetAsShapeSphere(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShape *arg1 = (ndShape *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndShapeSphere *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShape, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShape_GetAsShapeSphere" "', argument " "1"" of type '" "ndShape *""'"); 
  }
  arg1 = reinterpret_cast< ndShape * >(argp1);
  result = (ndShapeSphere *)(arg1)->GetAsShapeSphere();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeSphere, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShape_GetAsShapeCapsule(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShape *arg1 = (ndShape *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndShapeCapsule *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShape, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShape_GetAsShapeCapsule" "', argument " "1"" of type '" "ndShape *""'"); 
  }
  arg1 = reinterpret_cast< ndShape * >(argp1);
  result = (ndShapeCapsule *)(arg1)->GetAsShapeCapsule();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeCapsule, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShape_GetAsShapeCylinder(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShape *arg1 = (ndShape *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndShapeCylinder *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShape, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShape_GetAsShapeCylinder" "', argument " "1"" of type '" "ndShape *""'"); 
  }
  arg1 = reinterpret_cast< ndShape * >(argp1);
  result = (ndShapeCylinder *)(arg1)->GetAsShapeCylinder();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeCylinder, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShape_GetAsShapeCompound(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShape *arg1 = (ndShape *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndShapeCompound *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShape, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShape_GetAsShapeCompound" "', argument " "1"" of type '" "ndShape *""'"); 
  }
  arg1 = reinterpret_cast< ndShape * >(argp1);
  result = (ndShapeCompound *)(arg1)->GetAsShapeCompound();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeCompound, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShape_GetAsShapeStaticBVH(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShape *arg1 = (ndShape *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndShapeStatic_bvh *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShape, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShape_GetAsShapeStaticBVH" "', argument " "1"" of type '" "ndShape *""'"); 
  }
  arg1 = reinterpret_cast< ndShape * >(argp1);
  result = (ndShapeStatic_bvh *)(arg1)->GetAsShapeStaticBVH();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeStatic_bvh, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShape_GetAsShapeStaticMesh(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShape *arg1 = (ndShape *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndShapeStaticMesh *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShape, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShape_GetAsShapeStaticMesh" "', argument " "1"" of type '" "ndShape *""'"); 
  }
  arg1 = reinterpret_cast< ndShape * >(argp1);
  result = (ndShapeStaticMesh *)(arg1)->GetAsShapeStaticMesh();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeStaticMesh, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShape_GetAsShapeHeightfield(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShape *arg1 = (ndShape *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndShapeHeightfield *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShape, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShape_GetAsShapeHeightfield" "', argument " "1"" of type '" "ndShape *""'"); 
  }
  arg1 = reinterpret_cast< ndShape * >(argp1);
  result = (ndShapeHeightfield *)(arg1)->GetAsShapeHeightfield();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeHeightfield, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShape_GetAsShapeAsConvexPolygon(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShape *arg1 = (ndShape *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndShapeConvexPolygon *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShape, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShape_GetAsShapeAsConvexPolygon" "', argument " "1"" of type '" "ndShape *""'"); 
  }
  arg1 = reinterpret_cast< ndShape * >(argp1);
  result = (ndShapeConvexPolygon *)(arg1)->GetAsShapeAsConvexPolygon();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeConvexPolygon, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShape_GetAsShapeChamferCylinder(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShape *arg1 = (ndShape *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndShapeChamferCylinder *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShape, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShape_GetAsShapeChamferCylinder" "', argument " "1"" of type '" "ndShape *""'"); 
  }
  arg1 = reinterpret_cast< ndShape * >(argp1);
  result = (ndShapeChamferCylinder *)(arg1)->GetAsShapeChamferCylinder();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeChamferCylinder, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShape_GetAsShapeStaticProceduralMesh(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShape *arg1 = (ndShape *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndShapeStaticProceduralMesh *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShape, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShape_GetAsShapeStaticProceduralMesh" "', argument " "1"" of type '" "ndShape *""'"); 
  }
  arg1 = reinterpret_cast< ndShape * >(argp1);
  result = (ndShapeStaticProceduralMesh *)(arg1)->GetAsShapeStaticProceduralMesh();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeStaticProceduralMesh, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShape_GetConvexVertexCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShape *arg1 = (ndShape *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShape, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShape_GetConvexVertexCount" "', argument " "1"" of type '" "ndShape const *""'"); 
  }
  arg1 = reinterpret_cast< ndShape * >(argp1);
  result = (int)((ndShape const *)arg1)->GetConvexVertexCount();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShape_GetObbSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShape *arg1 = (ndShape *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dVector result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShape, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShape_GetObbSize" "', argument " "1"" of type '" "ndShape const *""'"); 
  }
  arg1 = reinterpret_cast< ndShape * >(argp1);
  result = ((ndShape const *)arg1)->GetObbSize();
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShape_GetObbOrigin(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShape *arg1 = (ndShape *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dVector result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShape, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShape_GetObbOrigin" "', argument " "1"" of type '" "ndShape const *""'"); 
  }
  arg1 = reinterpret_cast< ndShape * >(argp1);
  result = ((ndShape const *)arg1)->GetObbOrigin();
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShape_GetUmbraClipSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShape *arg1 = (ndShape *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShape, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShape_GetUmbraClipSize" "', argument " "1"" of type '" "ndShape const *""'"); 
  }
  arg1 = reinterpret_cast< ndShape * >(argp1);
  result = (float)((ndShape const *)arg1)->GetUmbraClipSize();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShape_MassProperties(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShape *arg1 = (ndShape *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShape, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShape_MassProperties" "', argument " "1"" of type '" "ndShape *""'"); 
  }
  arg1 = reinterpret_cast< ndShape * >(argp1);
  (arg1)->MassProperties();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShape_DebugShape(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShape *arg1 = (ndShape *) 0 ;
  dMatrix *arg2 = 0 ;
  ndShapeDebugCallback *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShape_DebugShape", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShape, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShape_DebugShape" "', argument " "1"" of type '" "ndShape const *""'"); 
  }
  arg1 = reinterpret_cast< ndShape * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dMatrix,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndShape_DebugShape" "', argument " "2"" of type '" "dMatrix const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShape_DebugShape" "', argument " "2"" of type '" "dMatrix const &""'"); 
  }
  arg2 = reinterpret_cast< dMatrix * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_ndShapeDebugCallback,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ndShape_DebugShape" "', argument " "3"" of type '" "ndShapeDebugCallback &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShape_DebugShape" "', argument " "3"" of type '" "ndShapeDebugCallback &""'"); 
  }
  arg3 = reinterpret_cast< ndShapeDebugCallback * >(argp3);
  ((ndShape const *)arg1)->DebugShape((dMatrix const &)*arg2,*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShape_GetShapeInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShape *arg1 = (ndShape *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndShapeInfo result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShape, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShape_GetShapeInfo" "', argument " "1"" of type '" "ndShape const *""'"); 
  }
  arg1 = reinterpret_cast< ndShape * >(argp1);
  result = ((ndShape const *)arg1)->GetShapeInfo();
  resultobj = SWIG_NewPointerObj((new ndShapeInfo(static_cast< const ndShapeInfo& >(result))), SWIGTYPE_p_ndShapeInfo, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShape_GetVolume(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShape *arg1 = (ndShape *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShape, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShape_GetVolume" "', argument " "1"" of type '" "ndShape const *""'"); 
  }
  arg1 = reinterpret_cast< ndShape * >(argp1);
  result = (float)((ndShape const *)arg1)->GetVolume();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShape_GetBoxMinRadius(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShape *arg1 = (ndShape *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShape, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShape_GetBoxMinRadius" "', argument " "1"" of type '" "ndShape const *""'"); 
  }
  arg1 = reinterpret_cast< ndShape * >(argp1);
  result = (float)((ndShape const *)arg1)->GetBoxMinRadius();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShape_GetBoxMaxRadius(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShape *arg1 = (ndShape *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShape, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShape_GetBoxMaxRadius" "', argument " "1"" of type '" "ndShape const *""'"); 
  }
  arg1 = reinterpret_cast< ndShape * >(argp1);
  result = (float)((ndShape const *)arg1)->GetBoxMaxRadius();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShape_CalculateAabb(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShape *arg1 = (ndShape *) 0 ;
  dMatrix *arg2 = 0 ;
  dVector *arg3 = 0 ;
  dVector *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject *swig_obj[4] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShape_CalculateAabb", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShape, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShape_CalculateAabb" "', argument " "1"" of type '" "ndShape const *""'"); 
  }
  arg1 = reinterpret_cast< ndShape * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dMatrix,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndShape_CalculateAabb" "', argument " "2"" of type '" "dMatrix const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShape_CalculateAabb" "', argument " "2"" of type '" "dMatrix const &""'"); 
  }
  arg2 = reinterpret_cast< dMatrix * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_dVector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ndShape_CalculateAabb" "', argument " "3"" of type '" "dVector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShape_CalculateAabb" "', argument " "3"" of type '" "dVector &""'"); 
  }
  arg3 = reinterpret_cast< dVector * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_dVector,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ndShape_CalculateAabb" "', argument " "4"" of type '" "dVector &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShape_CalculateAabb" "', argument " "4"" of type '" "dVector &""'"); 
  }
  arg4 = reinterpret_cast< dVector * >(argp4);
  ((ndShape const *)arg1)->CalculateAabb((dMatrix const &)*arg2,*arg3,*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShape_SupportVertex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShape *arg1 = (ndShape *) 0 ;
  dVector *arg2 = 0 ;
  int *arg3 = (int *) (int *)0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject *swig_obj[3] ;
  dVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShape_SupportVertex", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShape, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShape_SupportVertex" "', argument " "1"" of type '" "ndShape const *""'"); 
  }
  arg1 = reinterpret_cast< ndShape * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndShape_SupportVertex" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShape_SupportVertex" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ndShape_SupportVertex" "', argument " "3"" of type '" "int *const""'"); 
  }
  arg3 = reinterpret_cast< int * >(argp3);
  result = ((ndShape const *)arg1)->SupportVertex((dVector const &)*arg2,arg3);
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShape_SupportVertexSpecialProjectPoint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShape *arg1 = (ndShape *) 0 ;
  dVector *arg2 = 0 ;
  dVector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject *swig_obj[3] ;
  dVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShape_SupportVertexSpecialProjectPoint", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShape, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShape_SupportVertexSpecialProjectPoint" "', argument " "1"" of type '" "ndShape const *""'"); 
  }
  arg1 = reinterpret_cast< ndShape * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndShape_SupportVertexSpecialProjectPoint" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShape_SupportVertexSpecialProjectPoint" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ndShape_SupportVertexSpecialProjectPoint" "', argument " "3"" of type '" "dVector const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShape_SupportVertexSpecialProjectPoint" "', argument " "3"" of type '" "dVector const &""'"); 
  }
  arg3 = reinterpret_cast< dVector * >(argp3);
  result = ((ndShape const *)arg1)->SupportVertexSpecialProjectPoint((dVector const &)*arg2,(dVector const &)*arg3);
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShape_SupportVertexSpecial(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShape *arg1 = (ndShape *) 0 ;
  dVector *arg2 = 0 ;
  float arg3 ;
  int *arg4 = (int *) (int *)0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject *swig_obj[4] ;
  dVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShape_SupportVertexSpecial", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShape, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShape_SupportVertexSpecial" "', argument " "1"" of type '" "ndShape const *""'"); 
  }
  arg1 = reinterpret_cast< ndShape * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndShape_SupportVertexSpecial" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShape_SupportVertexSpecial" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ndShape_SupportVertexSpecial" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ndShape_SupportVertexSpecial" "', argument " "4"" of type '" "int *const""'"); 
  }
  arg4 = reinterpret_cast< int * >(argp4);
  result = ((ndShape const *)arg1)->SupportVertexSpecial((dVector const &)*arg2,arg3,arg4);
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShape_CalculatePlaneIntersection(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShape *arg1 = (ndShape *) 0 ;
  dVector *arg2 = 0 ;
  dVector *arg3 = 0 ;
  dVector *arg4 = (dVector *) (dVector *)0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject *swig_obj[4] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShape_CalculatePlaneIntersection", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShape, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShape_CalculatePlaneIntersection" "', argument " "1"" of type '" "ndShape const *""'"); 
  }
  arg1 = reinterpret_cast< ndShape * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndShape_CalculatePlaneIntersection" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShape_CalculatePlaneIntersection" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ndShape_CalculatePlaneIntersection" "', argument " "3"" of type '" "dVector const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShape_CalculatePlaneIntersection" "', argument " "3"" of type '" "dVector const &""'"); 
  }
  arg3 = reinterpret_cast< dVector * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ndShape_CalculatePlaneIntersection" "', argument " "4"" of type '" "dVector *const""'"); 
  }
  arg4 = reinterpret_cast< dVector * >(argp4);
  result = (int)((ndShape const *)arg1)->CalculatePlaneIntersection((dVector const &)*arg2,(dVector const &)*arg3,arg4);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShape_CalculateVolumeIntegral(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShape *arg1 = (ndShape *) 0 ;
  dMatrix *arg2 = 0 ;
  dVector *arg3 = 0 ;
  ndShapeInstance *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject *swig_obj[4] ;
  dVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShape_CalculateVolumeIntegral", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShape, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShape_CalculateVolumeIntegral" "', argument " "1"" of type '" "ndShape const *""'"); 
  }
  arg1 = reinterpret_cast< ndShape * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dMatrix,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndShape_CalculateVolumeIntegral" "', argument " "2"" of type '" "dMatrix const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShape_CalculateVolumeIntegral" "', argument " "2"" of type '" "dMatrix const &""'"); 
  }
  arg2 = reinterpret_cast< dMatrix * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ndShape_CalculateVolumeIntegral" "', argument " "3"" of type '" "dVector const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShape_CalculateVolumeIntegral" "', argument " "3"" of type '" "dVector const &""'"); 
  }
  arg3 = reinterpret_cast< dVector * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_ndShapeInstance,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ndShape_CalculateVolumeIntegral" "', argument " "4"" of type '" "ndShapeInstance const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShape_CalculateVolumeIntegral" "', argument " "4"" of type '" "ndShapeInstance const &""'"); 
  }
  arg4 = reinterpret_cast< ndShapeInstance * >(argp4);
  result = ((ndShape const *)arg1)->CalculateVolumeIntegral((dMatrix const &)*arg2,(dVector const &)*arg3,(ndShapeInstance const &)*arg4);
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShape_RayCast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShape *arg1 = (ndShape *) 0 ;
  ndRayCastNotify *arg2 = 0 ;
  dVector *arg3 = 0 ;
  dVector *arg4 = 0 ;
  float arg5 ;
  ndBody *arg6 = (ndBody *) (ndBody *)0 ;
  ndContactPoint *arg7 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  void *argp7 = 0 ;
  int res7 = 0 ;
  PyObject *swig_obj[7] ;
  float result;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShape_RayCast", 7, 7, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShape, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShape_RayCast" "', argument " "1"" of type '" "ndShape const *""'"); 
  }
  arg1 = reinterpret_cast< ndShape * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_ndRayCastNotify,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndShape_RayCast" "', argument " "2"" of type '" "ndRayCastNotify &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShape_RayCast" "', argument " "2"" of type '" "ndRayCastNotify &""'"); 
  }
  arg2 = reinterpret_cast< ndRayCastNotify * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ndShape_RayCast" "', argument " "3"" of type '" "dVector const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShape_RayCast" "', argument " "3"" of type '" "dVector const &""'"); 
  }
  arg3 = reinterpret_cast< dVector * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ndShape_RayCast" "', argument " "4"" of type '" "dVector const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShape_RayCast" "', argument " "4"" of type '" "dVector const &""'"); 
  }
  arg4 = reinterpret_cast< dVector * >(argp4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "ndShape_RayCast" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  res6 = SWIG_ConvertPtr(swig_obj[5], &argp6,SWIGTYPE_p_ndBody, 0 |  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "ndShape_RayCast" "', argument " "6"" of type '" "ndBody const *const""'"); 
  }
  arg6 = reinterpret_cast< ndBody * >(argp6);
  res7 = SWIG_ConvertPtr(swig_obj[6], &argp7, SWIGTYPE_p_ndContactPoint,  0 );
  if (!SWIG_IsOK(res7)) {
    SWIG_exception_fail(SWIG_ArgError(res7), "in method '" "ndShape_RayCast" "', argument " "7"" of type '" "ndContactPoint &""'"); 
  }
  if (!argp7) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShape_RayCast" "', argument " "7"" of type '" "ndContactPoint &""'"); 
  }
  arg7 = reinterpret_cast< ndContactPoint * >(argp7);
  result = (float)((ndShape const *)arg1)->RayCast(*arg2,(dVector const &)*arg3,(dVector const &)*arg4,arg5,(ndBody const *)arg6,*arg7);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShape_CalculateInertiaAndCenterOfMass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShape *arg1 = (ndShape *) 0 ;
  dMatrix *arg2 = 0 ;
  dVector *arg3 = 0 ;
  dMatrix *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject *swig_obj[4] ;
  dMatrix result;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShape_CalculateInertiaAndCenterOfMass", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShape, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShape_CalculateInertiaAndCenterOfMass" "', argument " "1"" of type '" "ndShape const *""'"); 
  }
  arg1 = reinterpret_cast< ndShape * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dMatrix,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndShape_CalculateInertiaAndCenterOfMass" "', argument " "2"" of type '" "dMatrix const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShape_CalculateInertiaAndCenterOfMass" "', argument " "2"" of type '" "dMatrix const &""'"); 
  }
  arg2 = reinterpret_cast< dMatrix * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ndShape_CalculateInertiaAndCenterOfMass" "', argument " "3"" of type '" "dVector const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShape_CalculateInertiaAndCenterOfMass" "', argument " "3"" of type '" "dVector const &""'"); 
  }
  arg3 = reinterpret_cast< dVector * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_dMatrix,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ndShape_CalculateInertiaAndCenterOfMass" "', argument " "4"" of type '" "dMatrix const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShape_CalculateInertiaAndCenterOfMass" "', argument " "4"" of type '" "dMatrix const &""'"); 
  }
  arg4 = reinterpret_cast< dMatrix * >(argp4);
  result = ((ndShape const *)arg1)->CalculateInertiaAndCenterOfMass((dMatrix const &)*arg2,(dVector const &)*arg3,(dMatrix const &)*arg4);
  resultobj = SWIG_NewPointerObj((new dMatrix(static_cast< const dMatrix& >(result))), SWIGTYPE_p_dMatrix, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShape_CalculateMassProperties(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShape *arg1 = (ndShape *) 0 ;
  dMatrix *arg2 = 0 ;
  dVector *arg3 = 0 ;
  dVector *arg4 = 0 ;
  dVector *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject *swig_obj[5] ;
  float result;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShape_CalculateMassProperties", 5, 5, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShape, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShape_CalculateMassProperties" "', argument " "1"" of type '" "ndShape const *""'"); 
  }
  arg1 = reinterpret_cast< ndShape * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dMatrix,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndShape_CalculateMassProperties" "', argument " "2"" of type '" "dMatrix const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShape_CalculateMassProperties" "', argument " "2"" of type '" "dMatrix const &""'"); 
  }
  arg2 = reinterpret_cast< dMatrix * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_dVector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ndShape_CalculateMassProperties" "', argument " "3"" of type '" "dVector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShape_CalculateMassProperties" "', argument " "3"" of type '" "dVector &""'"); 
  }
  arg3 = reinterpret_cast< dVector * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_dVector,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ndShape_CalculateMassProperties" "', argument " "4"" of type '" "dVector &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShape_CalculateMassProperties" "', argument " "4"" of type '" "dVector &""'"); 
  }
  arg4 = reinterpret_cast< dVector * >(argp4);
  res5 = SWIG_ConvertPtr(swig_obj[4], &argp5, SWIGTYPE_p_dVector,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "ndShape_CalculateMassProperties" "', argument " "5"" of type '" "dVector &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShape_CalculateMassProperties" "', argument " "5"" of type '" "dVector &""'"); 
  }
  arg5 = reinterpret_cast< dVector * >(argp5);
  result = (float)((ndShape const *)arg1)->CalculateMassProperties((dMatrix const &)*arg2,*arg3,*arg4,*arg5);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShape_Save(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShape *arg1 = (ndShape *) 0 ;
  dLoadSaveBase::dSaveDescriptor *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShape_Save", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShape, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShape_Save" "', argument " "1"" of type '" "ndShape const *""'"); 
  }
  arg1 = reinterpret_cast< ndShape * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dLoadSaveBase__dSaveDescriptor,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndShape_Save" "', argument " "2"" of type '" "dLoadSaveBase::dSaveDescriptor const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShape_Save" "', argument " "2"" of type '" "dLoadSaveBase::dSaveDescriptor const &""'"); 
  }
  arg2 = reinterpret_cast< dLoadSaveBase::dSaveDescriptor * >(argp2);
  ((ndShape const *)arg1)->Save((dLoadSaveBase::dSaveDescriptor const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ndShape_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ndShape, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ndShapeBox__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dLoadSaveBase::dLoadDescriptor *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ndShapeBox *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_dLoadSaveBase__dLoadDescriptor,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ndShapeBox" "', argument " "1"" of type '" "dLoadSaveBase::dLoadDescriptor const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ndShapeBox" "', argument " "1"" of type '" "dLoadSaveBase::dLoadDescriptor const &""'"); 
  }
  arg1 = reinterpret_cast< dLoadSaveBase::dLoadDescriptor * >(argp1);
  result = (ndShapeBox *)new ndShapeBox((dLoadSaveBase::dLoadDescriptor const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeBox, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ndShapeBox__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  ndShapeBox *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ndShapeBox" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_ndShapeBox" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ndShapeBox" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (ndShapeBox *)new ndShapeBox(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeBox, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ndShapeBox(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_ndShapeBox", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_dLoadSaveBase__dLoadDescriptor, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_ndShapeBox__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_ndShapeBox__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_ndShapeBox'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ndShapeBox::ndShapeBox(dLoadSaveBase::dLoadDescriptor const &)\n"
    "    ndShapeBox::ndShapeBox(float,float,float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_ndShapeBox(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeBox *arg1 = (ndShapeBox *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeBox, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ndShapeBox" "', argument " "1"" of type '" "ndShapeBox *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeBox * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeBox_GetAsShapeBox(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeBox *arg1 = (ndShapeBox *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndShapeBox *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeBox, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeBox_GetAsShapeBox" "', argument " "1"" of type '" "ndShapeBox *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeBox * >(argp1);
  result = (ndShapeBox *)(arg1)->GetAsShapeBox();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeBox, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ndShapeBox_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ndShapeBox, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ndShapeBox_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_ndShapeCone__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  ndShapeCone *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ndShapeCone" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_ndShapeCone" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (ndShapeCone *)new ndShapeCone(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeCone, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ndShapeCone__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dLoadSaveBase::dLoadDescriptor *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ndShapeCone *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_dLoadSaveBase__dLoadDescriptor,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ndShapeCone" "', argument " "1"" of type '" "dLoadSaveBase::dLoadDescriptor const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ndShapeCone" "', argument " "1"" of type '" "dLoadSaveBase::dLoadDescriptor const &""'"); 
  }
  arg1 = reinterpret_cast< dLoadSaveBase::dLoadDescriptor * >(argp1);
  result = (ndShapeCone *)new ndShapeCone((dLoadSaveBase::dLoadDescriptor const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeCone, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ndShapeCone(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_ndShapeCone", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_dLoadSaveBase__dLoadDescriptor, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_ndShapeCone__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_ndShapeCone__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_ndShapeCone'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ndShapeCone::ndShapeCone(float,float)\n"
    "    ndShapeCone::ndShapeCone(dLoadSaveBase::dLoadDescriptor const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_ndShapeCone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeCone *arg1 = (ndShapeCone *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeCone, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ndShapeCone" "', argument " "1"" of type '" "ndShapeCone *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeCone * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeCone_GetAsShapeCone(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeCone *arg1 = (ndShapeCone *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndShapeCone *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeCone, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeCone_GetAsShapeCone" "', argument " "1"" of type '" "ndShapeCone *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeCone * >(argp1);
  result = (ndShapeCone *)(arg1)->GetAsShapeCone();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeCone, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ndShapeCone_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ndShapeCone, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ndShapeCone_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *ndShapeConvex_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ndShapeConvex, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ndShapeSphere__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float val1 ;
  int ecode1 = 0 ;
  ndShapeSphere *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ndShapeSphere" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  result = (ndShapeSphere *)new ndShapeSphere(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeSphere, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ndShapeSphere__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dLoadSaveBase::dLoadDescriptor *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ndShapeSphere *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_dLoadSaveBase__dLoadDescriptor,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ndShapeSphere" "', argument " "1"" of type '" "dLoadSaveBase::dLoadDescriptor const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ndShapeSphere" "', argument " "1"" of type '" "dLoadSaveBase::dLoadDescriptor const &""'"); 
  }
  arg1 = reinterpret_cast< dLoadSaveBase::dLoadDescriptor * >(argp1);
  result = (ndShapeSphere *)new ndShapeSphere((dLoadSaveBase::dLoadDescriptor const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeSphere, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ndShapeSphere(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_ndShapeSphere", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_dLoadSaveBase__dLoadDescriptor, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_ndShapeSphere__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_ndShapeSphere__SWIG_0(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_ndShapeSphere'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ndShapeSphere::ndShapeSphere(float)\n"
    "    ndShapeSphere::ndShapeSphere(dLoadSaveBase::dLoadDescriptor const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_ndShapeSphere(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeSphere *arg1 = (ndShapeSphere *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeSphere, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ndShapeSphere" "', argument " "1"" of type '" "ndShapeSphere *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeSphere * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeSphere_GetAsShapeSphere(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeSphere *arg1 = (ndShapeSphere *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndShapeSphere *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeSphere, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeSphere_GetAsShapeSphere" "', argument " "1"" of type '" "ndShapeSphere *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeSphere * >(argp1);
  result = (ndShapeSphere *)(arg1)->GetAsShapeSphere();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeSphere, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ndShapeSphere_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ndShapeSphere, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ndShapeSphere_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_ndShapeCapsule__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dLoadSaveBase::dLoadDescriptor *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ndShapeCapsule *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_dLoadSaveBase__dLoadDescriptor,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ndShapeCapsule" "', argument " "1"" of type '" "dLoadSaveBase::dLoadDescriptor const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ndShapeCapsule" "', argument " "1"" of type '" "dLoadSaveBase::dLoadDescriptor const &""'"); 
  }
  arg1 = reinterpret_cast< dLoadSaveBase::dLoadDescriptor * >(argp1);
  result = (ndShapeCapsule *)new ndShapeCapsule((dLoadSaveBase::dLoadDescriptor const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeCapsule, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ndShapeCapsule__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  ndShapeCapsule *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ndShapeCapsule" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_ndShapeCapsule" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ndShapeCapsule" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (ndShapeCapsule *)new ndShapeCapsule(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeCapsule, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ndShapeCapsule(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_ndShapeCapsule", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_dLoadSaveBase__dLoadDescriptor, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_ndShapeCapsule__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_ndShapeCapsule__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_ndShapeCapsule'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ndShapeCapsule::ndShapeCapsule(dLoadSaveBase::dLoadDescriptor const &)\n"
    "    ndShapeCapsule::ndShapeCapsule(float,float,float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ndShapeCapsule_GetAsShapeCapsule(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeCapsule *arg1 = (ndShapeCapsule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndShapeCapsule *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeCapsule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeCapsule_GetAsShapeCapsule" "', argument " "1"" of type '" "ndShapeCapsule *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeCapsule * >(argp1);
  result = (ndShapeCapsule *)(arg1)->GetAsShapeCapsule();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeCapsule, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ndShapeCapsule(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeCapsule *arg1 = (ndShapeCapsule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeCapsule, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ndShapeCapsule" "', argument " "1"" of type '" "ndShapeCapsule *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeCapsule * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ndShapeCapsule_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ndShapeCapsule, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ndShapeCapsule_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_ndShapeCompound__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  ndShapeCompound *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (ndShapeCompound *)new ndShapeCompound();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeCompound, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ndShapeCompound__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dLoadSaveBase::dLoadDescriptor *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ndShapeCompound *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_dLoadSaveBase__dLoadDescriptor,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ndShapeCompound" "', argument " "1"" of type '" "dLoadSaveBase::dLoadDescriptor const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ndShapeCompound" "', argument " "1"" of type '" "dLoadSaveBase::dLoadDescriptor const &""'"); 
  }
  arg1 = reinterpret_cast< dLoadSaveBase::dLoadDescriptor * >(argp1);
  result = (ndShapeCompound *)new ndShapeCompound((dLoadSaveBase::dLoadDescriptor const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeCompound, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ndShapeCompound(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_ndShapeCompound", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_ndShapeCompound__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_dLoadSaveBase__dLoadDescriptor, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_ndShapeCompound__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_ndShapeCompound'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ndShapeCompound::ndShapeCompound()\n"
    "    ndShapeCompound::ndShapeCompound(dLoadSaveBase::dLoadDescriptor const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_ndShapeCompound(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeCompound *arg1 = (ndShapeCompound *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeCompound, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ndShapeCompound" "', argument " "1"" of type '" "ndShapeCompound *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeCompound * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeCompound_SetOwner(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeCompound *arg1 = (ndShapeCompound *) 0 ;
  ndShapeInstance *arg2 = (ndShapeInstance *) (ndShapeInstance *)0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShapeCompound_SetOwner", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeCompound, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeCompound_SetOwner" "', argument " "1"" of type '" "ndShapeCompound *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeCompound * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndShapeCompound_SetOwner" "', argument " "2"" of type '" "ndShapeInstance const *const""'"); 
  }
  arg2 = reinterpret_cast< ndShapeInstance * >(argp2);
  (arg1)->SetOwner((ndShapeInstance const *)arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeCompound_GetTree(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeCompound *arg1 = (ndShapeCompound *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndShapeCompound::ndTreeArray *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeCompound, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeCompound_GetTree" "', argument " "1"" of type '" "ndShapeCompound const *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeCompound * >(argp1);
  result = (ndShapeCompound::ndTreeArray *) &((ndShapeCompound const *)arg1)->GetTree();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeCompound__ndTreeArray, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeCompound_BeginAddRemove(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeCompound *arg1 = (ndShapeCompound *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeCompound, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeCompound_BeginAddRemove" "', argument " "1"" of type '" "ndShapeCompound *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeCompound * >(argp1);
  (arg1)->BeginAddRemove();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeCompound_AddCollision(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeCompound *arg1 = (ndShapeCompound *) 0 ;
  ndShapeInstance *arg2 = (ndShapeInstance *) (ndShapeInstance *)0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  ndShapeCompound::ndTreeArray::dNode *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShapeCompound_AddCollision", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeCompound, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeCompound_AddCollision" "', argument " "1"" of type '" "ndShapeCompound *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeCompound * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndShapeCompound_AddCollision" "', argument " "2"" of type '" "ndShapeInstance *const""'"); 
  }
  arg2 = reinterpret_cast< ndShapeInstance * >(argp2);
  result = (ndShapeCompound::ndTreeArray::dNode *)(arg1)->AddCollision(arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeCompound__ndTreeArray__dNode, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeCompound_EndAddRemove(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeCompound *arg1 = (ndShapeCompound *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeCompound, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeCompound_EndAddRemove" "', argument " "1"" of type '" "ndShapeCompound *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeCompound * >(argp1);
  (arg1)->EndAddRemove();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ndShapeCompound_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ndShapeCompound, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ndShapeCompound_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_ndShapeCylinder__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dLoadSaveBase::dLoadDescriptor *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ndShapeCylinder *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_dLoadSaveBase__dLoadDescriptor,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ndShapeCylinder" "', argument " "1"" of type '" "dLoadSaveBase::dLoadDescriptor const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ndShapeCylinder" "', argument " "1"" of type '" "dLoadSaveBase::dLoadDescriptor const &""'"); 
  }
  arg1 = reinterpret_cast< dLoadSaveBase::dLoadDescriptor * >(argp1);
  result = (ndShapeCylinder *)new ndShapeCylinder((dLoadSaveBase::dLoadDescriptor const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeCylinder, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ndShapeCylinder__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float arg3 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  ndShapeCylinder *result = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ndShapeCylinder" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_ndShapeCylinder" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ndShapeCylinder" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (ndShapeCylinder *)new ndShapeCylinder(arg1,arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeCylinder, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ndShapeCylinder(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[4] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_ndShapeCylinder", 0, 3, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_dLoadSaveBase__dLoadDescriptor, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_ndShapeCylinder__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 3) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          return _wrap_new_ndShapeCylinder__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_ndShapeCylinder'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ndShapeCylinder::ndShapeCylinder(dLoadSaveBase::dLoadDescriptor const &)\n"
    "    ndShapeCylinder::ndShapeCylinder(float,float,float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_ndShapeCylinder(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeCylinder *arg1 = (ndShapeCylinder *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeCylinder, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ndShapeCylinder" "', argument " "1"" of type '" "ndShapeCylinder *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeCylinder * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeCylinder_GetAsShapeCylinder(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeCylinder *arg1 = (ndShapeCylinder *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndShapeCylinder *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeCylinder, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeCylinder_GetAsShapeCylinder" "', argument " "1"" of type '" "ndShapeCylinder *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeCylinder * >(argp1);
  result = (ndShapeCylinder *)(arg1)->GetAsShapeCylinder();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeCylinder, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ndShapeCylinder_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ndShapeCylinder, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ndShapeCylinder_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_ndShapeStatic_bvh__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dPolygonSoupBuilder *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ndShapeStatic_bvh *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_dPolygonSoupBuilder,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ndShapeStatic_bvh" "', argument " "1"" of type '" "dPolygonSoupBuilder const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ndShapeStatic_bvh" "', argument " "1"" of type '" "dPolygonSoupBuilder const &""'"); 
  }
  arg1 = reinterpret_cast< dPolygonSoupBuilder * >(argp1);
  result = (ndShapeStatic_bvh *)new ndShapeStatic_bvh((dPolygonSoupBuilder const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeStatic_bvh, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ndShapeStatic_bvh__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dLoadSaveBase::dLoadDescriptor *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ndShapeStatic_bvh *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_dLoadSaveBase__dLoadDescriptor,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ndShapeStatic_bvh" "', argument " "1"" of type '" "dLoadSaveBase::dLoadDescriptor const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ndShapeStatic_bvh" "', argument " "1"" of type '" "dLoadSaveBase::dLoadDescriptor const &""'"); 
  }
  arg1 = reinterpret_cast< dLoadSaveBase::dLoadDescriptor * >(argp1);
  result = (ndShapeStatic_bvh *)new ndShapeStatic_bvh((dLoadSaveBase::dLoadDescriptor const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeStatic_bvh, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ndShapeStatic_bvh(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_ndShapeStatic_bvh", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_dPolygonSoupBuilder, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_ndShapeStatic_bvh__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_dLoadSaveBase__dLoadDescriptor, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_ndShapeStatic_bvh__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_ndShapeStatic_bvh'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ndShapeStatic_bvh::ndShapeStatic_bvh(dPolygonSoupBuilder const &)\n"
    "    ndShapeStatic_bvh::ndShapeStatic_bvh(dLoadSaveBase::dLoadDescriptor const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_ndShapeStatic_bvh(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeStatic_bvh *arg1 = (ndShapeStatic_bvh *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeStatic_bvh, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ndShapeStatic_bvh" "', argument " "1"" of type '" "ndShapeStatic_bvh *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeStatic_bvh * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ndShapeStatic_bvh_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ndShapeStatic_bvh, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ndShapeStatic_bvh_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_ndPolygonMeshDesc__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  ndPolygonMeshDesc *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (ndPolygonMeshDesc *)new ndPolygonMeshDesc();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndPolygonMeshDesc, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ndPolygonMeshDesc__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  ndContactSolver *arg1 = 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  ndPolygonMeshDesc *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_ndContactSolver,  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ndPolygonMeshDesc" "', argument " "1"" of type '" "ndContactSolver &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ndPolygonMeshDesc" "', argument " "1"" of type '" "ndContactSolver &""'"); 
  }
  arg1 = reinterpret_cast< ndContactSolver * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_ndPolygonMeshDesc" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  result = (ndPolygonMeshDesc *)new ndPolygonMeshDesc(*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndPolygonMeshDesc, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ndPolygonMeshDesc(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_ndPolygonMeshDesc", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_ndPolygonMeshDesc__SWIG_0(self, argc, argv);
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ndContactSolver, SWIG_POINTER_NO_NULL);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_bool(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_ndPolygonMeshDesc__SWIG_1(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_ndPolygonMeshDesc'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ndPolygonMeshDesc::ndPolygonMeshDesc()\n"
    "    ndPolygonMeshDesc::ndPolygonMeshDesc(ndContactSolver &,bool)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ndPolygonMeshDesc_SortFaceArray(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndPolygonMeshDesc *arg1 = (ndPolygonMeshDesc *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndPolygonMeshDesc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndPolygonMeshDesc_SortFaceArray" "', argument " "1"" of type '" "ndPolygonMeshDesc *""'"); 
  }
  arg1 = reinterpret_cast< ndPolygonMeshDesc * >(argp1);
  (arg1)->SortFaceArray();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndPolygonMeshDesc_GetSeparetionDistance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndPolygonMeshDesc *arg1 = (ndPolygonMeshDesc *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndPolygonMeshDesc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndPolygonMeshDesc_GetSeparetionDistance" "', argument " "1"" of type '" "ndPolygonMeshDesc const *""'"); 
  }
  arg1 = reinterpret_cast< ndPolygonMeshDesc * >(argp1);
  result = (float)((ndPolygonMeshDesc const *)arg1)->GetSeparetionDistance();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndPolygonMeshDesc_SetDistanceTravel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndPolygonMeshDesc *arg1 = (ndPolygonMeshDesc *) 0 ;
  dVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndPolygonMeshDesc_SetDistanceTravel", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndPolygonMeshDesc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndPolygonMeshDesc_SetDistanceTravel" "', argument " "1"" of type '" "ndPolygonMeshDesc *""'"); 
  }
  arg1 = reinterpret_cast< ndPolygonMeshDesc * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndPolygonMeshDesc_SetDistanceTravel" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndPolygonMeshDesc_SetDistanceTravel" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  (arg1)->SetDistanceTravel((dVector const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndPolygonMeshDesc_GetFaceIndexCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndPolygonMeshDesc *arg1 = (ndPolygonMeshDesc *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "ndPolygonMeshDesc_GetFaceIndexCount", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndPolygonMeshDesc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndPolygonMeshDesc_GetFaceIndexCount" "', argument " "1"" of type '" "ndPolygonMeshDesc const *""'"); 
  }
  arg1 = reinterpret_cast< ndPolygonMeshDesc * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndPolygonMeshDesc_GetFaceIndexCount" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  result = (int)((ndPolygonMeshDesc const *)arg1)->GetFaceIndexCount(arg2);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndPolygonMeshDesc_GetAdjacentFaceEdgeNormalArray(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndPolygonMeshDesc *arg1 = (ndPolygonMeshDesc *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  int *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndPolygonMeshDesc_GetAdjacentFaceEdgeNormalArray", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndPolygonMeshDesc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndPolygonMeshDesc_GetAdjacentFaceEdgeNormalArray" "', argument " "1"" of type '" "ndPolygonMeshDesc const *""'"); 
  }
  arg1 = reinterpret_cast< ndPolygonMeshDesc * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndPolygonMeshDesc_GetAdjacentFaceEdgeNormalArray" "', argument " "2"" of type '" "int const *const""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ndPolygonMeshDesc_GetAdjacentFaceEdgeNormalArray" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (int *)((ndPolygonMeshDesc const *)arg1)->GetAdjacentFaceEdgeNormalArray((int const *)arg2,arg3);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndPolygonMeshDesc_GetNormalIndex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndPolygonMeshDesc *arg1 = (ndPolygonMeshDesc *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "ndPolygonMeshDesc_GetNormalIndex", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndPolygonMeshDesc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndPolygonMeshDesc_GetNormalIndex" "', argument " "1"" of type '" "ndPolygonMeshDesc const *""'"); 
  }
  arg1 = reinterpret_cast< ndPolygonMeshDesc * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndPolygonMeshDesc_GetNormalIndex" "', argument " "2"" of type '" "int const *const""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ndPolygonMeshDesc_GetNormalIndex" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (int)((ndPolygonMeshDesc const *)arg1)->GetNormalIndex((int const *)arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndPolygonMeshDesc_GetFaceId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndPolygonMeshDesc *arg1 = (ndPolygonMeshDesc *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "ndPolygonMeshDesc_GetFaceId", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndPolygonMeshDesc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndPolygonMeshDesc_GetFaceId" "', argument " "1"" of type '" "ndPolygonMeshDesc const *""'"); 
  }
  arg1 = reinterpret_cast< ndPolygonMeshDesc * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndPolygonMeshDesc_GetFaceId" "', argument " "2"" of type '" "int const *const""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ndPolygonMeshDesc_GetFaceId" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (int)((ndPolygonMeshDesc const *)arg1)->GetFaceId((int const *)arg2,arg3);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndPolygonMeshDesc_GetFaceSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndPolygonMeshDesc *arg1 = (ndPolygonMeshDesc *) 0 ;
  int *arg2 = (int *) (int *)0 ;
  int arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  float result;
  
  if (!SWIG_Python_UnpackTuple(args, "ndPolygonMeshDesc_GetFaceSize", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndPolygonMeshDesc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndPolygonMeshDesc_GetFaceSize" "', argument " "1"" of type '" "ndPolygonMeshDesc const *""'"); 
  }
  arg1 = reinterpret_cast< ndPolygonMeshDesc * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndPolygonMeshDesc_GetFaceSize" "', argument " "2"" of type '" "int const *const""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ndPolygonMeshDesc_GetFaceSize" "', argument " "3"" of type '" "int""'");
  } 
  arg3 = static_cast< int >(val3);
  result = (float)((ndPolygonMeshDesc const *)arg1)->GetFaceSize((int const *)arg2,arg3);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndPolygonMeshDesc_m_boxDistanceTravelInMeshSpace_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndPolygonMeshDesc *arg1 = (ndPolygonMeshDesc *) 0 ;
  dVector *arg2 = (dVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndPolygonMeshDesc_m_boxDistanceTravelInMeshSpace_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndPolygonMeshDesc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndPolygonMeshDesc_m_boxDistanceTravelInMeshSpace_set" "', argument " "1"" of type '" "ndPolygonMeshDesc *""'"); 
  }
  arg1 = reinterpret_cast< ndPolygonMeshDesc * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndPolygonMeshDesc_m_boxDistanceTravelInMeshSpace_set" "', argument " "2"" of type '" "dVector *""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  if (arg1) (arg1)->m_boxDistanceTravelInMeshSpace = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndPolygonMeshDesc_m_boxDistanceTravelInMeshSpace_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndPolygonMeshDesc *arg1 = (ndPolygonMeshDesc *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dVector *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndPolygonMeshDesc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndPolygonMeshDesc_m_boxDistanceTravelInMeshSpace_get" "', argument " "1"" of type '" "ndPolygonMeshDesc *""'"); 
  }
  arg1 = reinterpret_cast< ndPolygonMeshDesc * >(argp1);
  result = (dVector *)& ((arg1)->m_boxDistanceTravelInMeshSpace);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dVector, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndPolygonMeshDesc_m_faceCount_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndPolygonMeshDesc *arg1 = (ndPolygonMeshDesc *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndPolygonMeshDesc_m_faceCount_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndPolygonMeshDesc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndPolygonMeshDesc_m_faceCount_set" "', argument " "1"" of type '" "ndPolygonMeshDesc *""'"); 
  }
  arg1 = reinterpret_cast< ndPolygonMeshDesc * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndPolygonMeshDesc_m_faceCount_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->m_faceCount = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndPolygonMeshDesc_m_faceCount_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndPolygonMeshDesc *arg1 = (ndPolygonMeshDesc *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndPolygonMeshDesc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndPolygonMeshDesc_m_faceCount_get" "', argument " "1"" of type '" "ndPolygonMeshDesc *""'"); 
  }
  arg1 = reinterpret_cast< ndPolygonMeshDesc * >(argp1);
  result = (int) ((arg1)->m_faceCount);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndPolygonMeshDesc_m_vertexStrideInBytes_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndPolygonMeshDesc *arg1 = (ndPolygonMeshDesc *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndPolygonMeshDesc_m_vertexStrideInBytes_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndPolygonMeshDesc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndPolygonMeshDesc_m_vertexStrideInBytes_set" "', argument " "1"" of type '" "ndPolygonMeshDesc *""'"); 
  }
  arg1 = reinterpret_cast< ndPolygonMeshDesc * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndPolygonMeshDesc_m_vertexStrideInBytes_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->m_vertexStrideInBytes = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndPolygonMeshDesc_m_vertexStrideInBytes_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndPolygonMeshDesc *arg1 = (ndPolygonMeshDesc *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndPolygonMeshDesc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndPolygonMeshDesc_m_vertexStrideInBytes_get" "', argument " "1"" of type '" "ndPolygonMeshDesc *""'"); 
  }
  arg1 = reinterpret_cast< ndPolygonMeshDesc * >(argp1);
  result = (int) ((arg1)->m_vertexStrideInBytes);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndPolygonMeshDesc_m_skinThickness_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndPolygonMeshDesc *arg1 = (ndPolygonMeshDesc *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndPolygonMeshDesc_m_skinThickness_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndPolygonMeshDesc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndPolygonMeshDesc_m_skinThickness_set" "', argument " "1"" of type '" "ndPolygonMeshDesc *""'"); 
  }
  arg1 = reinterpret_cast< ndPolygonMeshDesc * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndPolygonMeshDesc_m_skinThickness_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->m_skinThickness = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndPolygonMeshDesc_m_skinThickness_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndPolygonMeshDesc *arg1 = (ndPolygonMeshDesc *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndPolygonMeshDesc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndPolygonMeshDesc_m_skinThickness_get" "', argument " "1"" of type '" "ndPolygonMeshDesc *""'"); 
  }
  arg1 = reinterpret_cast< ndPolygonMeshDesc * >(argp1);
  result = (float) ((arg1)->m_skinThickness);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndPolygonMeshDesc_m_userData_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndPolygonMeshDesc *arg1 = (ndPolygonMeshDesc *) 0 ;
  void *arg2 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndPolygonMeshDesc_m_userData_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndPolygonMeshDesc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndPolygonMeshDesc_m_userData_set" "', argument " "1"" of type '" "ndPolygonMeshDesc *""'"); 
  }
  arg1 = reinterpret_cast< ndPolygonMeshDesc * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1],SWIG_as_voidptrptr(&arg2), 0, SWIG_POINTER_DISOWN);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndPolygonMeshDesc_m_userData_set" "', argument " "2"" of type '" "void *""'"); 
  }
  if (arg1) (arg1)->m_userData = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndPolygonMeshDesc_m_userData_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndPolygonMeshDesc *arg1 = (ndPolygonMeshDesc *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  void *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndPolygonMeshDesc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndPolygonMeshDesc_m_userData_get" "', argument " "1"" of type '" "ndPolygonMeshDesc *""'"); 
  }
  arg1 = reinterpret_cast< ndPolygonMeshDesc * >(argp1);
  result = (void *) ((arg1)->m_userData);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndPolygonMeshDesc_m_convexInstance_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndPolygonMeshDesc *arg1 = (ndPolygonMeshDesc *) 0 ;
  ndShapeInstance *arg2 = (ndShapeInstance *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndPolygonMeshDesc_m_convexInstance_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndPolygonMeshDesc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndPolygonMeshDesc_m_convexInstance_set" "', argument " "1"" of type '" "ndPolygonMeshDesc *""'"); 
  }
  arg1 = reinterpret_cast< ndPolygonMeshDesc * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_ndShapeInstance, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndPolygonMeshDesc_m_convexInstance_set" "', argument " "2"" of type '" "ndShapeInstance *""'"); 
  }
  arg2 = reinterpret_cast< ndShapeInstance * >(argp2);
  if (arg1) (arg1)->m_convexInstance = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndPolygonMeshDesc_m_convexInstance_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndPolygonMeshDesc *arg1 = (ndPolygonMeshDesc *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndShapeInstance *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndPolygonMeshDesc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndPolygonMeshDesc_m_convexInstance_get" "', argument " "1"" of type '" "ndPolygonMeshDesc *""'"); 
  }
  arg1 = reinterpret_cast< ndPolygonMeshDesc * >(argp1);
  result = (ndShapeInstance *) ((arg1)->m_convexInstance);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndPolygonMeshDesc_m_polySoupInstance_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndPolygonMeshDesc *arg1 = (ndPolygonMeshDesc *) 0 ;
  ndShapeInstance *arg2 = (ndShapeInstance *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndPolygonMeshDesc_m_polySoupInstance_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndPolygonMeshDesc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndPolygonMeshDesc_m_polySoupInstance_set" "', argument " "1"" of type '" "ndPolygonMeshDesc *""'"); 
  }
  arg1 = reinterpret_cast< ndPolygonMeshDesc * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_ndShapeInstance, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndPolygonMeshDesc_m_polySoupInstance_set" "', argument " "2"" of type '" "ndShapeInstance *""'"); 
  }
  arg2 = reinterpret_cast< ndShapeInstance * >(argp2);
  if (arg1) (arg1)->m_polySoupInstance = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndPolygonMeshDesc_m_polySoupInstance_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndPolygonMeshDesc *arg1 = (ndPolygonMeshDesc *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndShapeInstance *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndPolygonMeshDesc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndPolygonMeshDesc_m_polySoupInstance_get" "', argument " "1"" of type '" "ndPolygonMeshDesc *""'"); 
  }
  arg1 = reinterpret_cast< ndPolygonMeshDesc * >(argp1);
  result = (ndShapeInstance *) ((arg1)->m_polySoupInstance);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndPolygonMeshDesc_m_vertex_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndPolygonMeshDesc *arg1 = (ndPolygonMeshDesc *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndPolygonMeshDesc_m_vertex_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndPolygonMeshDesc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndPolygonMeshDesc_m_vertex_set" "', argument " "1"" of type '" "ndPolygonMeshDesc *""'"); 
  }
  arg1 = reinterpret_cast< ndPolygonMeshDesc * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndPolygonMeshDesc_m_vertex_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->m_vertex = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndPolygonMeshDesc_m_vertex_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndPolygonMeshDesc *arg1 = (ndPolygonMeshDesc *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndPolygonMeshDesc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndPolygonMeshDesc_m_vertex_get" "', argument " "1"" of type '" "ndPolygonMeshDesc *""'"); 
  }
  arg1 = reinterpret_cast< ndPolygonMeshDesc * >(argp1);
  result = (float *) ((arg1)->m_vertex);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndPolygonMeshDesc_m_faceIndexCount_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndPolygonMeshDesc *arg1 = (ndPolygonMeshDesc *) 0 ;
  int *arg2 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndPolygonMeshDesc_m_faceIndexCount_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndPolygonMeshDesc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndPolygonMeshDesc_m_faceIndexCount_set" "', argument " "1"" of type '" "ndPolygonMeshDesc *""'"); 
  }
  arg1 = reinterpret_cast< ndPolygonMeshDesc * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_int, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndPolygonMeshDesc_m_faceIndexCount_set" "', argument " "2"" of type '" "int *""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  if (arg1) (arg1)->m_faceIndexCount = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndPolygonMeshDesc_m_faceIndexCount_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndPolygonMeshDesc *arg1 = (ndPolygonMeshDesc *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndPolygonMeshDesc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndPolygonMeshDesc_m_faceIndexCount_get" "', argument " "1"" of type '" "ndPolygonMeshDesc *""'"); 
  }
  arg1 = reinterpret_cast< ndPolygonMeshDesc * >(argp1);
  result = (int *) ((arg1)->m_faceIndexCount);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndPolygonMeshDesc_m_faceVertexIndex_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndPolygonMeshDesc *arg1 = (ndPolygonMeshDesc *) 0 ;
  int *arg2 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndPolygonMeshDesc_m_faceVertexIndex_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndPolygonMeshDesc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndPolygonMeshDesc_m_faceVertexIndex_set" "', argument " "1"" of type '" "ndPolygonMeshDesc *""'"); 
  }
  arg1 = reinterpret_cast< ndPolygonMeshDesc * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_int, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndPolygonMeshDesc_m_faceVertexIndex_set" "', argument " "2"" of type '" "int *""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  if (arg1) (arg1)->m_faceVertexIndex = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndPolygonMeshDesc_m_faceVertexIndex_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndPolygonMeshDesc *arg1 = (ndPolygonMeshDesc *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndPolygonMeshDesc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndPolygonMeshDesc_m_faceVertexIndex_get" "', argument " "1"" of type '" "ndPolygonMeshDesc *""'"); 
  }
  arg1 = reinterpret_cast< ndPolygonMeshDesc * >(argp1);
  result = (int *) ((arg1)->m_faceVertexIndex);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndPolygonMeshDesc_m_faceIndexStart_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndPolygonMeshDesc *arg1 = (ndPolygonMeshDesc *) 0 ;
  int *arg2 = (int *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndPolygonMeshDesc_m_faceIndexStart_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndPolygonMeshDesc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndPolygonMeshDesc_m_faceIndexStart_set" "', argument " "1"" of type '" "ndPolygonMeshDesc *""'"); 
  }
  arg1 = reinterpret_cast< ndPolygonMeshDesc * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_int, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndPolygonMeshDesc_m_faceIndexStart_set" "', argument " "2"" of type '" "int *""'"); 
  }
  arg2 = reinterpret_cast< int * >(argp2);
  if (arg1) (arg1)->m_faceIndexStart = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndPolygonMeshDesc_m_faceIndexStart_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndPolygonMeshDesc *arg1 = (ndPolygonMeshDesc *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndPolygonMeshDesc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndPolygonMeshDesc_m_faceIndexStart_get" "', argument " "1"" of type '" "ndPolygonMeshDesc *""'"); 
  }
  arg1 = reinterpret_cast< ndPolygonMeshDesc * >(argp1);
  result = (int *) ((arg1)->m_faceIndexStart);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndPolygonMeshDesc_m_hitDistance_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndPolygonMeshDesc *arg1 = (ndPolygonMeshDesc *) 0 ;
  float *arg2 = (float *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndPolygonMeshDesc_m_hitDistance_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndPolygonMeshDesc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndPolygonMeshDesc_m_hitDistance_set" "', argument " "1"" of type '" "ndPolygonMeshDesc *""'"); 
  }
  arg1 = reinterpret_cast< ndPolygonMeshDesc * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_float, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndPolygonMeshDesc_m_hitDistance_set" "', argument " "2"" of type '" "float *""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  if (arg1) (arg1)->m_hitDistance = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndPolygonMeshDesc_m_hitDistance_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndPolygonMeshDesc *arg1 = (ndPolygonMeshDesc *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndPolygonMeshDesc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndPolygonMeshDesc_m_hitDistance_get" "', argument " "1"" of type '" "ndPolygonMeshDesc *""'"); 
  }
  arg1 = reinterpret_cast< ndPolygonMeshDesc * >(argp1);
  result = (float *) ((arg1)->m_hitDistance);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_float, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndPolygonMeshDesc_m_me_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndPolygonMeshDesc *arg1 = (ndPolygonMeshDesc *) 0 ;
  ndShapeStaticMesh *arg2 = (ndShapeStaticMesh *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndPolygonMeshDesc_m_me_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndPolygonMeshDesc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndPolygonMeshDesc_m_me_set" "', argument " "1"" of type '" "ndPolygonMeshDesc *""'"); 
  }
  arg1 = reinterpret_cast< ndPolygonMeshDesc * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_ndShapeStaticMesh, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndPolygonMeshDesc_m_me_set" "', argument " "2"" of type '" "ndShapeStaticMesh const *""'"); 
  }
  arg2 = reinterpret_cast< ndShapeStaticMesh * >(argp2);
  if (arg1) (arg1)->m_me = (ndShapeStaticMesh const *)arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndPolygonMeshDesc_m_me_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndPolygonMeshDesc *arg1 = (ndPolygonMeshDesc *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndShapeStaticMesh *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndPolygonMeshDesc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndPolygonMeshDesc_m_me_get" "', argument " "1"" of type '" "ndPolygonMeshDesc *""'"); 
  }
  arg1 = reinterpret_cast< ndPolygonMeshDesc * >(argp1);
  result = (ndShapeStaticMesh *) ((arg1)->m_me);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeStaticMesh, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndPolygonMeshDesc_m_globalIndexCount_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndPolygonMeshDesc *arg1 = (ndPolygonMeshDesc *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndPolygonMeshDesc_m_globalIndexCount_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndPolygonMeshDesc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndPolygonMeshDesc_m_globalIndexCount_set" "', argument " "1"" of type '" "ndPolygonMeshDesc *""'"); 
  }
  arg1 = reinterpret_cast< ndPolygonMeshDesc * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndPolygonMeshDesc_m_globalIndexCount_set" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  if (arg1) (arg1)->m_globalIndexCount = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndPolygonMeshDesc_m_globalIndexCount_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndPolygonMeshDesc *arg1 = (ndPolygonMeshDesc *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndPolygonMeshDesc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndPolygonMeshDesc_m_globalIndexCount_get" "', argument " "1"" of type '" "ndPolygonMeshDesc *""'"); 
  }
  arg1 = reinterpret_cast< ndPolygonMeshDesc * >(argp1);
  result = (int) ((arg1)->m_globalIndexCount);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndPolygonMeshDesc_m_maxT_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndPolygonMeshDesc *arg1 = (ndPolygonMeshDesc *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndPolygonMeshDesc_m_maxT_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndPolygonMeshDesc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndPolygonMeshDesc_m_maxT_set" "', argument " "1"" of type '" "ndPolygonMeshDesc *""'"); 
  }
  arg1 = reinterpret_cast< ndPolygonMeshDesc * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndPolygonMeshDesc_m_maxT_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->m_maxT = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndPolygonMeshDesc_m_maxT_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndPolygonMeshDesc *arg1 = (ndPolygonMeshDesc *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndPolygonMeshDesc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndPolygonMeshDesc_m_maxT_get" "', argument " "1"" of type '" "ndPolygonMeshDesc *""'"); 
  }
  arg1 = reinterpret_cast< ndPolygonMeshDesc * >(argp1);
  result = (float) ((arg1)->m_maxT);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndPolygonMeshDesc_m_doContinuesCollisionTest_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndPolygonMeshDesc *arg1 = (ndPolygonMeshDesc *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndPolygonMeshDesc_m_doContinuesCollisionTest_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndPolygonMeshDesc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndPolygonMeshDesc_m_doContinuesCollisionTest_set" "', argument " "1"" of type '" "ndPolygonMeshDesc *""'"); 
  }
  arg1 = reinterpret_cast< ndPolygonMeshDesc * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndPolygonMeshDesc_m_doContinuesCollisionTest_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->m_doContinuesCollisionTest = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndPolygonMeshDesc_m_doContinuesCollisionTest_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndPolygonMeshDesc *arg1 = (ndPolygonMeshDesc *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndPolygonMeshDesc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndPolygonMeshDesc_m_doContinuesCollisionTest_get" "', argument " "1"" of type '" "ndPolygonMeshDesc *""'"); 
  }
  arg1 = reinterpret_cast< ndPolygonMeshDesc * >(argp1);
  result = (bool) ((arg1)->m_doContinuesCollisionTest);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndPolygonMeshDesc_m_globalFaceVertexIndex_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndPolygonMeshDesc *arg1 = (ndPolygonMeshDesc *) 0 ;
  int *arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndPolygonMeshDesc_m_globalFaceVertexIndex_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndPolygonMeshDesc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndPolygonMeshDesc_m_globalFaceVertexIndex_set" "', argument " "1"" of type '" "ndPolygonMeshDesc *""'"); 
  }
  arg1 = reinterpret_cast< ndPolygonMeshDesc * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndPolygonMeshDesc_m_globalFaceVertexIndex_set" "', argument " "2"" of type '" "int [(512*(4*2+3))]""'"); 
  } 
  arg2 = reinterpret_cast< int * >(argp2);
  {
    if (arg2) {
      size_t ii = 0;
      for (; ii < (size_t)(512*(4*2+3)); ++ii) *(int *)&arg1->m_globalFaceVertexIndex[ii] = *((int *)arg2 + ii);
    } else {
      SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in variable '""m_globalFaceVertexIndex""' of type '""int [(512*(4*2+3))]""'");
    }
  }
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndPolygonMeshDesc_m_globalFaceVertexIndex_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndPolygonMeshDesc *arg1 = (ndPolygonMeshDesc *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndPolygonMeshDesc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndPolygonMeshDesc_m_globalFaceVertexIndex_get" "', argument " "1"" of type '" "ndPolygonMeshDesc *""'"); 
  }
  arg1 = reinterpret_cast< ndPolygonMeshDesc * >(argp1);
  result = (int *)(int *) ((arg1)->m_globalFaceVertexIndex);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_int, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndPolygonMeshDesc_m_meshData_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndPolygonMeshDesc *arg1 = (ndPolygonMeshDesc *) 0 ;
  ndPolygonMeshDesc::ndMesh *arg2 = (ndPolygonMeshDesc::ndMesh *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndPolygonMeshDesc_m_meshData_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndPolygonMeshDesc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndPolygonMeshDesc_m_meshData_set" "', argument " "1"" of type '" "ndPolygonMeshDesc *""'"); 
  }
  arg1 = reinterpret_cast< ndPolygonMeshDesc * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_ndPolygonMeshDesc__ndMesh, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndPolygonMeshDesc_m_meshData_set" "', argument " "2"" of type '" "ndPolygonMeshDesc::ndMesh *""'"); 
  }
  arg2 = reinterpret_cast< ndPolygonMeshDesc::ndMesh * >(argp2);
  if (arg1) (arg1)->m_meshData = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndPolygonMeshDesc_m_meshData_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndPolygonMeshDesc *arg1 = (ndPolygonMeshDesc *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndPolygonMeshDesc::ndMesh *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndPolygonMeshDesc, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndPolygonMeshDesc_m_meshData_get" "', argument " "1"" of type '" "ndPolygonMeshDesc *""'"); 
  }
  arg1 = reinterpret_cast< ndPolygonMeshDesc * >(argp1);
  result = (ndPolygonMeshDesc::ndMesh *)& ((arg1)->m_meshData);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndPolygonMeshDesc__ndMesh, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ndPolygonMeshDesc(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndPolygonMeshDesc *arg1 = (ndPolygonMeshDesc *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndPolygonMeshDesc, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ndPolygonMeshDesc" "', argument " "1"" of type '" "ndPolygonMeshDesc *""'"); 
  }
  arg1 = reinterpret_cast< ndPolygonMeshDesc * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ndPolygonMeshDesc_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ndPolygonMeshDesc, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ndPolygonMeshDesc_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_ndShapeStaticMesh__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  ndShapeID arg1 ;
  int val1 ;
  int ecode1 = 0 ;
  ndShapeStaticMesh *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ndShapeStaticMesh" "', argument " "1"" of type '" "ndShapeID""'");
  } 
  arg1 = static_cast< ndShapeID >(val1);
  result = (ndShapeStaticMesh *)new ndShapeStaticMesh(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeStaticMesh, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ndShapeStaticMesh__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dLoadSaveBase::dLoadDescriptor *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ndShapeStaticMesh *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_dLoadSaveBase__dLoadDescriptor,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ndShapeStaticMesh" "', argument " "1"" of type '" "dLoadSaveBase::dLoadDescriptor const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ndShapeStaticMesh" "', argument " "1"" of type '" "dLoadSaveBase::dLoadDescriptor const &""'"); 
  }
  arg1 = reinterpret_cast< dLoadSaveBase::dLoadDescriptor * >(argp1);
  result = (ndShapeStaticMesh *)new ndShapeStaticMesh((dLoadSaveBase::dLoadDescriptor const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeStaticMesh, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ndShapeStaticMesh(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_ndShapeStaticMesh", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_dLoadSaveBase__dLoadDescriptor, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_ndShapeStaticMesh__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      return _wrap_new_ndShapeStaticMesh__SWIG_0(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_ndShapeStaticMesh'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ndShapeStaticMesh::ndShapeStaticMesh(ndShapeID)\n"
    "    ndShapeStaticMesh::ndShapeStaticMesh(dLoadSaveBase::dLoadDescriptor const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_ndShapeStaticMesh(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeStaticMesh *arg1 = (ndShapeStaticMesh *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeStaticMesh, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ndShapeStaticMesh" "', argument " "1"" of type '" "ndShapeStaticMesh *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeStaticMesh * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeStaticMesh_GetCollidingFaces(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeStaticMesh *arg1 = (ndShapeStaticMesh *) 0 ;
  ndPolygonMeshDesc *arg2 = (ndPolygonMeshDesc *) (ndPolygonMeshDesc *)0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShapeStaticMesh_GetCollidingFaces", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeStaticMesh, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeStaticMesh_GetCollidingFaces" "', argument " "1"" of type '" "ndShapeStaticMesh const *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeStaticMesh * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_ndPolygonMeshDesc, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndShapeStaticMesh_GetCollidingFaces" "', argument " "2"" of type '" "ndPolygonMeshDesc *const""'"); 
  }
  arg2 = reinterpret_cast< ndPolygonMeshDesc * >(argp2);
  ((ndShapeStaticMesh const *)arg1)->GetCollidingFaces(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ndShapeStaticMesh_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ndShapeStaticMesh, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ndShapeStaticMesh_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_ndShapeConvexHull__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dLoadSaveBase::dLoadDescriptor *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ndShapeConvexHull *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_dLoadSaveBase__dLoadDescriptor,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ndShapeConvexHull" "', argument " "1"" of type '" "dLoadSaveBase::dLoadDescriptor const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ndShapeConvexHull" "', argument " "1"" of type '" "dLoadSaveBase::dLoadDescriptor const &""'"); 
  }
  arg1 = reinterpret_cast< dLoadSaveBase::dLoadDescriptor * >(argp1);
  result = (ndShapeConvexHull *)new ndShapeConvexHull((dLoadSaveBase::dLoadDescriptor const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeConvexHull, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ndShapeConvexHull__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  int arg1 ;
  int arg2 ;
  float arg3 ;
  float *arg4 = (float *) (float *)0 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  ndShapeConvexHull *result = 0 ;
  
  if ((nobjs < 4) || (nobjs > 4)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ndShapeConvexHull" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_ndShapeConvexHull" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ndShapeConvexHull" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_float, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "new_ndShapeConvexHull" "', argument " "4"" of type '" "float const *const""'"); 
  }
  arg4 = reinterpret_cast< float * >(argp4);
  result = (ndShapeConvexHull *)new ndShapeConvexHull(arg1,arg2,arg3,(float const *)arg4);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeConvexHull, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ndShapeConvexHull(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[5] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_ndShapeConvexHull", 0, 4, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_dLoadSaveBase__dLoadDescriptor, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_ndShapeConvexHull__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 4) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_float, 0);
          _v = SWIG_CheckState(res);
          if (_v) {
            return _wrap_new_ndShapeConvexHull__SWIG_1(self, argc, argv);
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_ndShapeConvexHull'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ndShapeConvexHull::ndShapeConvexHull(dLoadSaveBase::dLoadDescriptor const &)\n"
    "    ndShapeConvexHull::ndShapeConvexHull(int,int,float,float const *const)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_ndShapeConvexHull(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeConvexHull *arg1 = (ndShapeConvexHull *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeConvexHull, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ndShapeConvexHull" "', argument " "1"" of type '" "ndShapeConvexHull *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeConvexHull * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ndShapeConvexHull_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ndShapeConvexHull, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ndShapeConvexHull_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_ndShapeHeightfield__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  int arg1 ;
  int arg2 ;
  ndShapeHeightfield::ndGridConstruction arg3 ;
  float arg4 ;
  float arg5 ;
  float arg6 ;
  int val1 ;
  int ecode1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  int val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  float val6 ;
  int ecode6 = 0 ;
  ndShapeHeightfield *result = 0 ;
  
  if ((nobjs < 6) || (nobjs > 6)) SWIG_fail;
  ecode1 = SWIG_AsVal_int(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ndShapeHeightfield" "', argument " "1"" of type '" "int""'");
  } 
  arg1 = static_cast< int >(val1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_ndShapeHeightfield" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_int(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ndShapeHeightfield" "', argument " "3"" of type '" "ndShapeHeightfield::ndGridConstruction""'");
  } 
  arg3 = static_cast< ndShapeHeightfield::ndGridConstruction >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_ndShapeHeightfield" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_ndShapeHeightfield" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  ecode6 = SWIG_AsVal_float(swig_obj[5], &val6);
  if (!SWIG_IsOK(ecode6)) {
    SWIG_exception_fail(SWIG_ArgError(ecode6), "in method '" "new_ndShapeHeightfield" "', argument " "6"" of type '" "float""'");
  } 
  arg6 = static_cast< float >(val6);
  result = (ndShapeHeightfield *)new ndShapeHeightfield(arg1,arg2,arg3,arg4,arg5,arg6);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeHeightfield, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ndShapeHeightfield__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dLoadSaveBase::dLoadDescriptor *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ndShapeHeightfield *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_dLoadSaveBase__dLoadDescriptor,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ndShapeHeightfield" "', argument " "1"" of type '" "dLoadSaveBase::dLoadDescriptor const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ndShapeHeightfield" "', argument " "1"" of type '" "dLoadSaveBase::dLoadDescriptor const &""'"); 
  }
  arg1 = reinterpret_cast< dLoadSaveBase::dLoadDescriptor * >(argp1);
  result = (ndShapeHeightfield *)new ndShapeHeightfield((dLoadSaveBase::dLoadDescriptor const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeHeightfield, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ndShapeHeightfield(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[7] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_ndShapeHeightfield", 0, 6, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_dLoadSaveBase__dLoadDescriptor, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_ndShapeHeightfield__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 6) {
    int _v;
    {
      int res = SWIG_AsVal_int(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_int(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_int(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              {
                int res = SWIG_AsVal_float(argv[5], NULL);
                _v = SWIG_CheckState(res);
              }
              if (_v) {
                return _wrap_new_ndShapeHeightfield__SWIG_0(self, argc, argv);
              }
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_ndShapeHeightfield'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ndShapeHeightfield::ndShapeHeightfield(int,int,ndShapeHeightfield::ndGridConstruction,float,float,float)\n"
    "    ndShapeHeightfield::ndShapeHeightfield(dLoadSaveBase::dLoadDescriptor const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_ndShapeHeightfield(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeHeightfield *arg1 = (ndShapeHeightfield *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeHeightfield, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ndShapeHeightfield" "', argument " "1"" of type '" "ndShapeHeightfield *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeHeightfield * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeHeightfield_GetElevationMap__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  ndShapeHeightfield *arg1 = (ndShapeHeightfield *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  dArray< short > *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeHeightfield, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeHeightfield_GetElevationMap" "', argument " "1"" of type '" "ndShapeHeightfield *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeHeightfield * >(argp1);
  result = (dArray< short > *) &(arg1)->GetElevationMap();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dArrayT_short_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeHeightfield_GetElevationMap__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  ndShapeHeightfield *arg1 = (ndShapeHeightfield *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  dArray< short > *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeHeightfield, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeHeightfield_GetElevationMap" "', argument " "1"" of type '" "ndShapeHeightfield const *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeHeightfield * >(argp1);
  result = (dArray< short > *) &((ndShapeHeightfield const *)arg1)->GetElevationMap();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dArrayT_short_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeHeightfield_GetElevationMap(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "ndShapeHeightfield_GetElevationMap", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ndShapeHeightfield, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_ndShapeHeightfield_GetElevationMap__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ndShapeHeightfield, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_ndShapeHeightfield_GetElevationMap__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'ndShapeHeightfield_GetElevationMap'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ndShapeHeightfield::GetElevationMap()\n"
    "    ndShapeHeightfield::GetElevationMap() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ndShapeHeightfield_UpdateElevationMapAabb(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeHeightfield *arg1 = (ndShapeHeightfield *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeHeightfield, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeHeightfield_UpdateElevationMapAabb" "', argument " "1"" of type '" "ndShapeHeightfield *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeHeightfield * >(argp1);
  (arg1)->UpdateElevationMapAabb();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeHeightfield_GetLocalAabb(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeHeightfield *arg1 = (ndShapeHeightfield *) 0 ;
  dVector *arg2 = 0 ;
  dVector *arg3 = 0 ;
  dVector *arg4 = 0 ;
  dVector *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject *swig_obj[5] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShapeHeightfield_GetLocalAabb", 5, 5, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeHeightfield, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeHeightfield_GetLocalAabb" "', argument " "1"" of type '" "ndShapeHeightfield const *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeHeightfield * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndShapeHeightfield_GetLocalAabb" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShapeHeightfield_GetLocalAabb" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ndShapeHeightfield_GetLocalAabb" "', argument " "3"" of type '" "dVector const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShapeHeightfield_GetLocalAabb" "', argument " "3"" of type '" "dVector const &""'"); 
  }
  arg3 = reinterpret_cast< dVector * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_dVector,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ndShapeHeightfield_GetLocalAabb" "', argument " "4"" of type '" "dVector &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShapeHeightfield_GetLocalAabb" "', argument " "4"" of type '" "dVector &""'"); 
  }
  arg4 = reinterpret_cast< dVector * >(argp4);
  res5 = SWIG_ConvertPtr(swig_obj[4], &argp5, SWIGTYPE_p_dVector,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "ndShapeHeightfield_GetLocalAabb" "', argument " "5"" of type '" "dVector &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShapeHeightfield_GetLocalAabb" "', argument " "5"" of type '" "dVector &""'"); 
  }
  arg5 = reinterpret_cast< dVector * >(argp5);
  ((ndShapeHeightfield const *)arg1)->GetLocalAabb((dVector const &)*arg2,(dVector const &)*arg3,*arg4,*arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ndShapeHeightfield_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ndShapeHeightfield, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ndShapeHeightfield_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_ndShapeChamferCylinder__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  float arg1 ;
  float arg2 ;
  float val1 ;
  int ecode1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  ndShapeChamferCylinder *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  ecode1 = SWIG_AsVal_float(swig_obj[0], &val1);
  if (!SWIG_IsOK(ecode1)) {
    SWIG_exception_fail(SWIG_ArgError(ecode1), "in method '" "new_ndShapeChamferCylinder" "', argument " "1"" of type '" "float""'");
  } 
  arg1 = static_cast< float >(val1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_ndShapeChamferCylinder" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  result = (ndShapeChamferCylinder *)new ndShapeChamferCylinder(arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeChamferCylinder, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ndShapeChamferCylinder__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dLoadSaveBase::dLoadDescriptor *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ndShapeChamferCylinder *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_dLoadSaveBase__dLoadDescriptor,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ndShapeChamferCylinder" "', argument " "1"" of type '" "dLoadSaveBase::dLoadDescriptor const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ndShapeChamferCylinder" "', argument " "1"" of type '" "dLoadSaveBase::dLoadDescriptor const &""'"); 
  }
  arg1 = reinterpret_cast< dLoadSaveBase::dLoadDescriptor * >(argp1);
  result = (ndShapeChamferCylinder *)new ndShapeChamferCylinder((dLoadSaveBase::dLoadDescriptor const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeChamferCylinder, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ndShapeChamferCylinder(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_ndShapeChamferCylinder", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_dLoadSaveBase__dLoadDescriptor, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_ndShapeChamferCylinder__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v;
    {
      int res = SWIG_AsVal_float(argv[0], NULL);
      _v = SWIG_CheckState(res);
    }
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        return _wrap_new_ndShapeChamferCylinder__SWIG_0(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_ndShapeChamferCylinder'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ndShapeChamferCylinder::ndShapeChamferCylinder(float,float)\n"
    "    ndShapeChamferCylinder::ndShapeChamferCylinder(dLoadSaveBase::dLoadDescriptor const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_ndShapeChamferCylinder(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeChamferCylinder *arg1 = (ndShapeChamferCylinder *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeChamferCylinder, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ndShapeChamferCylinder" "', argument " "1"" of type '" "ndShapeChamferCylinder *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeChamferCylinder * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeChamferCylinder_GetAsShapeChamferCylinder(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeChamferCylinder *arg1 = (ndShapeChamferCylinder *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndShapeChamferCylinder *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeChamferCylinder, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeChamferCylinder_GetAsShapeChamferCylinder" "', argument " "1"" of type '" "ndShapeChamferCylinder *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeChamferCylinder * >(argp1);
  result = (ndShapeChamferCylinder *)(arg1)->GetAsShapeChamferCylinder();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeChamferCylinder, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ndShapeChamferCylinder_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ndShapeChamferCylinder, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ndShapeChamferCylinder_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_delete_ndShapeDebugCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeDebugCallback *arg1 = (ndShapeDebugCallback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeDebugCallback, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ndShapeDebugCallback" "', argument " "1"" of type '" "ndShapeDebugCallback *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeDebugCallback * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeDebugCallback_DrawPolygon(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeDebugCallback *arg1 = (ndShapeDebugCallback *) 0 ;
  int arg2 ;
  dVector *arg3 = (dVector *) (dVector *)0 ;
  ndShapeDebugCallback::ndEdgeType *arg4 = (ndShapeDebugCallback::ndEdgeType *) (ndShapeDebugCallback::ndEdgeType *)0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject *swig_obj[4] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShapeDebugCallback_DrawPolygon", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeDebugCallback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeDebugCallback_DrawPolygon" "', argument " "1"" of type '" "ndShapeDebugCallback *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeDebugCallback * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndShapeDebugCallback_DrawPolygon" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ndShapeDebugCallback_DrawPolygon" "', argument " "3"" of type '" "dVector const *const""'"); 
  }
  arg3 = reinterpret_cast< dVector * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_ndShapeDebugCallback__ndEdgeType, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ndShapeDebugCallback_DrawPolygon" "', argument " "4"" of type '" "ndShapeDebugCallback::ndEdgeType const *const""'"); 
  }
  arg4 = reinterpret_cast< ndShapeDebugCallback::ndEdgeType * >(argp4);
  (arg1)->DrawPolygon(arg2,(dVector const *)arg3,(ndShapeDebugCallback::ndEdgeType const *)arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeDebugCallback_m_instance_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeDebugCallback *arg1 = (ndShapeDebugCallback *) 0 ;
  ndShapeInstance *arg2 = (ndShapeInstance *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShapeDebugCallback_m_instance_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeDebugCallback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeDebugCallback_m_instance_set" "', argument " "1"" of type '" "ndShapeDebugCallback *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeDebugCallback * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_ndShapeInstance, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndShapeDebugCallback_m_instance_set" "', argument " "2"" of type '" "ndShapeInstance const *""'"); 
  }
  arg2 = reinterpret_cast< ndShapeInstance * >(argp2);
  if (arg1) (arg1)->m_instance = (ndShapeInstance const *)arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeDebugCallback_m_instance_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeDebugCallback *arg1 = (ndShapeDebugCallback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndShapeInstance *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeDebugCallback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeDebugCallback_m_instance_get" "', argument " "1"" of type '" "ndShapeDebugCallback *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeDebugCallback * >(argp1);
  result = (ndShapeInstance *) ((arg1)->m_instance);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ndShapeDebugCallback_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ndShapeDebugCallback, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ndShapeInstance__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  ndShape *arg1 = (ndShape *) (ndShape *)0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ndShapeInstance *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShape, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ndShapeInstance" "', argument " "1"" of type '" "ndShape *const""'"); 
  }
  arg1 = reinterpret_cast< ndShape * >(argp1);
  result = (ndShapeInstance *)new ndShapeInstance(arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeInstance, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ndShapeInstance__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ndShapeInstance *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_ndShapeInstance,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ndShapeInstance" "', argument " "1"" of type '" "ndShapeInstance const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ndShapeInstance" "', argument " "1"" of type '" "ndShapeInstance const &""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  result = (ndShapeInstance *)new ndShapeInstance((ndShapeInstance const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeInstance, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ndShapeInstance__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = 0 ;
  ndShape *arg2 = (ndShape *) (ndShape *)0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  ndShapeInstance *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_ndShapeInstance,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ndShapeInstance" "', argument " "1"" of type '" "ndShapeInstance const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ndShapeInstance" "', argument " "1"" of type '" "ndShapeInstance const &""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_ndShape, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ndShapeInstance" "', argument " "2"" of type '" "ndShape *const""'"); 
  }
  arg2 = reinterpret_cast< ndShape * >(argp2);
  result = (ndShapeInstance *)new ndShapeInstance((ndShapeInstance const &)*arg1,arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeInstance, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ndShapeInstance__SWIG_3(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  nd::TiXmlNode *arg1 = (nd::TiXmlNode *) (nd::TiXmlNode *)0 ;
  ndShapeLoaderCache *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  ndShapeInstance *result = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_nd__TiXmlNode, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ndShapeInstance" "', argument " "1"" of type '" "nd::TiXmlNode const *const""'"); 
  }
  arg1 = reinterpret_cast< nd::TiXmlNode * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_ndShapeLoaderCache,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "new_ndShapeInstance" "', argument " "2"" of type '" "ndShapeLoaderCache const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ndShapeInstance" "', argument " "2"" of type '" "ndShapeLoaderCache const &""'"); 
  }
  arg2 = reinterpret_cast< ndShapeLoaderCache * >(argp2);
  result = (ndShapeInstance *)new ndShapeInstance((nd::TiXmlNode const *)arg1,(ndShapeLoaderCache const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeInstance, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ndShapeInstance(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[3] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_ndShapeInstance", 0, 2, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ndShape, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_ndShapeInstance__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_ndShapeInstance, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_ndShapeInstance__SWIG_1(self, argc, argv);
    }
  }
  if (argc == 2) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_ndShapeInstance, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_ndShape, 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_ndShapeInstance__SWIG_2(self, argc, argv);
      }
    }
  }
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_nd__TiXmlNode, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_ndShapeLoaderCache, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_new_ndShapeInstance__SWIG_3(self, argc, argv);
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_ndShapeInstance'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ndShapeInstance::ndShapeInstance(ndShape *const)\n"
    "    ndShapeInstance::ndShapeInstance(ndShapeInstance const &)\n"
    "    ndShapeInstance::ndShapeInstance(ndShapeInstance const &,ndShape *const)\n"
    "    ndShapeInstance::ndShapeInstance(nd::TiXmlNode const *const,ndShapeLoaderCache const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_ndShapeInstance(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ndShapeInstance" "', argument " "1"" of type '" "ndShapeInstance *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_Assigment(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  ndShapeInstance *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  ndShapeInstance *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShapeInstance_Assigment", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_Assigment" "', argument " "1"" of type '" "ndShapeInstance *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_ndShapeInstance,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndShapeInstance_Assigment" "', argument " "2"" of type '" "ndShapeInstance const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShapeInstance_Assigment" "', argument " "2"" of type '" "ndShapeInstance const &""'"); 
  }
  arg2 = reinterpret_cast< ndShapeInstance * >(argp2);
  result = (ndShapeInstance *) &(arg1)->operator =((ndShapeInstance const &)*arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_CalculateInertia(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dMatrix result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_CalculateInertia" "', argument " "1"" of type '" "ndShapeInstance const *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  result = ((ndShapeInstance const *)arg1)->CalculateInertia();
  resultobj = SWIG_NewPointerObj((new dMatrix(static_cast< const dMatrix& >(result))), SWIGTYPE_p_dMatrix, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_CalculateObb(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  dVector *arg2 = 0 ;
  dVector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShapeInstance_CalculateObb", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_CalculateObb" "', argument " "1"" of type '" "ndShapeInstance const *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndShapeInstance_CalculateObb" "', argument " "2"" of type '" "dVector &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShapeInstance_CalculateObb" "', argument " "2"" of type '" "dVector &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_dVector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ndShapeInstance_CalculateObb" "', argument " "3"" of type '" "dVector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShapeInstance_CalculateObb" "', argument " "3"" of type '" "dVector &""'"); 
  }
  arg3 = reinterpret_cast< dVector * >(argp3);
  ((ndShapeInstance const *)arg1)->CalculateObb(*arg2,*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_CalculateAabb(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  dMatrix *arg2 = 0 ;
  dVector *arg3 = 0 ;
  dVector *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject *swig_obj[4] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShapeInstance_CalculateAabb", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_CalculateAabb" "', argument " "1"" of type '" "ndShapeInstance const *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dMatrix,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndShapeInstance_CalculateAabb" "', argument " "2"" of type '" "dMatrix const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShapeInstance_CalculateAabb" "', argument " "2"" of type '" "dMatrix const &""'"); 
  }
  arg2 = reinterpret_cast< dMatrix * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_dVector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ndShapeInstance_CalculateAabb" "', argument " "3"" of type '" "dVector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShapeInstance_CalculateAabb" "', argument " "3"" of type '" "dVector &""'"); 
  }
  arg3 = reinterpret_cast< dVector * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_dVector,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ndShapeInstance_CalculateAabb" "', argument " "4"" of type '" "dVector &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShapeInstance_CalculateAabb" "', argument " "4"" of type '" "dVector &""'"); 
  }
  arg4 = reinterpret_cast< dVector * >(argp4);
  ((ndShapeInstance const *)arg1)->CalculateAabb((dMatrix const &)*arg2,*arg3,*arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_DebugShape(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  dMatrix *arg2 = 0 ;
  ndShapeDebugCallback *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShapeInstance_DebugShape", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_DebugShape" "', argument " "1"" of type '" "ndShapeInstance const *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dMatrix,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndShapeInstance_DebugShape" "', argument " "2"" of type '" "dMatrix const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShapeInstance_DebugShape" "', argument " "2"" of type '" "dMatrix const &""'"); 
  }
  arg2 = reinterpret_cast< dMatrix * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_ndShapeDebugCallback,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ndShapeInstance_DebugShape" "', argument " "3"" of type '" "ndShapeDebugCallback &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShapeInstance_DebugShape" "', argument " "3"" of type '" "ndShapeDebugCallback &""'"); 
  }
  arg3 = reinterpret_cast< ndShapeDebugCallback * >(argp3);
  ((ndShapeInstance const *)arg1)->DebugShape((dMatrix const &)*arg2,*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_RayCast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  ndRayCastNotify *arg2 = 0 ;
  dVector *arg3 = 0 ;
  dVector *arg4 = 0 ;
  ndBody *arg5 = (ndBody *) (ndBody *)0 ;
  ndContactPoint *arg6 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  void *argp6 = 0 ;
  int res6 = 0 ;
  PyObject *swig_obj[6] ;
  float result;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShapeInstance_RayCast", 6, 6, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_RayCast" "', argument " "1"" of type '" "ndShapeInstance const *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_ndRayCastNotify,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndShapeInstance_RayCast" "', argument " "2"" of type '" "ndRayCastNotify &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShapeInstance_RayCast" "', argument " "2"" of type '" "ndRayCastNotify &""'"); 
  }
  arg2 = reinterpret_cast< ndRayCastNotify * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ndShapeInstance_RayCast" "', argument " "3"" of type '" "dVector const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShapeInstance_RayCast" "', argument " "3"" of type '" "dVector const &""'"); 
  }
  arg3 = reinterpret_cast< dVector * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ndShapeInstance_RayCast" "', argument " "4"" of type '" "dVector const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShapeInstance_RayCast" "', argument " "4"" of type '" "dVector const &""'"); 
  }
  arg4 = reinterpret_cast< dVector * >(argp4);
  res5 = SWIG_ConvertPtr(swig_obj[4], &argp5,SWIGTYPE_p_ndBody, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "ndShapeInstance_RayCast" "', argument " "5"" of type '" "ndBody const *const""'"); 
  }
  arg5 = reinterpret_cast< ndBody * >(argp5);
  res6 = SWIG_ConvertPtr(swig_obj[5], &argp6, SWIGTYPE_p_ndContactPoint,  0 );
  if (!SWIG_IsOK(res6)) {
    SWIG_exception_fail(SWIG_ArgError(res6), "in method '" "ndShapeInstance_RayCast" "', argument " "6"" of type '" "ndContactPoint &""'"); 
  }
  if (!argp6) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShapeInstance_RayCast" "', argument " "6"" of type '" "ndContactPoint &""'"); 
  }
  arg6 = reinterpret_cast< ndContactPoint * >(argp6);
  result = (float)((ndShapeInstance const *)arg1)->RayCast(*arg2,(dVector const &)*arg3,(dVector const &)*arg4,(ndBody const *)arg5,*arg6);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_GetShapeInfo(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndShapeInfo result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_GetShapeInfo" "', argument " "1"" of type '" "ndShapeInstance const *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  result = ((ndShapeInstance const *)arg1)->GetShapeInfo();
  resultobj = SWIG_NewPointerObj((new ndShapeInfo(static_cast< const ndShapeInfo& >(result))), SWIGTYPE_p_ndShapeInfo, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_Save(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  dLoadSaveBase::dSaveDescriptor *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShapeInstance_Save", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_Save" "', argument " "1"" of type '" "ndShapeInstance const *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dLoadSaveBase__dSaveDescriptor,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndShapeInstance_Save" "', argument " "2"" of type '" "dLoadSaveBase::dSaveDescriptor const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShapeInstance_Save" "', argument " "2"" of type '" "dLoadSaveBase::dSaveDescriptor const &""'"); 
  }
  arg2 = reinterpret_cast< dLoadSaveBase::dSaveDescriptor * >(argp2);
  ((ndShapeInstance const *)arg1)->Save((dLoadSaveBase::dSaveDescriptor const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_CalculateBuoyancyCenterOfPresure(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  dVector *arg2 = 0 ;
  dMatrix *arg3 = 0 ;
  dVector *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject *swig_obj[4] ;
  float result;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShapeInstance_CalculateBuoyancyCenterOfPresure", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_CalculateBuoyancyCenterOfPresure" "', argument " "1"" of type '" "ndShapeInstance const *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndShapeInstance_CalculateBuoyancyCenterOfPresure" "', argument " "2"" of type '" "dVector &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShapeInstance_CalculateBuoyancyCenterOfPresure" "', argument " "2"" of type '" "dVector &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_dMatrix,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ndShapeInstance_CalculateBuoyancyCenterOfPresure" "', argument " "3"" of type '" "dMatrix const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShapeInstance_CalculateBuoyancyCenterOfPresure" "', argument " "3"" of type '" "dMatrix const &""'"); 
  }
  arg3 = reinterpret_cast< dMatrix * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ndShapeInstance_CalculateBuoyancyCenterOfPresure" "', argument " "4"" of type '" "dVector const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShapeInstance_CalculateBuoyancyCenterOfPresure" "', argument " "4"" of type '" "dVector const &""'"); 
  }
  arg4 = reinterpret_cast< dVector * >(argp4);
  result = (float)((ndShapeInstance const *)arg1)->CalculateBuoyancyCenterOfPresure(*arg2,(dMatrix const &)*arg3,(dVector const &)*arg4);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_GetBoxPadding(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  dVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShapeInstance_GetBoxPadding", 0, 0, 0)) SWIG_fail;
  result = ndShapeInstance::GetBoxPadding();
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_GetShape__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ndShape *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_GetShape" "', argument " "1"" of type '" "ndShapeInstance *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  result = (ndShape *)(arg1)->GetShape();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShape, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_GetShape__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ndShape *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_GetShape" "', argument " "1"" of type '" "ndShapeInstance const *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  result = (ndShape *)((ndShapeInstance const *)arg1)->GetShape();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShape, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_GetShape(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "ndShapeInstance_GetShape", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ndShapeInstance, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_ndShapeInstance_GetShape__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ndShapeInstance, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_ndShapeInstance_GetShape__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'ndShapeInstance_GetShape'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ndShapeInstance::GetShape()\n"
    "    ndShapeInstance::GetShape() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_SupportVertex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  dVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShapeInstance_SupportVertex", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_SupportVertex" "', argument " "1"" of type '" "ndShapeInstance const *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndShapeInstance_SupportVertex" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShapeInstance_SupportVertex" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  result = ((ndShapeInstance const *)arg1)->SupportVertex((dVector const &)*arg2);
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_GetScaledTransform(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  dMatrix *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dMatrix result;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShapeInstance_GetScaledTransform", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_GetScaledTransform" "', argument " "1"" of type '" "ndShapeInstance const *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dMatrix,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndShapeInstance_GetScaledTransform" "', argument " "2"" of type '" "dMatrix const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShapeInstance_GetScaledTransform" "', argument " "2"" of type '" "dMatrix const &""'"); 
  }
  arg2 = reinterpret_cast< dMatrix * >(argp2);
  result = ((ndShapeInstance const *)arg1)->GetScaledTransform((dMatrix const &)*arg2);
  resultobj = SWIG_NewPointerObj((new dMatrix(static_cast< const dMatrix& >(result))), SWIGTYPE_p_dMatrix, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_SupportVertexSpecial(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  dVector *arg2 = 0 ;
  int *arg3 = (int *) (int *)0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject *swig_obj[3] ;
  dVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShapeInstance_SupportVertexSpecial", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_SupportVertexSpecial" "', argument " "1"" of type '" "ndShapeInstance const *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndShapeInstance_SupportVertexSpecial" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShapeInstance_SupportVertexSpecial" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_int, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ndShapeInstance_SupportVertexSpecial" "', argument " "3"" of type '" "int *const""'"); 
  }
  arg3 = reinterpret_cast< int * >(argp3);
  result = ((ndShapeInstance const *)arg1)->SupportVertexSpecial((dVector const &)*arg2,arg3);
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_SupportVertexSpecialProjectPoint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  dVector *arg2 = 0 ;
  dVector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject *swig_obj[3] ;
  dVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShapeInstance_SupportVertexSpecialProjectPoint", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_SupportVertexSpecialProjectPoint" "', argument " "1"" of type '" "ndShapeInstance const *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndShapeInstance_SupportVertexSpecialProjectPoint" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShapeInstance_SupportVertexSpecialProjectPoint" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ndShapeInstance_SupportVertexSpecialProjectPoint" "', argument " "3"" of type '" "dVector const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShapeInstance_SupportVertexSpecialProjectPoint" "', argument " "3"" of type '" "dVector const &""'"); 
  }
  arg3 = reinterpret_cast< dVector * >(argp3);
  result = ((ndShapeInstance const *)arg1)->SupportVertexSpecialProjectPoint((dVector const &)*arg2,(dVector const &)*arg3);
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_GetLocalMatrix(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dMatrix *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_GetLocalMatrix" "', argument " "1"" of type '" "ndShapeInstance const *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  result = (dMatrix *) &((ndShapeInstance const *)arg1)->GetLocalMatrix();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dMatrix, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_SetLocalMatrix(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  dMatrix *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShapeInstance_SetLocalMatrix", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_SetLocalMatrix" "', argument " "1"" of type '" "ndShapeInstance *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dMatrix,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndShapeInstance_SetLocalMatrix" "', argument " "2"" of type '" "dMatrix const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShapeInstance_SetLocalMatrix" "', argument " "2"" of type '" "dMatrix const &""'"); 
  }
  arg2 = reinterpret_cast< dMatrix * >(argp2);
  (arg1)->SetLocalMatrix((dMatrix const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_GetGlobalMatrix(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dMatrix *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_GetGlobalMatrix" "', argument " "1"" of type '" "ndShapeInstance const *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  result = (dMatrix *) &((ndShapeInstance const *)arg1)->GetGlobalMatrix();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dMatrix, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_SetGlobalMatrix(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  dMatrix *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShapeInstance_SetGlobalMatrix", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_SetGlobalMatrix" "', argument " "1"" of type '" "ndShapeInstance *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dMatrix,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndShapeInstance_SetGlobalMatrix" "', argument " "2"" of type '" "dMatrix const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShapeInstance_SetGlobalMatrix" "', argument " "2"" of type '" "dMatrix const &""'"); 
  }
  arg2 = reinterpret_cast< dMatrix * >(argp2);
  (arg1)->SetGlobalMatrix((dMatrix const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_GetCollisionMode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_GetCollisionMode" "', argument " "1"" of type '" "ndShapeInstance const *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  result = (bool)((ndShapeInstance const *)arg1)->GetCollisionMode();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_SetCollisionMode(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShapeInstance_SetCollisionMode", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_SetCollisionMode" "', argument " "1"" of type '" "ndShapeInstance *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndShapeInstance_SetCollisionMode" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->SetCollisionMode(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_GetConvexVertexCount(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_GetConvexVertexCount" "', argument " "1"" of type '" "ndShapeInstance const *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  result = (int)((ndShapeInstance const *)arg1)->GetConvexVertexCount();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_GetMaterial(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndShapeMaterial result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_GetMaterial" "', argument " "1"" of type '" "ndShapeInstance const *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  result = ((ndShapeInstance const *)arg1)->GetMaterial();
  resultobj = SWIG_NewPointerObj((new ndShapeMaterial(static_cast< const ndShapeMaterial& >(result))), SWIGTYPE_p_ndShapeMaterial, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_SetMaterial(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  ndShapeMaterial *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShapeInstance_SetMaterial", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_SetMaterial" "', argument " "1"" of type '" "ndShapeInstance *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_ndShapeMaterial,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndShapeInstance_SetMaterial" "', argument " "2"" of type '" "ndShapeMaterial const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShapeInstance_SetMaterial" "', argument " "2"" of type '" "ndShapeMaterial const &""'"); 
  }
  arg2 = reinterpret_cast< ndShapeMaterial * >(argp2);
  (arg1)->SetMaterial((ndShapeMaterial const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_GetScale(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dVector *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_GetScale" "', argument " "1"" of type '" "ndShapeInstance const *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  result = (dVector *) &((ndShapeInstance const *)arg1)->GetScale();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dVector, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_GetInvScale(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dVector *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_GetInvScale" "', argument " "1"" of type '" "ndShapeInstance const *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  result = (dVector *) &((ndShapeInstance const *)arg1)->GetInvScale();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dVector, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_SetScale(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  dVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShapeInstance_SetScale", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_SetScale" "', argument " "1"" of type '" "ndShapeInstance *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndShapeInstance_SetScale" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShapeInstance_SetScale" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  (arg1)->SetScale((dVector const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_SetGlobalScale(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  dVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShapeInstance_SetGlobalScale", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_SetGlobalScale" "', argument " "1"" of type '" "ndShapeInstance *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndShapeInstance_SetGlobalScale" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShapeInstance_SetGlobalScale" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  (arg1)->SetGlobalScale((dVector const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_CalculatePlaneIntersection(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  dVector *arg2 = 0 ;
  dVector *arg3 = 0 ;
  dVector *arg4 = (dVector *) (dVector *)0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject *swig_obj[4] ;
  int result;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShapeInstance_CalculatePlaneIntersection", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_CalculatePlaneIntersection" "', argument " "1"" of type '" "ndShapeInstance const *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndShapeInstance_CalculatePlaneIntersection" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShapeInstance_CalculatePlaneIntersection" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ndShapeInstance_CalculatePlaneIntersection" "', argument " "3"" of type '" "dVector const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndShapeInstance_CalculatePlaneIntersection" "', argument " "3"" of type '" "dVector const &""'"); 
  }
  arg3 = reinterpret_cast< dVector * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ndShapeInstance_CalculatePlaneIntersection" "', argument " "4"" of type '" "dVector *const""'"); 
  }
  arg4 = reinterpret_cast< dVector * >(argp4);
  result = (int)((ndShapeInstance const *)arg1)->CalculatePlaneIntersection((dVector const &)*arg2,(dVector const &)*arg3,arg4);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_GetVolume(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_GetVolume" "', argument " "1"" of type '" "ndShapeInstance const *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  result = (float)((ndShapeInstance const *)arg1)->GetVolume();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_GetBoxMinRadius(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_GetBoxMinRadius" "', argument " "1"" of type '" "ndShapeInstance const *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  result = (float)((ndShapeInstance const *)arg1)->GetBoxMinRadius();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_GetBoxMaxRadius(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_GetBoxMaxRadius" "', argument " "1"" of type '" "ndShapeInstance const *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  result = (float)((ndShapeInstance const *)arg1)->GetBoxMaxRadius();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_GetScaleType(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndShapeInstance::ndScaleType result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_GetScaleType" "', argument " "1"" of type '" "ndShapeInstance const *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  result = (ndShapeInstance::ndScaleType)((ndShapeInstance const *)arg1)->GetScaleType();
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_GetUmbraClipSize(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_GetUmbraClipSize" "', argument " "1"" of type '" "ndShapeInstance const *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  result = (float)((ndShapeInstance const *)arg1)->GetUmbraClipSize();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_GetUserDataID(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned long long result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_GetUserDataID" "', argument " "1"" of type '" "ndShapeInstance const *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  result = (unsigned long long)((ndShapeInstance const *)arg1)->GetUserDataID();
  resultobj = SWIG_From_unsigned_SS_long_SS_long(static_cast< unsigned long long >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_m_globalMatrix_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  dMatrix *arg2 = (dMatrix *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShapeInstance_m_globalMatrix_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_m_globalMatrix_set" "', argument " "1"" of type '" "ndShapeInstance *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_dMatrix, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndShapeInstance_m_globalMatrix_set" "', argument " "2"" of type '" "dMatrix *""'"); 
  }
  arg2 = reinterpret_cast< dMatrix * >(argp2);
  if (arg1) (arg1)->m_globalMatrix = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_m_globalMatrix_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dMatrix *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_m_globalMatrix_get" "', argument " "1"" of type '" "ndShapeInstance *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  result = (dMatrix *)& ((arg1)->m_globalMatrix);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dMatrix, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_m_localMatrix_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  dMatrix *arg2 = (dMatrix *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShapeInstance_m_localMatrix_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_m_localMatrix_set" "', argument " "1"" of type '" "ndShapeInstance *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_dMatrix, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndShapeInstance_m_localMatrix_set" "', argument " "2"" of type '" "dMatrix *""'"); 
  }
  arg2 = reinterpret_cast< dMatrix * >(argp2);
  if (arg1) (arg1)->m_localMatrix = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_m_localMatrix_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dMatrix *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_m_localMatrix_get" "', argument " "1"" of type '" "ndShapeInstance *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  result = (dMatrix *)& ((arg1)->m_localMatrix);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dMatrix, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_m_aligmentMatrix_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  dMatrix *arg2 = (dMatrix *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShapeInstance_m_aligmentMatrix_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_m_aligmentMatrix_set" "', argument " "1"" of type '" "ndShapeInstance *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_dMatrix, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndShapeInstance_m_aligmentMatrix_set" "', argument " "2"" of type '" "dMatrix *""'"); 
  }
  arg2 = reinterpret_cast< dMatrix * >(argp2);
  if (arg1) (arg1)->m_aligmentMatrix = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_m_aligmentMatrix_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dMatrix *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_m_aligmentMatrix_get" "', argument " "1"" of type '" "ndShapeInstance *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  result = (dMatrix *)& ((arg1)->m_aligmentMatrix);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dMatrix, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_m_scale_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  dVector *arg2 = (dVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShapeInstance_m_scale_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_m_scale_set" "', argument " "1"" of type '" "ndShapeInstance *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndShapeInstance_m_scale_set" "', argument " "2"" of type '" "dVector *""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  if (arg1) (arg1)->m_scale = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_m_scale_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dVector *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_m_scale_get" "', argument " "1"" of type '" "ndShapeInstance *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  result = (dVector *)& ((arg1)->m_scale);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dVector, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_m_invScale_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  dVector *arg2 = (dVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShapeInstance_m_invScale_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_m_invScale_set" "', argument " "1"" of type '" "ndShapeInstance *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndShapeInstance_m_invScale_set" "', argument " "2"" of type '" "dVector *""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  if (arg1) (arg1)->m_invScale = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_m_invScale_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dVector *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_m_invScale_get" "', argument " "1"" of type '" "ndShapeInstance *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  result = (dVector *)& ((arg1)->m_invScale);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dVector, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_m_maxScale_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  dVector *arg2 = (dVector *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShapeInstance_m_maxScale_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_m_maxScale_set" "', argument " "1"" of type '" "ndShapeInstance *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_dVector, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndShapeInstance_m_maxScale_set" "', argument " "2"" of type '" "dVector *""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  if (arg1) (arg1)->m_maxScale = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_m_maxScale_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dVector *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_m_maxScale_get" "', argument " "1"" of type '" "ndShapeInstance *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  result = (dVector *)& ((arg1)->m_maxScale);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dVector, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_m_shapeMaterial_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  ndShapeMaterial *arg2 = (ndShapeMaterial *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShapeInstance_m_shapeMaterial_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_m_shapeMaterial_set" "', argument " "1"" of type '" "ndShapeInstance *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_ndShapeMaterial, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndShapeInstance_m_shapeMaterial_set" "', argument " "2"" of type '" "ndShapeMaterial *""'"); 
  }
  arg2 = reinterpret_cast< ndShapeMaterial * >(argp2);
  if (arg1) (arg1)->m_shapeMaterial = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_m_shapeMaterial_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndShapeMaterial *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_m_shapeMaterial_get" "', argument " "1"" of type '" "ndShapeInstance *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  result = (ndShapeMaterial *)& ((arg1)->m_shapeMaterial);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeMaterial, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_m_shape_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  ndShape *arg2 = (ndShape *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShapeInstance_m_shape_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_m_shape_set" "', argument " "1"" of type '" "ndShapeInstance *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_ndShape, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndShapeInstance_m_shape_set" "', argument " "2"" of type '" "ndShape const *""'"); 
  }
  arg2 = reinterpret_cast< ndShape * >(argp2);
  if (arg1) (arg1)->m_shape = (ndShape const *)arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_m_shape_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndShape *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_m_shape_get" "', argument " "1"" of type '" "ndShapeInstance *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  result = (ndShape *) ((arg1)->m_shape);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShape, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_m_ownerBody_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  ndBody *arg2 = (ndBody *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShapeInstance_m_ownerBody_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_m_ownerBody_set" "', argument " "1"" of type '" "ndShapeInstance *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_ndBody, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndShapeInstance_m_ownerBody_set" "', argument " "2"" of type '" "ndBody const *""'"); 
  }
  arg2 = reinterpret_cast< ndBody * >(argp2);
  if (arg1) (arg1)->m_ownerBody = (ndBody const *)arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_m_ownerBody_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndBody *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_m_ownerBody_get" "', argument " "1"" of type '" "ndShapeInstance *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  result = (ndBody *) ((arg1)->m_ownerBody);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndBody, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_m_subCollisionHandle_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  void *arg2 = (void *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int res2 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShapeInstance_m_subCollisionHandle_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_m_subCollisionHandle_set" "', argument " "1"" of type '" "ndShapeInstance *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1],SWIG_as_voidptrptr(&arg2), 0, SWIG_POINTER_DISOWN);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndShapeInstance_m_subCollisionHandle_set" "', argument " "2"" of type '" "void const *""'"); 
  }
  if (arg1) (arg1)->m_subCollisionHandle = (void const *)arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_m_subCollisionHandle_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  void *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_m_subCollisionHandle_get" "', argument " "1"" of type '" "ndShapeInstance *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  result = (void *) ((arg1)->m_subCollisionHandle);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_m_parent_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  ndShapeInstance *arg2 = (ndShapeInstance *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShapeInstance_m_parent_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_m_parent_set" "', argument " "1"" of type '" "ndShapeInstance *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_ndShapeInstance, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndShapeInstance_m_parent_set" "', argument " "2"" of type '" "ndShapeInstance const *""'"); 
  }
  arg2 = reinterpret_cast< ndShapeInstance * >(argp2);
  if (arg1) (arg1)->m_parent = (ndShapeInstance const *)arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_m_parent_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndShapeInstance *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_m_parent_get" "', argument " "1"" of type '" "ndShapeInstance *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  result = (ndShapeInstance *) ((arg1)->m_parent);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_m_skinThickness_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShapeInstance_m_skinThickness_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_m_skinThickness_set" "', argument " "1"" of type '" "ndShapeInstance *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndShapeInstance_m_skinThickness_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->m_skinThickness = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_m_skinThickness_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_m_skinThickness_get" "', argument " "1"" of type '" "ndShapeInstance *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  result = (float) ((arg1)->m_skinThickness);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_m_scaleType_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  ndShapeInstance::ndScaleType arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShapeInstance_m_scaleType_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_m_scaleType_set" "', argument " "1"" of type '" "ndShapeInstance *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndShapeInstance_m_scaleType_set" "', argument " "2"" of type '" "ndShapeInstance::ndScaleType""'");
  } 
  arg2 = static_cast< ndShapeInstance::ndScaleType >(val2);
  if (arg1) (arg1)->m_scaleType = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_m_scaleType_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndShapeInstance::ndScaleType result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_m_scaleType_get" "', argument " "1"" of type '" "ndShapeInstance *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  result = (ndShapeInstance::ndScaleType) ((arg1)->m_scaleType);
  resultobj = SWIG_From_int(static_cast< int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_m_collisionMode_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndShapeInstance_m_collisionMode_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_m_collisionMode_set" "', argument " "1"" of type '" "ndShapeInstance *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndShapeInstance_m_collisionMode_set" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  if (arg1) (arg1)->m_collisionMode = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndShapeInstance_m_collisionMode_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndShapeInstance *arg1 = (ndShapeInstance *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndShapeInstance_m_collisionMode_get" "', argument " "1"" of type '" "ndShapeInstance *""'"); 
  }
  arg1 = reinterpret_cast< ndShapeInstance * >(argp1);
  result = (bool) ((arg1)->m_collisionMode);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ndShapeInstance_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ndShapeInstance, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ndShapeInstance_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_delete_ndBody(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBody *arg1 = (ndBody *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBody, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ndBody" "', argument " "1"" of type '" "ndBody *""'"); 
  }
  arg1 = reinterpret_cast< ndBody * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBody_GetAsBody(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBody *arg1 = (ndBody *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndBody *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBody, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBody_GetAsBody" "', argument " "1"" of type '" "ndBody *""'"); 
  }
  arg1 = reinterpret_cast< ndBody * >(argp1);
  result = (ndBody *)(arg1)->GetAsBody();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndBody, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBody_GetAsBodyDynamic(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBody *arg1 = (ndBody *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndBodyDynamic *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBody, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBody_GetAsBodyDynamic" "', argument " "1"" of type '" "ndBody *""'"); 
  }
  arg1 = reinterpret_cast< ndBody * >(argp1);
  result = (ndBodyDynamic *)(arg1)->GetAsBodyDynamic();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndBodyDynamic, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBody_GetAsBodySentinel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBody *arg1 = (ndBody *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndBodySentinel *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBody, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBody_GetAsBodySentinel" "', argument " "1"" of type '" "ndBody *""'"); 
  }
  arg1 = reinterpret_cast< ndBody * >(argp1);
  result = (ndBodySentinel *)(arg1)->GetAsBodySentinel();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndBodySentinel, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBody_GetAsBodyKinematic(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBody *arg1 = (ndBody *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndBodyKinematic *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBody, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBody_GetAsBodyKinematic" "', argument " "1"" of type '" "ndBody *""'"); 
  }
  arg1 = reinterpret_cast< ndBody * >(argp1);
  result = (ndBodyKinematic *)(arg1)->GetAsBodyKinematic();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBody_GetAsBodyPlayerCapsule(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBody *arg1 = (ndBody *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndBodyKinematic *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBody, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBody_GetAsBodyPlayerCapsule" "', argument " "1"" of type '" "ndBody *""'"); 
  }
  arg1 = reinterpret_cast< ndBody * >(argp1);
  result = (ndBodyKinematic *)(arg1)->GetAsBodyPlayerCapsule();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBody_GetAsBodySphFluid(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBody *arg1 = (ndBody *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndBodySphFluid *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBody, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBody_GetAsBodySphFluid" "', argument " "1"" of type '" "ndBody *""'"); 
  }
  arg1 = reinterpret_cast< ndBody * >(argp1);
  result = (ndBodySphFluid *)(arg1)->GetAsBodySphFluid();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndBodySphFluid, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBody_GetAsBodyParticleSet(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBody *arg1 = (ndBody *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndBodyParticleSet *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBody, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBody_GetAsBodyParticleSet" "', argument " "1"" of type '" "ndBody *""'"); 
  }
  arg1 = reinterpret_cast< ndBody * >(argp1);
  result = (ndBodyParticleSet *)(arg1)->GetAsBodyParticleSet();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndBodyParticleSet, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBody_GetAsBodyTriggerVolume(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBody *arg1 = (ndBody *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndBodyTriggerVolume *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBody, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBody_GetAsBodyTriggerVolume" "', argument " "1"" of type '" "ndBody *""'"); 
  }
  arg1 = reinterpret_cast< ndBody * >(argp1);
  result = (ndBodyTriggerVolume *)(arg1)->GetAsBodyTriggerVolume();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndBodyTriggerVolume, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBody_GetId(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBody *arg1 = (ndBody *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBody, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBody_GetId" "', argument " "1"" of type '" "ndBody const *""'"); 
  }
  arg1 = reinterpret_cast< ndBody * >(argp1);
  result = (unsigned int)((ndBody const *)arg1)->GetId();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBody_GetAABB(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBody *arg1 = (ndBody *) 0 ;
  dVector *arg2 = 0 ;
  dVector *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndBody_GetAABB", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBody, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBody_GetAABB" "', argument " "1"" of type '" "ndBody const *""'"); 
  }
  arg1 = reinterpret_cast< ndBody * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndBody_GetAABB" "', argument " "2"" of type '" "dVector &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndBody_GetAABB" "', argument " "2"" of type '" "dVector &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_dVector,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ndBody_GetAABB" "', argument " "3"" of type '" "dVector &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndBody_GetAABB" "', argument " "3"" of type '" "dVector &""'"); 
  }
  arg3 = reinterpret_cast< dVector * >(argp3);
  ((ndBody const *)arg1)->GetAABB(*arg2,*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBody_GetInvMass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBody *arg1 = (ndBody *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBody, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBody_GetInvMass" "', argument " "1"" of type '" "ndBody const *""'"); 
  }
  arg1 = reinterpret_cast< ndBody * >(argp1);
  result = (float)((ndBody const *)arg1)->GetInvMass();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBody_RayCast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBody *arg1 = (ndBody *) 0 ;
  ndRayCastNotify *arg2 = 0 ;
  dFastRay *arg3 = 0 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject *swig_obj[4] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "ndBody_RayCast", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBody, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBody_RayCast" "', argument " "1"" of type '" "ndBody const *""'"); 
  }
  arg1 = reinterpret_cast< ndBody * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_ndRayCastNotify,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndBody_RayCast" "', argument " "2"" of type '" "ndRayCastNotify &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndBody_RayCast" "', argument " "2"" of type '" "ndRayCastNotify &""'"); 
  }
  arg2 = reinterpret_cast< ndRayCastNotify * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_dFastRay,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ndBody_RayCast" "', argument " "3"" of type '" "dFastRay const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndBody_RayCast" "', argument " "3"" of type '" "dFastRay const &""'"); 
  }
  arg3 = reinterpret_cast< dFastRay * >(argp3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ndBody_RayCast" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  result = (bool)((ndBody const *)arg1)->RayCast(*arg2,(dFastRay const &)*arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBody_GetCentreOfMass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBody *arg1 = (ndBody *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dVector *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBody, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBody_GetCentreOfMass" "', argument " "1"" of type '" "ndBody const *""'"); 
  }
  arg1 = reinterpret_cast< ndBody * >(argp1);
  result = (dVector *) &((ndBody const *)arg1)->GetCentreOfMass();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dVector, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBody_SetCentreOfMass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBody *arg1 = (ndBody *) 0 ;
  dVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndBody_SetCentreOfMass", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBody, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBody_SetCentreOfMass" "', argument " "1"" of type '" "ndBody *""'"); 
  }
  arg1 = reinterpret_cast< ndBody * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndBody_SetCentreOfMass" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndBody_SetCentreOfMass" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  (arg1)->SetCentreOfMass((dVector const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBody_GetNotifyCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBody *arg1 = (ndBody *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndBodyNotify *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBody, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBody_GetNotifyCallback" "', argument " "1"" of type '" "ndBody const *""'"); 
  }
  arg1 = reinterpret_cast< ndBody * >(argp1);
  result = (ndBodyNotify *)((ndBody const *)arg1)->GetNotifyCallback();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndBodyNotify, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBody_SetNotifyCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBody *arg1 = (ndBody *) 0 ;
  ndBodyNotify *arg2 = (ndBodyNotify *) (ndBodyNotify *)0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndBody_SetNotifyCallback", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBody, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBody_SetNotifyCallback" "', argument " "1"" of type '" "ndBody *""'"); 
  }
  arg1 = reinterpret_cast< ndBody * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_ndBodyNotify, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndBody_SetNotifyCallback" "', argument " "2"" of type '" "ndBodyNotify *const""'"); 
  }
  arg2 = reinterpret_cast< ndBodyNotify * >(argp2);
  (arg1)->SetNotifyCallback(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBody_GetOmega(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBody *arg1 = (ndBody *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dVector result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBody, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBody_GetOmega" "', argument " "1"" of type '" "ndBody const *""'"); 
  }
  arg1 = reinterpret_cast< ndBody * >(argp1);
  result = ((ndBody const *)arg1)->GetOmega();
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBody_SetOmega(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBody *arg1 = (ndBody *) 0 ;
  dVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndBody_SetOmega", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBody, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBody_SetOmega" "', argument " "1"" of type '" "ndBody *""'"); 
  }
  arg1 = reinterpret_cast< ndBody * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndBody_SetOmega" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndBody_SetOmega" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  (arg1)->SetOmega((dVector const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBody_GetVelocity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBody *arg1 = (ndBody *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dVector result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBody, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBody_GetVelocity" "', argument " "1"" of type '" "ndBody const *""'"); 
  }
  arg1 = reinterpret_cast< ndBody * >(argp1);
  result = ((ndBody const *)arg1)->GetVelocity();
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBody_SetVelocity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBody *arg1 = (ndBody *) 0 ;
  dVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndBody_SetVelocity", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBody, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBody_SetVelocity" "', argument " "1"" of type '" "ndBody *""'"); 
  }
  arg1 = reinterpret_cast< ndBody * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndBody_SetVelocity" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndBody_SetVelocity" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  (arg1)->SetVelocity((dVector const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBody_GetMatrix(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBody *arg1 = (ndBody *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dMatrix result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBody, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBody_GetMatrix" "', argument " "1"" of type '" "ndBody const *""'"); 
  }
  arg1 = reinterpret_cast< ndBody * >(argp1);
  result = ((ndBody const *)arg1)->GetMatrix();
  resultobj = SWIG_NewPointerObj((new dMatrix(static_cast< const dMatrix& >(result))), SWIGTYPE_p_dMatrix, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBody_SetMatrix(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBody *arg1 = (ndBody *) 0 ;
  dMatrix *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndBody_SetMatrix", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBody, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBody_SetMatrix" "', argument " "1"" of type '" "ndBody *""'"); 
  }
  arg1 = reinterpret_cast< ndBody * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dMatrix,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndBody_SetMatrix" "', argument " "2"" of type '" "dMatrix const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndBody_SetMatrix" "', argument " "2"" of type '" "dMatrix const &""'"); 
  }
  arg2 = reinterpret_cast< dMatrix * >(argp2);
  (arg1)->SetMatrix((dMatrix const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBody_GetRotation(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBody *arg1 = (ndBody *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dQuaternion result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBody, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBody_GetRotation" "', argument " "1"" of type '" "ndBody const *""'"); 
  }
  arg1 = reinterpret_cast< ndBody * >(argp1);
  result = ((ndBody const *)arg1)->GetRotation();
  resultobj = SWIG_NewPointerObj((new dQuaternion(static_cast< const dQuaternion& >(result))), SWIGTYPE_p_dQuaternion, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBody_Save(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBody *arg1 = (ndBody *) 0 ;
  dLoadSaveBase::dSaveDescriptor *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndBody_Save", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBody, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBody_Save" "', argument " "1"" of type '" "ndBody const *""'"); 
  }
  arg1 = reinterpret_cast< ndBody * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dLoadSaveBase__dSaveDescriptor,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndBody_Save" "', argument " "2"" of type '" "dLoadSaveBase::dSaveDescriptor const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndBody_Save" "', argument " "2"" of type '" "dLoadSaveBase::dSaveDescriptor const &""'"); 
  }
  arg2 = reinterpret_cast< dLoadSaveBase::dSaveDescriptor * >(argp2);
  ((ndBody const *)arg1)->Save((dLoadSaveBase::dSaveDescriptor const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBody_GetVelocityAtPoint(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBody *arg1 = (ndBody *) 0 ;
  dVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  dVector result;
  
  if (!SWIG_Python_UnpackTuple(args, "ndBody_GetVelocityAtPoint", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBody, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBody_GetVelocityAtPoint" "', argument " "1"" of type '" "ndBody const *""'"); 
  }
  arg1 = reinterpret_cast< ndBody * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndBody_GetVelocityAtPoint" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndBody_GetVelocityAtPoint" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  result = ((ndBody const *)arg1)->GetVelocityAtPoint((dVector const &)*arg2);
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ndBody_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ndBody, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ndBodyKinematic__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  ndBodyKinematic *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (ndBodyKinematic *)new ndBodyKinematic();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndBodyKinematic, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ndBodyKinematic__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dLoadSaveBase::dLoadDescriptor *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ndBodyKinematic *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_dLoadSaveBase__dLoadDescriptor,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ndBodyKinematic" "', argument " "1"" of type '" "dLoadSaveBase::dLoadDescriptor const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ndBodyKinematic" "', argument " "1"" of type '" "dLoadSaveBase::dLoadDescriptor const &""'"); 
  }
  arg1 = reinterpret_cast< dLoadSaveBase::dLoadDescriptor * >(argp1);
  result = (ndBodyKinematic *)new ndBodyKinematic((dLoadSaveBase::dLoadDescriptor const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndBodyKinematic, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ndBodyKinematic(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_ndBodyKinematic", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_ndBodyKinematic__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_dLoadSaveBase__dLoadDescriptor, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_ndBodyKinematic__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_ndBodyKinematic'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ndBodyKinematic::ndBodyKinematic()\n"
    "    ndBodyKinematic::ndBodyKinematic(dLoadSaveBase::dLoadDescriptor const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_ndBodyKinematic(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyKinematic *arg1 = (ndBodyKinematic *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyKinematic, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ndBodyKinematic" "', argument " "1"" of type '" "ndBodyKinematic *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyKinematic * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_GetScene(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyKinematic *arg1 = (ndBodyKinematic *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndScene *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyKinematic_GetScene" "', argument " "1"" of type '" "ndBodyKinematic const *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyKinematic * >(argp1);
  result = (ndScene *)((ndBodyKinematic const *)arg1)->GetScene();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndScene, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_GetIndex(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyKinematic *arg1 = (ndBodyKinematic *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyKinematic_GetIndex" "', argument " "1"" of type '" "ndBodyKinematic const *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyKinematic * >(argp1);
  result = (unsigned int)((ndBodyKinematic const *)arg1)->GetIndex();
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_GetInvMass(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyKinematic *arg1 = (ndBodyKinematic *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyKinematic_GetInvMass" "', argument " "1"" of type '" "ndBodyKinematic const *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyKinematic * >(argp1);
  result = (float)((ndBodyKinematic const *)arg1)->GetInvMass();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_GetInvInertia(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyKinematic *arg1 = (ndBodyKinematic *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dVector result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyKinematic_GetInvInertia" "', argument " "1"" of type '" "ndBodyKinematic const *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyKinematic * >(argp1);
  result = ((ndBodyKinematic const *)arg1)->GetInvInertia();
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_GetMassMatrix__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  ndBodyKinematic *arg1 = (ndBodyKinematic *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  dVector *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyKinematic_GetMassMatrix" "', argument " "1"" of type '" "ndBodyKinematic const *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyKinematic * >(argp1);
  result = (dVector *) &((ndBodyKinematic const *)arg1)->GetMassMatrix();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dVector, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_GetInvInertiaMatrix(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyKinematic *arg1 = (ndBodyKinematic *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dMatrix *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyKinematic_GetInvInertiaMatrix" "', argument " "1"" of type '" "ndBodyKinematic const *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyKinematic * >(argp1);
  result = (dMatrix *) &((ndBodyKinematic const *)arg1)->GetInvInertiaMatrix();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dMatrix, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_SetMassMatrix__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  ndBodyKinematic *arg1 = (ndBodyKinematic *) 0 ;
  dVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  
  if ((nobjs < 2) || (nobjs > 2)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyKinematic_SetMassMatrix" "', argument " "1"" of type '" "ndBodyKinematic *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyKinematic * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndBodyKinematic_SetMassMatrix" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndBodyKinematic_SetMassMatrix" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  (arg1)->SetMassMatrix((dVector const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_GetGyroAlpha(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyKinematic *arg1 = (ndBodyKinematic *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dVector result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyKinematic_GetGyroAlpha" "', argument " "1"" of type '" "ndBodyKinematic const *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyKinematic * >(argp1);
  result = ((ndBodyKinematic const *)arg1)->GetGyroAlpha();
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_GetSleepState(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyKinematic *arg1 = (ndBodyKinematic *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyKinematic_GetSleepState" "', argument " "1"" of type '" "ndBodyKinematic const *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyKinematic * >(argp1);
  result = (bool)((ndBodyKinematic const *)arg1)->GetSleepState();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_RestoreSleepState(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyKinematic *arg1 = (ndBodyKinematic *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndBodyKinematic_RestoreSleepState", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyKinematic_RestoreSleepState" "', argument " "1"" of type '" "ndBodyKinematic *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyKinematic * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndBodyKinematic_RestoreSleepState" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->RestoreSleepState(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_SetSleepState(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyKinematic *arg1 = (ndBodyKinematic *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndBodyKinematic_SetSleepState", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyKinematic_SetSleepState" "', argument " "1"" of type '" "ndBodyKinematic *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyKinematic * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndBodyKinematic_SetSleepState" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->SetSleepState(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_GetAutoSleep(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyKinematic *arg1 = (ndBodyKinematic *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyKinematic_GetAutoSleep" "', argument " "1"" of type '" "ndBodyKinematic const *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyKinematic * >(argp1);
  result = (bool)((ndBodyKinematic const *)arg1)->GetAutoSleep();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_SetAutoSleep(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyKinematic *arg1 = (ndBodyKinematic *) 0 ;
  bool arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  bool val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndBodyKinematic_SetAutoSleep", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyKinematic_SetAutoSleep" "', argument " "1"" of type '" "ndBodyKinematic *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyKinematic * >(argp1);
  ecode2 = SWIG_AsVal_bool(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndBodyKinematic_SetAutoSleep" "', argument " "2"" of type '" "bool""'");
  } 
  arg2 = static_cast< bool >(val2);
  (arg1)->SetAutoSleep(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_SetDebugMaxAngularIntegrationSteepAndLinearSpeed(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyKinematic *arg1 = (ndBodyKinematic *) 0 ;
  float arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndBodyKinematic_SetDebugMaxAngularIntegrationSteepAndLinearSpeed", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyKinematic_SetDebugMaxAngularIntegrationSteepAndLinearSpeed" "', argument " "1"" of type '" "ndBodyKinematic *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyKinematic * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndBodyKinematic_SetDebugMaxAngularIntegrationSteepAndLinearSpeed" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ndBodyKinematic_SetDebugMaxAngularIntegrationSteepAndLinearSpeed" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  (arg1)->SetDebugMaxAngularIntegrationSteepAndLinearSpeed(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_GetLinearDamping(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyKinematic *arg1 = (ndBodyKinematic *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyKinematic_GetLinearDamping" "', argument " "1"" of type '" "ndBodyKinematic const *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyKinematic * >(argp1);
  result = (float)((ndBodyKinematic const *)arg1)->GetLinearDamping();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_SetLinearDamping(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyKinematic *arg1 = (ndBodyKinematic *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndBodyKinematic_SetLinearDamping", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyKinematic_SetLinearDamping" "', argument " "1"" of type '" "ndBodyKinematic *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyKinematic * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndBodyKinematic_SetLinearDamping" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->SetLinearDamping(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_GetAngularDamping(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyKinematic *arg1 = (ndBodyKinematic *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dVector result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyKinematic_GetAngularDamping" "', argument " "1"" of type '" "ndBodyKinematic const *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyKinematic * >(argp1);
  result = ((ndBodyKinematic const *)arg1)->GetAngularDamping();
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_SetAngularDamping(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyKinematic *arg1 = (ndBodyKinematic *) 0 ;
  dVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndBodyKinematic_SetAngularDamping", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyKinematic_SetAngularDamping" "', argument " "1"" of type '" "ndBodyKinematic *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyKinematic * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndBodyKinematic_SetAngularDamping" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndBodyKinematic_SetAngularDamping" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  (arg1)->SetAngularDamping((dVector const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_GetCollisionShape__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  ndBodyKinematic *arg1 = (ndBodyKinematic *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ndShapeInstance *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyKinematic_GetCollisionShape" "', argument " "1"" of type '" "ndBodyKinematic *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyKinematic * >(argp1);
  result = (ndShapeInstance *) &(arg1)->GetCollisionShape();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_GetCollisionShape__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  ndBodyKinematic *arg1 = (ndBodyKinematic *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ndShapeInstance *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyKinematic_GetCollisionShape" "', argument " "1"" of type '" "ndBodyKinematic const *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyKinematic * >(argp1);
  result = (ndShapeInstance *) &((ndBodyKinematic const *)arg1)->GetCollisionShape();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_GetCollisionShape(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "ndBodyKinematic_GetCollisionShape", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ndBodyKinematic, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_ndBodyKinematic_GetCollisionShape__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ndBodyKinematic, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_ndBodyKinematic_GetCollisionShape__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'ndBodyKinematic_GetCollisionShape'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ndBodyKinematic::GetCollisionShape()\n"
    "    ndBodyKinematic::GetCollisionShape() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_SetCollisionShape(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyKinematic *arg1 = (ndBodyKinematic *) 0 ;
  ndShapeInstance *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndBodyKinematic_SetCollisionShape", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyKinematic_SetCollisionShape" "', argument " "1"" of type '" "ndBodyKinematic *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyKinematic * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_ndShapeInstance,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndBodyKinematic_SetCollisionShape" "', argument " "2"" of type '" "ndShapeInstance const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndBodyKinematic_SetCollisionShape" "', argument " "2"" of type '" "ndShapeInstance const &""'"); 
  }
  arg2 = reinterpret_cast< ndShapeInstance * >(argp2);
  (arg1)->SetCollisionShape((ndShapeInstance const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_RayCast(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyKinematic *arg1 = (ndBodyKinematic *) 0 ;
  ndRayCastNotify *arg2 = 0 ;
  dFastRay *arg3 = 0 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject *swig_obj[4] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "ndBodyKinematic_RayCast", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyKinematic_RayCast" "', argument " "1"" of type '" "ndBodyKinematic const *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyKinematic * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_ndRayCastNotify,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndBodyKinematic_RayCast" "', argument " "2"" of type '" "ndRayCastNotify &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndBodyKinematic_RayCast" "', argument " "2"" of type '" "ndRayCastNotify &""'"); 
  }
  arg2 = reinterpret_cast< ndRayCastNotify * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_dFastRay,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ndBodyKinematic_RayCast" "', argument " "3"" of type '" "dFastRay const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndBodyKinematic_RayCast" "', argument " "3"" of type '" "dFastRay const &""'"); 
  }
  arg3 = reinterpret_cast< dFastRay * >(argp3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ndBodyKinematic_RayCast" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  result = (bool)((ndBodyKinematic const *)arg1)->RayCast(*arg2,(dFastRay const &)*arg3,arg4);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_CalculateLinearMomentum(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyKinematic *arg1 = (ndBodyKinematic *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dVector result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyKinematic_CalculateLinearMomentum" "', argument " "1"" of type '" "ndBodyKinematic const *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyKinematic * >(argp1);
  result = ((ndBodyKinematic const *)arg1)->CalculateLinearMomentum();
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_CalculateAngularMomentum(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyKinematic *arg1 = (ndBodyKinematic *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dVector result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyKinematic_CalculateAngularMomentum" "', argument " "1"" of type '" "ndBodyKinematic const *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyKinematic * >(argp1);
  result = ((ndBodyKinematic const *)arg1)->CalculateAngularMomentum();
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_TotalEnergy(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyKinematic *arg1 = (ndBodyKinematic *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyKinematic_TotalEnergy" "', argument " "1"" of type '" "ndBodyKinematic const *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyKinematic * >(argp1);
  result = (float)((ndBodyKinematic const *)arg1)->TotalEnergy();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_CalculateInertiaMatrix(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyKinematic *arg1 = (ndBodyKinematic *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dMatrix result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyKinematic_CalculateInertiaMatrix" "', argument " "1"" of type '" "ndBodyKinematic const *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyKinematic * >(argp1);
  result = ((ndBodyKinematic const *)arg1)->CalculateInertiaMatrix();
  resultobj = SWIG_NewPointerObj((new dMatrix(static_cast< const dMatrix& >(result))), SWIGTYPE_p_dMatrix, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_CalculateInvInertiaMatrix(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyKinematic *arg1 = (ndBodyKinematic *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dMatrix result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyKinematic_CalculateInvInertiaMatrix" "', argument " "1"" of type '" "ndBodyKinematic const *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyKinematic * >(argp1);
  result = ((ndBodyKinematic const *)arg1)->CalculateInvInertiaMatrix();
  resultobj = SWIG_NewPointerObj((new dMatrix(static_cast< const dMatrix& >(result))), SWIGTYPE_p_dMatrix, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_UpdateInvInertiaMatrix(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyKinematic *arg1 = (ndBodyKinematic *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyKinematic_UpdateInvInertiaMatrix" "', argument " "1"" of type '" "ndBodyKinematic *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyKinematic * >(argp1);
  (arg1)->UpdateInvInertiaMatrix();
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_IntegrateVelocity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyKinematic *arg1 = (ndBodyKinematic *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndBodyKinematic_IntegrateVelocity", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyKinematic_IntegrateVelocity" "', argument " "1"" of type '" "ndBodyKinematic *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyKinematic * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndBodyKinematic_IntegrateVelocity" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->IntegrateVelocity(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_Save(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyKinematic *arg1 = (ndBodyKinematic *) 0 ;
  dLoadSaveBase::dSaveDescriptor *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndBodyKinematic_Save", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyKinematic_Save" "', argument " "1"" of type '" "ndBodyKinematic const *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyKinematic * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dLoadSaveBase__dSaveDescriptor,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndBodyKinematic_Save" "', argument " "2"" of type '" "dLoadSaveBase::dSaveDescriptor const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndBodyKinematic_Save" "', argument " "2"" of type '" "dLoadSaveBase::dSaveDescriptor const &""'"); 
  }
  arg2 = reinterpret_cast< dLoadSaveBase::dSaveDescriptor * >(argp2);
  ((ndBodyKinematic const *)arg1)->Save((dLoadSaveBase::dSaveDescriptor const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_SetMassMatrix__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  ndBodyKinematic *arg1 = (ndBodyKinematic *) 0 ;
  float arg2 ;
  ndShapeInstance *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  
  if ((nobjs < 3) || (nobjs > 3)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyKinematic_SetMassMatrix" "', argument " "1"" of type '" "ndBodyKinematic *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyKinematic * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndBodyKinematic_SetMassMatrix" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_ndShapeInstance,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ndBodyKinematic_SetMassMatrix" "', argument " "3"" of type '" "ndShapeInstance const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndBodyKinematic_SetMassMatrix" "', argument " "3"" of type '" "ndShapeInstance const &""'"); 
  }
  arg3 = reinterpret_cast< ndShapeInstance * >(argp3);
  (arg1)->SetMassMatrix(arg2,(ndShapeInstance const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_SetMassMatrix__SWIG_2(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  ndBodyKinematic *arg1 = (ndBodyKinematic *) 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyKinematic_SetMassMatrix" "', argument " "1"" of type '" "ndBodyKinematic *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyKinematic * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndBodyKinematic_SetMassMatrix" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ndBodyKinematic_SetMassMatrix" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ndBodyKinematic_SetMassMatrix" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "ndBodyKinematic_SetMassMatrix" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  (arg1)->SetMassMatrix(arg2,arg3,arg4,arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_SetMassMatrix(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "ndBodyKinematic_SetMassMatrix", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 2) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ndBodyKinematic, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      int res = SWIG_ConvertPtr(argv[1], 0, SWIGTYPE_p_dVector, SWIG_POINTER_NO_NULL | 0);
      _v = SWIG_CheckState(res);
      if (_v) {
        return _wrap_ndBodyKinematic_SetMassMatrix__SWIG_0(self, argc, argv);
      }
    }
  }
  if (argc == 3) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ndBodyKinematic, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        int res = SWIG_ConvertPtr(argv[2], 0, SWIGTYPE_p_ndShapeInstance, SWIG_POINTER_NO_NULL | 0);
        _v = SWIG_CheckState(res);
        if (_v) {
          return _wrap_ndBodyKinematic_SetMassMatrix__SWIG_1(self, argc, argv);
        }
      }
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ndBodyKinematic, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_ndBodyKinematic_SetMassMatrix__SWIG_2(self, argc, argv);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'ndBodyKinematic_SetMassMatrix'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ndBodyKinematic::SetMassMatrix(dVector const &)\n"
    "    ndBodyKinematic::SetMassMatrix(float,ndShapeInstance const &)\n"
    "    ndBodyKinematic::SetMassMatrix(float,float,float,float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_GetMassMatrix__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  ndBodyKinematic *arg1 = (ndBodyKinematic *) 0 ;
  float *arg2 = 0 ;
  float *arg3 = 0 ;
  float *arg4 = 0 ;
  float *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyKinematic_GetMassMatrix" "', argument " "1"" of type '" "ndBodyKinematic *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyKinematic * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndBodyKinematic_GetMassMatrix" "', argument " "2"" of type '" "float &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndBodyKinematic_GetMassMatrix" "', argument " "2"" of type '" "float &""'"); 
  }
  arg2 = reinterpret_cast< float * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ndBodyKinematic_GetMassMatrix" "', argument " "3"" of type '" "float &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndBodyKinematic_GetMassMatrix" "', argument " "3"" of type '" "float &""'"); 
  }
  arg3 = reinterpret_cast< float * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ndBodyKinematic_GetMassMatrix" "', argument " "4"" of type '" "float &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndBodyKinematic_GetMassMatrix" "', argument " "4"" of type '" "float &""'"); 
  }
  arg4 = reinterpret_cast< float * >(argp4);
  res5 = SWIG_ConvertPtr(swig_obj[4], &argp5, SWIGTYPE_p_float,  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "ndBodyKinematic_GetMassMatrix" "', argument " "5"" of type '" "float &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndBodyKinematic_GetMassMatrix" "', argument " "5"" of type '" "float &""'"); 
  }
  arg5 = reinterpret_cast< float * >(argp5);
  (arg1)->GetMassMatrix(*arg2,*arg3,*arg4,*arg5);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_GetMassMatrix(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "ndBodyKinematic_GetMassMatrix", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ndBodyKinematic, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_ndBodyKinematic_GetMassMatrix__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 5) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ndBodyKinematic, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      void *vptr = 0;
      int res = SWIG_ConvertPtr(argv[1], &vptr, SWIGTYPE_p_float, SWIG_POINTER_NO_NULL);
      _v = SWIG_CheckState(res);
      if (_v) {
        void *vptr = 0;
        int res = SWIG_ConvertPtr(argv[2], &vptr, SWIGTYPE_p_float, SWIG_POINTER_NO_NULL);
        _v = SWIG_CheckState(res);
        if (_v) {
          void *vptr = 0;
          int res = SWIG_ConvertPtr(argv[3], &vptr, SWIGTYPE_p_float, SWIG_POINTER_NO_NULL);
          _v = SWIG_CheckState(res);
          if (_v) {
            void *vptr = 0;
            int res = SWIG_ConvertPtr(argv[4], &vptr, SWIGTYPE_p_float, SWIG_POINTER_NO_NULL);
            _v = SWIG_CheckState(res);
            if (_v) {
              return _wrap_ndBodyKinematic_GetMassMatrix__SWIG_1(self, argc, argv);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'ndBodyKinematic_GetMassMatrix'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ndBodyKinematic::GetMassMatrix() const\n"
    "    ndBodyKinematic::GetMassMatrix(float &,float &,float &,float &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_FindContact(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyKinematic *arg1 = (ndBodyKinematic *) 0 ;
  ndBody *arg2 = (ndBody *) (ndBody *)0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  ndContact *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndBodyKinematic_FindContact", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyKinematic_FindContact" "', argument " "1"" of type '" "ndBodyKinematic const *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyKinematic * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_ndBody, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndBodyKinematic_FindContact" "', argument " "2"" of type '" "ndBody const *const""'"); 
  }
  arg2 = reinterpret_cast< ndBody * >(argp2);
  result = (ndContact *)((ndBodyKinematic const *)arg1)->FindContact((ndBody const *)arg2);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndContact, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_GetAsBodyKinematic(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyKinematic *arg1 = (ndBodyKinematic *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndBodyKinematic *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyKinematic_GetAsBodyKinematic" "', argument " "1"" of type '" "ndBodyKinematic *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyKinematic * >(argp1);
  result = (ndBodyKinematic *)(arg1)->GetAsBodyKinematic();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_GetSkeleton(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyKinematic *arg1 = (ndBodyKinematic *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndSkeletonContainer *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyKinematic_GetSkeleton" "', argument " "1"" of type '" "ndBodyKinematic const *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyKinematic * >(argp1);
  result = (ndSkeletonContainer *)((ndBodyKinematic const *)arg1)->GetSkeleton();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndSkeletonContainer, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_SetSkeleton(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyKinematic *arg1 = (ndBodyKinematic *) 0 ;
  ndSkeletonContainer *arg2 = (ndSkeletonContainer *) (ndSkeletonContainer *)0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndBodyKinematic_SetSkeleton", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyKinematic_SetSkeleton" "', argument " "1"" of type '" "ndBodyKinematic *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyKinematic * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_ndSkeletonContainer, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndBodyKinematic_SetSkeleton" "', argument " "2"" of type '" "ndSkeletonContainer *const""'"); 
  }
  arg2 = reinterpret_cast< ndSkeletonContainer * >(argp2);
  (arg1)->SetSkeleton(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_GetForce(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyKinematic *arg1 = (ndBodyKinematic *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dVector result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyKinematic_GetForce" "', argument " "1"" of type '" "ndBodyKinematic const *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyKinematic * >(argp1);
  result = ((ndBodyKinematic const *)arg1)->GetForce();
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_GetTorque(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyKinematic *arg1 = (ndBodyKinematic *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dVector result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyKinematic_GetTorque" "', argument " "1"" of type '" "ndBodyKinematic const *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyKinematic * >(argp1);
  result = ((ndBodyKinematic const *)arg1)->GetTorque();
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_SetForce(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyKinematic *arg1 = (ndBodyKinematic *) 0 ;
  dVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndBodyKinematic_SetForce", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyKinematic_SetForce" "', argument " "1"" of type '" "ndBodyKinematic *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyKinematic * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndBodyKinematic_SetForce" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndBodyKinematic_SetForce" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  (arg1)->SetForce((dVector const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_SetTorque(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyKinematic *arg1 = (ndBodyKinematic *) 0 ;
  dVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndBodyKinematic_SetTorque", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyKinematic_SetTorque" "', argument " "1"" of type '" "ndBodyKinematic *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyKinematic * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndBodyKinematic_SetTorque" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndBodyKinematic_SetTorque" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  (arg1)->SetTorque((dVector const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_SetAccel(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyKinematic *arg1 = (ndBodyKinematic *) 0 ;
  dVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndBodyKinematic_SetAccel", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyKinematic_SetAccel" "', argument " "1"" of type '" "ndBodyKinematic *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyKinematic * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndBodyKinematic_SetAccel" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndBodyKinematic_SetAccel" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  (arg1)->SetAccel((dVector const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_SetAlpha(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyKinematic *arg1 = (ndBodyKinematic *) 0 ;
  dVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndBodyKinematic_SetAlpha", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyKinematic_SetAlpha" "', argument " "1"" of type '" "ndBodyKinematic *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyKinematic * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndBodyKinematic_SetAlpha" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndBodyKinematic_SetAlpha" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  (arg1)->SetAlpha((dVector const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_GetContactMap__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  ndBodyKinematic *arg1 = (ndBodyKinematic *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ndBodyKinematic::ndContactMap *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyKinematic_GetContactMap" "', argument " "1"" of type '" "ndBodyKinematic *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyKinematic * >(argp1);
  result = (ndBodyKinematic::ndContactMap *) &(arg1)->GetContactMap();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndBodyKinematic__ndContactMap, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_GetJointList(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyKinematic *arg1 = (ndBodyKinematic *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndJointList *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyKinematic_GetJointList" "', argument " "1"" of type '" "ndBodyKinematic const *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyKinematic * >(argp1);
  result = (ndJointList *) &((ndBodyKinematic const *)arg1)->GetJointList();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndJointList, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_GetContactMap__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  ndBodyKinematic *arg1 = (ndBodyKinematic *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ndBodyKinematic::ndContactMap *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyKinematic_GetContactMap" "', argument " "1"" of type '" "ndBodyKinematic const *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyKinematic * >(argp1);
  result = (ndBodyKinematic::ndContactMap *) &((ndBodyKinematic const *)arg1)->GetContactMap();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndBodyKinematic__ndContactMap, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyKinematic_GetContactMap(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "ndBodyKinematic_GetContactMap", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ndBodyKinematic, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_ndBodyKinematic_GetContactMap__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ndBodyKinematic, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_ndBodyKinematic_GetContactMap__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'ndBodyKinematic_GetContactMap'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ndBodyKinematic::GetContactMap()\n"
    "    ndBodyKinematic::GetContactMap() const\n");
  return 0;
}


SWIGINTERN PyObject *ndBodyKinematic_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ndBodyKinematic, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ndBodyKinematic_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_ndBodyTriggerVolume__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **SWIGUNUSEDPARM(swig_obj)) {
  PyObject *resultobj = 0;
  ndBodyTriggerVolume *result = 0 ;
  
  if ((nobjs < 0) || (nobjs > 0)) SWIG_fail;
  result = (ndBodyTriggerVolume *)new ndBodyTriggerVolume();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndBodyTriggerVolume, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ndBodyTriggerVolume__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dLoadSaveBase::dLoadDescriptor *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ndBodyTriggerVolume *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_dLoadSaveBase__dLoadDescriptor,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ndBodyTriggerVolume" "', argument " "1"" of type '" "dLoadSaveBase::dLoadDescriptor const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ndBodyTriggerVolume" "', argument " "1"" of type '" "dLoadSaveBase::dLoadDescriptor const &""'"); 
  }
  arg1 = reinterpret_cast< dLoadSaveBase::dLoadDescriptor * >(argp1);
  result = (ndBodyTriggerVolume *)new ndBodyTriggerVolume((dLoadSaveBase::dLoadDescriptor const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndBodyTriggerVolume, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ndBodyTriggerVolume(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_ndBodyTriggerVolume", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 0) {
    return _wrap_new_ndBodyTriggerVolume__SWIG_0(self, argc, argv);
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_dLoadSaveBase__dLoadDescriptor, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_ndBodyTriggerVolume__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_ndBodyTriggerVolume'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ndBodyTriggerVolume::ndBodyTriggerVolume()\n"
    "    ndBodyTriggerVolume::ndBodyTriggerVolume(dLoadSaveBase::dLoadDescriptor const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_ndBodyTriggerVolume(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyTriggerVolume *arg1 = (ndBodyTriggerVolume *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyTriggerVolume, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ndBodyTriggerVolume" "', argument " "1"" of type '" "ndBodyTriggerVolume *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyTriggerVolume * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyTriggerVolume_GetAsBodyTriggerVolume(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyTriggerVolume *arg1 = (ndBodyTriggerVolume *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndBodyTriggerVolume *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyTriggerVolume, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyTriggerVolume_GetAsBodyTriggerVolume" "', argument " "1"" of type '" "ndBodyTriggerVolume *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyTriggerVolume * >(argp1);
  result = (ndBodyTriggerVolume *)(arg1)->GetAsBodyTriggerVolume();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndBodyTriggerVolume, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyTriggerVolume_OnTrigger(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyTriggerVolume *arg1 = (ndBodyTriggerVolume *) 0 ;
  ndBodyKinematic *arg2 = (ndBodyKinematic *) (ndBodyKinematic *)0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndBodyTriggerVolume_OnTrigger", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyTriggerVolume, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyTriggerVolume_OnTrigger" "', argument " "1"" of type '" "ndBodyTriggerVolume *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyTriggerVolume * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndBodyTriggerVolume_OnTrigger" "', argument " "2"" of type '" "ndBodyKinematic *const""'"); 
  }
  arg2 = reinterpret_cast< ndBodyKinematic * >(argp2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ndBodyTriggerVolume_OnTrigger" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  (arg1)->OnTrigger(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyTriggerVolume_OnTriggerEnter(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyTriggerVolume *arg1 = (ndBodyTriggerVolume *) 0 ;
  ndBodyKinematic *arg2 = (ndBodyKinematic *) (ndBodyKinematic *)0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndBodyTriggerVolume_OnTriggerEnter", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyTriggerVolume, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyTriggerVolume_OnTriggerEnter" "', argument " "1"" of type '" "ndBodyTriggerVolume *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyTriggerVolume * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndBodyTriggerVolume_OnTriggerEnter" "', argument " "2"" of type '" "ndBodyKinematic *const""'"); 
  }
  arg2 = reinterpret_cast< ndBodyKinematic * >(argp2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ndBodyTriggerVolume_OnTriggerEnter" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  (arg1)->OnTriggerEnter(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyTriggerVolume_OnTriggerExit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyTriggerVolume *arg1 = (ndBodyTriggerVolume *) 0 ;
  ndBodyKinematic *arg2 = (ndBodyKinematic *) (ndBodyKinematic *)0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndBodyTriggerVolume_OnTriggerExit", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyTriggerVolume, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyTriggerVolume_OnTriggerExit" "', argument " "1"" of type '" "ndBodyTriggerVolume *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyTriggerVolume * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndBodyTriggerVolume_OnTriggerExit" "', argument " "2"" of type '" "ndBodyKinematic *const""'"); 
  }
  arg2 = reinterpret_cast< ndBodyKinematic * >(argp2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ndBodyTriggerVolume_OnTriggerExit" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  (arg1)->OnTriggerExit(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyTriggerVolume_Save(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyTriggerVolume *arg1 = (ndBodyTriggerVolume *) 0 ;
  dLoadSaveBase::dSaveDescriptor *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndBodyTriggerVolume_Save", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyTriggerVolume, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyTriggerVolume_Save" "', argument " "1"" of type '" "ndBodyTriggerVolume const *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyTriggerVolume * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dLoadSaveBase__dSaveDescriptor,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndBodyTriggerVolume_Save" "', argument " "2"" of type '" "dLoadSaveBase::dSaveDescriptor const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndBodyTriggerVolume_Save" "', argument " "2"" of type '" "dLoadSaveBase::dSaveDescriptor const &""'"); 
  }
  arg2 = reinterpret_cast< dLoadSaveBase::dSaveDescriptor * >(argp2);
  ((ndBodyTriggerVolume const *)arg1)->Save((dLoadSaveBase::dSaveDescriptor const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ndBodyTriggerVolume_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ndBodyTriggerVolume, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ndBodyTriggerVolume_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_ndBodyPlayerCapsule__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dLoadSaveBase::dLoadDescriptor *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ndBodyPlayerCapsule *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_dLoadSaveBase__dLoadDescriptor,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ndBodyPlayerCapsule" "', argument " "1"" of type '" "dLoadSaveBase::dLoadDescriptor const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ndBodyPlayerCapsule" "', argument " "1"" of type '" "dLoadSaveBase::dLoadDescriptor const &""'"); 
  }
  arg1 = reinterpret_cast< dLoadSaveBase::dLoadDescriptor * >(argp1);
  result = (ndBodyPlayerCapsule *)new ndBodyPlayerCapsule((dLoadSaveBase::dLoadDescriptor const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndBodyPlayerCapsule, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ndBodyPlayerCapsule__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dMatrix *arg1 = 0 ;
  float arg2 ;
  float arg3 ;
  float arg4 ;
  float arg5 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  float val5 ;
  int ecode5 = 0 ;
  ndBodyPlayerCapsule *result = 0 ;
  
  if ((nobjs < 5) || (nobjs > 5)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_dMatrix,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ndBodyPlayerCapsule" "', argument " "1"" of type '" "dMatrix const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ndBodyPlayerCapsule" "', argument " "1"" of type '" "dMatrix const &""'"); 
  }
  arg1 = reinterpret_cast< dMatrix * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "new_ndBodyPlayerCapsule" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "new_ndBodyPlayerCapsule" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "new_ndBodyPlayerCapsule" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  ecode5 = SWIG_AsVal_float(swig_obj[4], &val5);
  if (!SWIG_IsOK(ecode5)) {
    SWIG_exception_fail(SWIG_ArgError(ecode5), "in method '" "new_ndBodyPlayerCapsule" "', argument " "5"" of type '" "float""'");
  } 
  arg5 = static_cast< float >(val5);
  result = (ndBodyPlayerCapsule *)new ndBodyPlayerCapsule((dMatrix const &)*arg1,arg2,arg3,arg4,arg5);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndBodyPlayerCapsule, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ndBodyPlayerCapsule(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[6] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_ndBodyPlayerCapsule", 0, 5, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_dLoadSaveBase__dLoadDescriptor, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_ndBodyPlayerCapsule__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 5) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_dMatrix, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      {
        int res = SWIG_AsVal_float(argv[1], NULL);
        _v = SWIG_CheckState(res);
      }
      if (_v) {
        {
          int res = SWIG_AsVal_float(argv[2], NULL);
          _v = SWIG_CheckState(res);
        }
        if (_v) {
          {
            int res = SWIG_AsVal_float(argv[3], NULL);
            _v = SWIG_CheckState(res);
          }
          if (_v) {
            {
              int res = SWIG_AsVal_float(argv[4], NULL);
              _v = SWIG_CheckState(res);
            }
            if (_v) {
              return _wrap_new_ndBodyPlayerCapsule__SWIG_1(self, argc, argv);
            }
          }
        }
      }
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_ndBodyPlayerCapsule'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ndBodyPlayerCapsule::ndBodyPlayerCapsule(dLoadSaveBase::dLoadDescriptor const &)\n"
    "    ndBodyPlayerCapsule::ndBodyPlayerCapsule(dMatrix const &,float,float,float,float)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_ndBodyPlayerCapsule(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyPlayerCapsule *arg1 = (ndBodyPlayerCapsule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyPlayerCapsule, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ndBodyPlayerCapsule" "', argument " "1"" of type '" "ndBodyPlayerCapsule *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyPlayerCapsule * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyPlayerCapsule_GetAsBodyPlayerCapsule(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyPlayerCapsule *arg1 = (ndBodyPlayerCapsule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndBodyPlayerCapsule *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyPlayerCapsule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyPlayerCapsule_GetAsBodyPlayerCapsule" "', argument " "1"" of type '" "ndBodyPlayerCapsule *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyPlayerCapsule * >(argp1);
  result = (ndBodyPlayerCapsule *)(arg1)->GetAsBodyPlayerCapsule();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndBodyPlayerCapsule, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyPlayerCapsule_GetForwardSpeed(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyPlayerCapsule *arg1 = (ndBodyPlayerCapsule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyPlayerCapsule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyPlayerCapsule_GetForwardSpeed" "', argument " "1"" of type '" "ndBodyPlayerCapsule const *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyPlayerCapsule * >(argp1);
  result = (float)((ndBodyPlayerCapsule const *)arg1)->GetForwardSpeed();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyPlayerCapsule_SetForwardSpeed(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyPlayerCapsule *arg1 = (ndBodyPlayerCapsule *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndBodyPlayerCapsule_SetForwardSpeed", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyPlayerCapsule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyPlayerCapsule_SetForwardSpeed" "', argument " "1"" of type '" "ndBodyPlayerCapsule *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyPlayerCapsule * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndBodyPlayerCapsule_SetForwardSpeed" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->SetForwardSpeed(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyPlayerCapsule_GetLateralSpeed(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyPlayerCapsule *arg1 = (ndBodyPlayerCapsule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyPlayerCapsule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyPlayerCapsule_GetLateralSpeed" "', argument " "1"" of type '" "ndBodyPlayerCapsule const *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyPlayerCapsule * >(argp1);
  result = (float)((ndBodyPlayerCapsule const *)arg1)->GetLateralSpeed();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyPlayerCapsule_SetLateralSpeed(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyPlayerCapsule *arg1 = (ndBodyPlayerCapsule *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndBodyPlayerCapsule_SetLateralSpeed", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyPlayerCapsule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyPlayerCapsule_SetLateralSpeed" "', argument " "1"" of type '" "ndBodyPlayerCapsule *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyPlayerCapsule * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndBodyPlayerCapsule_SetLateralSpeed" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->SetLateralSpeed(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyPlayerCapsule_GetHeadingAngle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyPlayerCapsule *arg1 = (ndBodyPlayerCapsule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyPlayerCapsule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyPlayerCapsule_GetHeadingAngle" "', argument " "1"" of type '" "ndBodyPlayerCapsule const *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyPlayerCapsule * >(argp1);
  result = (float)((ndBodyPlayerCapsule const *)arg1)->GetHeadingAngle();
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyPlayerCapsule_SetHeadingAngle(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyPlayerCapsule *arg1 = (ndBodyPlayerCapsule *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndBodyPlayerCapsule_SetHeadingAngle", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyPlayerCapsule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyPlayerCapsule_SetHeadingAngle" "', argument " "1"" of type '" "ndBodyPlayerCapsule *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyPlayerCapsule * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndBodyPlayerCapsule_SetHeadingAngle" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->SetHeadingAngle(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyPlayerCapsule_IsOnFloor(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyPlayerCapsule *arg1 = (ndBodyPlayerCapsule *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  bool result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyPlayerCapsule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyPlayerCapsule_IsOnFloor" "', argument " "1"" of type '" "ndBodyPlayerCapsule const *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyPlayerCapsule * >(argp1);
  result = (bool)((ndBodyPlayerCapsule const *)arg1)->IsOnFloor();
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyPlayerCapsule_ApplyInputs(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyPlayerCapsule *arg1 = (ndBodyPlayerCapsule *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndBodyPlayerCapsule_ApplyInputs", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyPlayerCapsule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyPlayerCapsule_ApplyInputs" "', argument " "1"" of type '" "ndBodyPlayerCapsule *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyPlayerCapsule * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndBodyPlayerCapsule_ApplyInputs" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->ApplyInputs(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyPlayerCapsule_ContactFrictionCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyPlayerCapsule *arg1 = (ndBodyPlayerCapsule *) 0 ;
  dVector *arg2 = 0 ;
  dVector *arg3 = 0 ;
  int arg4 ;
  ndBodyKinematic *arg5 = (ndBodyKinematic *) (ndBodyKinematic *)0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  int val4 ;
  int ecode4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject *swig_obj[5] ;
  float result;
  
  if (!SWIG_Python_UnpackTuple(args, "ndBodyPlayerCapsule_ContactFrictionCallback", 5, 5, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyPlayerCapsule, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyPlayerCapsule_ContactFrictionCallback" "', argument " "1"" of type '" "ndBodyPlayerCapsule const *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyPlayerCapsule * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndBodyPlayerCapsule_ContactFrictionCallback" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndBodyPlayerCapsule_ContactFrictionCallback" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ndBodyPlayerCapsule_ContactFrictionCallback" "', argument " "3"" of type '" "dVector const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndBodyPlayerCapsule_ContactFrictionCallback" "', argument " "3"" of type '" "dVector const &""'"); 
  }
  arg3 = reinterpret_cast< dVector * >(argp3);
  ecode4 = SWIG_AsVal_int(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ndBodyPlayerCapsule_ContactFrictionCallback" "', argument " "4"" of type '" "int""'");
  } 
  arg4 = static_cast< int >(val4);
  res5 = SWIG_ConvertPtr(swig_obj[4], &argp5,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "ndBodyPlayerCapsule_ContactFrictionCallback" "', argument " "5"" of type '" "ndBodyKinematic const *const""'"); 
  }
  arg5 = reinterpret_cast< ndBodyKinematic * >(argp5);
  result = (float)((ndBodyPlayerCapsule const *)arg1)->ContactFrictionCallback((dVector const &)*arg2,(dVector const &)*arg3,arg4,(ndBodyKinematic const *)arg5);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ndBodyPlayerCapsule_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ndBodyPlayerCapsule, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ndBodyPlayerCapsule_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_ndBodyNotify__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dVector *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ndBodyNotify *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ndBodyNotify" "', argument " "1"" of type '" "dVector const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ndBodyNotify" "', argument " "1"" of type '" "dVector const &""'"); 
  }
  arg1 = reinterpret_cast< dVector * >(argp1);
  result = (ndBodyNotify *)new ndBodyNotify((dVector const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndBodyNotify, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ndBodyNotify__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  dLoadSaveBase::dLoadDescriptor *arg1 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ndBodyNotify *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1, SWIGTYPE_p_dLoadSaveBase__dLoadDescriptor,  0  | 0);
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "new_ndBodyNotify" "', argument " "1"" of type '" "dLoadSaveBase::dLoadDescriptor const &""'"); 
  }
  if (!argp1) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "new_ndBodyNotify" "', argument " "1"" of type '" "dLoadSaveBase::dLoadDescriptor const &""'"); 
  }
  arg1 = reinterpret_cast< dLoadSaveBase::dLoadDescriptor * >(argp1);
  result = (ndBodyNotify *)new ndBodyNotify((dLoadSaveBase::dLoadDescriptor const &)*arg1);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndBodyNotify, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_new_ndBodyNotify(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "new_ndBodyNotify", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_dVector, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_ndBodyNotify__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v;
    int res = SWIG_ConvertPtr(argv[0], 0, SWIGTYPE_p_dLoadSaveBase__dLoadDescriptor, SWIG_POINTER_NO_NULL | 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_new_ndBodyNotify__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'new_ndBodyNotify'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ndBodyNotify::ndBodyNotify(dVector const &)\n"
    "    ndBodyNotify::ndBodyNotify(dLoadSaveBase::dLoadDescriptor const &)\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_delete_ndBodyNotify(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyNotify *arg1 = (ndBodyNotify *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyNotify, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ndBodyNotify" "', argument " "1"" of type '" "ndBodyNotify *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyNotify * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyNotify_GetBody__SWIG_0(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  ndBodyNotify *arg1 = (ndBodyNotify *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ndBody *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyNotify, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyNotify_GetBody" "', argument " "1"" of type '" "ndBodyNotify *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyNotify * >(argp1);
  result = (ndBody *)(arg1)->GetBody();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndBody, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyNotify_GetBody__SWIG_1(PyObject *SWIGUNUSEDPARM(self), Py_ssize_t nobjs, PyObject **swig_obj) {
  PyObject *resultobj = 0;
  ndBodyNotify *arg1 = (ndBodyNotify *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  ndBody *result = 0 ;
  
  if ((nobjs < 1) || (nobjs > 1)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyNotify, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyNotify_GetBody" "', argument " "1"" of type '" "ndBodyNotify const *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyNotify * >(argp1);
  result = (ndBody *)((ndBodyNotify const *)arg1)->GetBody();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndBody, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyNotify_GetBody(PyObject *self, PyObject *args) {
  Py_ssize_t argc;
  PyObject *argv[2] = {
    0
  };
  
  if (!(argc = SWIG_Python_UnpackTuple(args, "ndBodyNotify_GetBody", 0, 1, argv))) SWIG_fail;
  --argc;
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ndBodyNotify, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_ndBodyNotify_GetBody__SWIG_0(self, argc, argv);
    }
  }
  if (argc == 1) {
    int _v;
    void *vptr = 0;
    int res = SWIG_ConvertPtr(argv[0], &vptr, SWIGTYPE_p_ndBodyNotify, 0);
    _v = SWIG_CheckState(res);
    if (_v) {
      return _wrap_ndBodyNotify_GetBody__SWIG_1(self, argc, argv);
    }
  }
  
fail:
  SWIG_Python_RaiseOrModifyTypeError("Wrong number or type of arguments for overloaded function 'ndBodyNotify_GetBody'.\n"
    "  Possible C/C++ prototypes are:\n"
    "    ndBodyNotify::GetBody()\n"
    "    ndBodyNotify::GetBody() const\n");
  return 0;
}


SWIGINTERN PyObject *_wrap_ndBodyNotify_GetUserData(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyNotify *arg1 = (ndBodyNotify *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  void *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyNotify, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyNotify_GetUserData" "', argument " "1"" of type '" "ndBodyNotify const *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyNotify * >(argp1);
  result = (void *)((ndBodyNotify const *)arg1)->GetUserData();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_void, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyNotify_GetGravity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyNotify *arg1 = (ndBodyNotify *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dVector result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyNotify, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyNotify_GetGravity" "', argument " "1"" of type '" "ndBodyNotify const *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyNotify * >(argp1);
  result = ((ndBodyNotify const *)arg1)->GetGravity();
  resultobj = SWIG_NewPointerObj((new dVector(static_cast< const dVector& >(result))), SWIGTYPE_p_dVector, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyNotify_SetGravity(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyNotify *arg1 = (ndBodyNotify *) 0 ;
  dVector *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndBodyNotify_SetGravity", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyNotify, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyNotify_SetGravity" "', argument " "1"" of type '" "ndBodyNotify *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyNotify * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndBodyNotify_SetGravity" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndBodyNotify_SetGravity" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  (arg1)->SetGravity((dVector const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyNotify_OnTransform(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyNotify *arg1 = (ndBodyNotify *) 0 ;
  int arg2 ;
  dMatrix *arg3 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndBodyNotify_OnTransform", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyNotify, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyNotify_OnTransform" "', argument " "1"" of type '" "ndBodyNotify *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyNotify * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndBodyNotify_OnTransform" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_dMatrix,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ndBodyNotify_OnTransform" "', argument " "3"" of type '" "dMatrix const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndBodyNotify_OnTransform" "', argument " "3"" of type '" "dMatrix const &""'"); 
  }
  arg3 = reinterpret_cast< dMatrix * >(argp3);
  (arg1)->OnTransform(arg2,(dMatrix const &)*arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyNotify_Save(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyNotify *arg1 = (ndBodyNotify *) 0 ;
  dLoadSaveBase::dSaveDescriptor *arg2 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndBodyNotify_Save", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyNotify, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyNotify_Save" "', argument " "1"" of type '" "ndBodyNotify const *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyNotify * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dLoadSaveBase__dSaveDescriptor,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndBodyNotify_Save" "', argument " "2"" of type '" "dLoadSaveBase::dSaveDescriptor const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndBodyNotify_Save" "', argument " "2"" of type '" "dLoadSaveBase::dSaveDescriptor const &""'"); 
  }
  arg2 = reinterpret_cast< dLoadSaveBase::dSaveDescriptor * >(argp2);
  ((ndBodyNotify const *)arg1)->Save((dLoadSaveBase::dSaveDescriptor const &)*arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodyNotify_OnApplyExternalForce(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodyNotify *arg1 = (ndBodyNotify *) 0 ;
  int arg2 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndBodyNotify_OnApplyExternalForce", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodyNotify, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodyNotify_OnApplyExternalForce" "', argument " "1"" of type '" "ndBodyNotify *""'"); 
  }
  arg1 = reinterpret_cast< ndBodyNotify * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndBodyNotify_OnApplyExternalForce" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ndBodyNotify_OnApplyExternalForce" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  (arg1)->OnApplyExternalForce(arg2,arg3);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ndBodyNotify_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ndBodyNotify, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ndBodyNotify_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_ndMaterial(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndMaterial *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_ndMaterial", 0, 0, 0)) SWIG_fail;
  result = (ndMaterial *)new ndMaterial();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndMaterial, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndMaterial_m_restitution_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndMaterial *arg1 = (ndMaterial *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndMaterial_m_restitution_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndMaterial_m_restitution_set" "', argument " "1"" of type '" "ndMaterial *""'"); 
  }
  arg1 = reinterpret_cast< ndMaterial * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndMaterial_m_restitution_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->m_restitution = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndMaterial_m_restitution_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndMaterial *arg1 = (ndMaterial *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndMaterial_m_restitution_get" "', argument " "1"" of type '" "ndMaterial *""'"); 
  }
  arg1 = reinterpret_cast< ndMaterial * >(argp1);
  result = (float) ((arg1)->m_restitution);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndMaterial_m_staticFriction0_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndMaterial *arg1 = (ndMaterial *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndMaterial_m_staticFriction0_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndMaterial_m_staticFriction0_set" "', argument " "1"" of type '" "ndMaterial *""'"); 
  }
  arg1 = reinterpret_cast< ndMaterial * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndMaterial_m_staticFriction0_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->m_staticFriction0 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndMaterial_m_staticFriction0_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndMaterial *arg1 = (ndMaterial *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndMaterial_m_staticFriction0_get" "', argument " "1"" of type '" "ndMaterial *""'"); 
  }
  arg1 = reinterpret_cast< ndMaterial * >(argp1);
  result = (float) ((arg1)->m_staticFriction0);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndMaterial_m_staticFriction1_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndMaterial *arg1 = (ndMaterial *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndMaterial_m_staticFriction1_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndMaterial_m_staticFriction1_set" "', argument " "1"" of type '" "ndMaterial *""'"); 
  }
  arg1 = reinterpret_cast< ndMaterial * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndMaterial_m_staticFriction1_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->m_staticFriction1 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndMaterial_m_staticFriction1_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndMaterial *arg1 = (ndMaterial *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndMaterial_m_staticFriction1_get" "', argument " "1"" of type '" "ndMaterial *""'"); 
  }
  arg1 = reinterpret_cast< ndMaterial * >(argp1);
  result = (float) ((arg1)->m_staticFriction1);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndMaterial_m_dynamicFriction0_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndMaterial *arg1 = (ndMaterial *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndMaterial_m_dynamicFriction0_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndMaterial_m_dynamicFriction0_set" "', argument " "1"" of type '" "ndMaterial *""'"); 
  }
  arg1 = reinterpret_cast< ndMaterial * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndMaterial_m_dynamicFriction0_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->m_dynamicFriction0 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndMaterial_m_dynamicFriction0_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndMaterial *arg1 = (ndMaterial *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndMaterial_m_dynamicFriction0_get" "', argument " "1"" of type '" "ndMaterial *""'"); 
  }
  arg1 = reinterpret_cast< ndMaterial * >(argp1);
  result = (float) ((arg1)->m_dynamicFriction0);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndMaterial_m_dynamicFriction1_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndMaterial *arg1 = (ndMaterial *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndMaterial_m_dynamicFriction1_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndMaterial_m_dynamicFriction1_set" "', argument " "1"" of type '" "ndMaterial *""'"); 
  }
  arg1 = reinterpret_cast< ndMaterial * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndMaterial_m_dynamicFriction1_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->m_dynamicFriction1 = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndMaterial_m_dynamicFriction1_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndMaterial *arg1 = (ndMaterial *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndMaterial_m_dynamicFriction1_get" "', argument " "1"" of type '" "ndMaterial *""'"); 
  }
  arg1 = reinterpret_cast< ndMaterial * >(argp1);
  result = (float) ((arg1)->m_dynamicFriction1);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndMaterial_m_softness_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndMaterial *arg1 = (ndMaterial *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndMaterial_m_softness_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndMaterial_m_softness_set" "', argument " "1"" of type '" "ndMaterial *""'"); 
  }
  arg1 = reinterpret_cast< ndMaterial * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndMaterial_m_softness_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->m_softness = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndMaterial_m_softness_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndMaterial *arg1 = (ndMaterial *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndMaterial_m_softness_get" "', argument " "1"" of type '" "ndMaterial *""'"); 
  }
  arg1 = reinterpret_cast< ndMaterial * >(argp1);
  result = (float) ((arg1)->m_softness);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndMaterial_m_skinThickness_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndMaterial *arg1 = (ndMaterial *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndMaterial_m_skinThickness_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndMaterial_m_skinThickness_set" "', argument " "1"" of type '" "ndMaterial *""'"); 
  }
  arg1 = reinterpret_cast< ndMaterial * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndMaterial_m_skinThickness_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->m_skinThickness = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndMaterial_m_skinThickness_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndMaterial *arg1 = (ndMaterial *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndMaterial_m_skinThickness_get" "', argument " "1"" of type '" "ndMaterial *""'"); 
  }
  arg1 = reinterpret_cast< ndMaterial * >(argp1);
  result = (float) ((arg1)->m_skinThickness);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndMaterial_m_flags_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndMaterial *arg1 = (ndMaterial *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndMaterial_m_flags_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndMaterial_m_flags_set" "', argument " "1"" of type '" "ndMaterial *""'"); 
  }
  arg1 = reinterpret_cast< ndMaterial * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndMaterial_m_flags_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->m_flags = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndMaterial_m_flags_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndMaterial *arg1 = (ndMaterial *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndMaterial_m_flags_get" "', argument " "1"" of type '" "ndMaterial *""'"); 
  }
  arg1 = reinterpret_cast< ndMaterial * >(argp1);
  result = (unsigned int) ((arg1)->m_flags);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndMaterial_m_userFlags_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndMaterial *arg1 = (ndMaterial *) 0 ;
  unsigned int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  unsigned int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndMaterial_m_userFlags_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndMaterial_m_userFlags_set" "', argument " "1"" of type '" "ndMaterial *""'"); 
  }
  arg1 = reinterpret_cast< ndMaterial * >(argp1);
  ecode2 = SWIG_AsVal_unsigned_SS_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndMaterial_m_userFlags_set" "', argument " "2"" of type '" "unsigned int""'");
  } 
  arg2 = static_cast< unsigned int >(val2);
  if (arg1) (arg1)->m_userFlags = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndMaterial_m_userFlags_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndMaterial *arg1 = (ndMaterial *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  unsigned int result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndMaterial, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndMaterial_m_userFlags_get" "', argument " "1"" of type '" "ndMaterial *""'"); 
  }
  arg1 = reinterpret_cast< ndMaterial * >(argp1);
  result = (unsigned int) ((arg1)->m_userFlags);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ndMaterial(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndMaterial *arg1 = (ndMaterial *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndMaterial, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ndMaterial" "', argument " "1"" of type '" "ndMaterial *""'"); 
  }
  arg1 = reinterpret_cast< ndMaterial * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ndMaterial_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ndMaterial, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ndMaterial_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_ndContactNotify(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndContactNotify *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_ndContactNotify", 0, 0, 0)) SWIG_fail;
  result = (ndContactNotify *)new ndContactNotify();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndContactNotify, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ndContactNotify(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndContactNotify *arg1 = (ndContactNotify *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndContactNotify, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ndContactNotify" "', argument " "1"" of type '" "ndContactNotify *""'"); 
  }
  arg1 = reinterpret_cast< ndContactNotify * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndContactNotify_OnBodyAdded(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndContactNotify *arg1 = (ndContactNotify *) 0 ;
  ndBodyKinematic *arg2 = (ndBodyKinematic *) (ndBodyKinematic *)0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndContactNotify_OnBodyAdded", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndContactNotify, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndContactNotify_OnBodyAdded" "', argument " "1"" of type '" "ndContactNotify const *""'"); 
  }
  arg1 = reinterpret_cast< ndContactNotify * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndContactNotify_OnBodyAdded" "', argument " "2"" of type '" "ndBodyKinematic *const""'"); 
  }
  arg2 = reinterpret_cast< ndBodyKinematic * >(argp2);
  ((ndContactNotify const *)arg1)->OnBodyAdded(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndContactNotify_OnBodyRemoved(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndContactNotify *arg1 = (ndContactNotify *) 0 ;
  ndBodyKinematic *arg2 = (ndBodyKinematic *) (ndBodyKinematic *)0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndContactNotify_OnBodyRemoved", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndContactNotify, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndContactNotify_OnBodyRemoved" "', argument " "1"" of type '" "ndContactNotify const *""'"); 
  }
  arg1 = reinterpret_cast< ndContactNotify * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_ndBodyKinematic, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndContactNotify_OnBodyRemoved" "', argument " "2"" of type '" "ndBodyKinematic *const""'"); 
  }
  arg2 = reinterpret_cast< ndBodyKinematic * >(argp2);
  ((ndContactNotify const *)arg1)->OnBodyRemoved(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndContactNotify_GetMaterial(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndContactNotify *arg1 = (ndContactNotify *) 0 ;
  ndContact *arg2 = (ndContact *) (ndContact *)0 ;
  ndShapeInstance *arg3 = 0 ;
  ndShapeInstance *arg4 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  PyObject *swig_obj[4] ;
  ndMaterial result;
  
  if (!SWIG_Python_UnpackTuple(args, "ndContactNotify_GetMaterial", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndContactNotify, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndContactNotify_GetMaterial" "', argument " "1"" of type '" "ndContactNotify const *""'"); 
  }
  arg1 = reinterpret_cast< ndContactNotify * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_ndContact, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndContactNotify_GetMaterial" "', argument " "2"" of type '" "ndContact const *const""'"); 
  }
  arg2 = reinterpret_cast< ndContact * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_ndShapeInstance,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ndContactNotify_GetMaterial" "', argument " "3"" of type '" "ndShapeInstance const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndContactNotify_GetMaterial" "', argument " "3"" of type '" "ndShapeInstance const &""'"); 
  }
  arg3 = reinterpret_cast< ndShapeInstance * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_ndShapeInstance,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ndContactNotify_GetMaterial" "', argument " "4"" of type '" "ndShapeInstance const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndContactNotify_GetMaterial" "', argument " "4"" of type '" "ndShapeInstance const &""'"); 
  }
  arg4 = reinterpret_cast< ndShapeInstance * >(argp4);
  result = ((ndContactNotify const *)arg1)->GetMaterial((ndContact const *)arg2,(ndShapeInstance const &)*arg3,(ndShapeInstance const &)*arg4);
  resultobj = SWIG_NewPointerObj((new ndMaterial(static_cast< const ndMaterial& >(result))), SWIGTYPE_p_ndMaterial, SWIG_POINTER_OWN |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndContactNotify_OnCompoundSubShapeOverlap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndContactNotify *arg1 = (ndContactNotify *) 0 ;
  ndContact *arg2 = (ndContact *) (ndContact *)0 ;
  float arg3 ;
  ndShapeInstance *arg4 = (ndShapeInstance *) (ndShapeInstance *)0 ;
  ndShapeInstance *arg5 = (ndShapeInstance *) (ndShapeInstance *)0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject *swig_obj[5] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "ndContactNotify_OnCompoundSubShapeOverlap", 5, 5, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndContactNotify, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndContactNotify_OnCompoundSubShapeOverlap" "', argument " "1"" of type '" "ndContactNotify *""'"); 
  }
  arg1 = reinterpret_cast< ndContactNotify * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_ndContact, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndContactNotify_OnCompoundSubShapeOverlap" "', argument " "2"" of type '" "ndContact const *const""'"); 
  }
  arg2 = reinterpret_cast< ndContact * >(argp2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ndContactNotify_OnCompoundSubShapeOverlap" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ndContactNotify_OnCompoundSubShapeOverlap" "', argument " "4"" of type '" "ndShapeInstance const *const""'"); 
  }
  arg4 = reinterpret_cast< ndShapeInstance * >(argp4);
  res5 = SWIG_ConvertPtr(swig_obj[4], &argp5,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "ndContactNotify_OnCompoundSubShapeOverlap" "', argument " "5"" of type '" "ndShapeInstance const *const""'"); 
  }
  arg5 = reinterpret_cast< ndShapeInstance * >(argp5);
  result = (bool)(arg1)->OnCompoundSubShapeOverlap((ndContact const *)arg2,arg3,(ndShapeInstance const *)arg4,(ndShapeInstance const *)arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndContactNotify_OnAabbOverlap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndContactNotify *arg1 = (ndContactNotify *) 0 ;
  ndContact *arg2 = (ndContact *) (ndContact *)0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "ndContactNotify_OnAabbOverlap", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndContactNotify, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndContactNotify_OnAabbOverlap" "', argument " "1"" of type '" "ndContactNotify *""'"); 
  }
  arg1 = reinterpret_cast< ndContactNotify * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_ndContact, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndContactNotify_OnAabbOverlap" "', argument " "2"" of type '" "ndContact const *const""'"); 
  }
  arg2 = reinterpret_cast< ndContact * >(argp2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ndContactNotify_OnAabbOverlap" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (bool)(arg1)->OnAabbOverlap((ndContact const *)arg2,arg3);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndContactNotify_OnContactCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndContactNotify *arg1 = (ndContactNotify *) 0 ;
  int arg2 ;
  ndContact *arg3 = (ndContact *) (ndContact *)0 ;
  float arg4 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  float val4 ;
  int ecode4 = 0 ;
  PyObject *swig_obj[4] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndContactNotify_OnContactCallback", 4, 4, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndContactNotify, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndContactNotify_OnContactCallback" "', argument " "1"" of type '" "ndContactNotify *""'"); 
  }
  arg1 = reinterpret_cast< ndContactNotify * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndContactNotify_OnContactCallback" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_ndContact, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ndContactNotify_OnContactCallback" "', argument " "3"" of type '" "ndContact const *const""'"); 
  }
  arg3 = reinterpret_cast< ndContact * >(argp3);
  ecode4 = SWIG_AsVal_float(swig_obj[3], &val4);
  if (!SWIG_IsOK(ecode4)) {
    SWIG_exception_fail(SWIG_ArgError(ecode4), "in method '" "ndContactNotify_OnContactCallback" "', argument " "4"" of type '" "float""'");
  } 
  arg4 = static_cast< float >(val4);
  (arg1)->OnContactCallback(arg2,(ndContact const *)arg3,arg4);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ndContactNotify_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ndContactNotify, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ndContactNotify_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_delete_ndRayCastNotify(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndRayCastNotify *arg1 = (ndRayCastNotify *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndRayCastNotify, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ndRayCastNotify" "', argument " "1"" of type '" "ndRayCastNotify *""'"); 
  }
  arg1 = reinterpret_cast< ndRayCastNotify * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndRayCastNotify_TraceShape(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndRayCastNotify *arg1 = (ndRayCastNotify *) 0 ;
  dVector *arg2 = 0 ;
  dVector *arg3 = 0 ;
  ndShapeInstance *arg4 = 0 ;
  dMatrix *arg5 = 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  void *argp4 = 0 ;
  int res4 = 0 ;
  void *argp5 = 0 ;
  int res5 = 0 ;
  PyObject *swig_obj[5] ;
  bool result;
  
  if (!SWIG_Python_UnpackTuple(args, "ndRayCastNotify_TraceShape", 5, 5, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndRayCastNotify, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndRayCastNotify_TraceShape" "', argument " "1"" of type '" "ndRayCastNotify *""'"); 
  }
  arg1 = reinterpret_cast< ndRayCastNotify * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndRayCastNotify_TraceShape" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndRayCastNotify_TraceShape" "', argument " "2"" of type '" "dVector const &""'"); 
  }
  arg2 = reinterpret_cast< dVector * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3, SWIGTYPE_p_dVector,  0  | 0);
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ndRayCastNotify_TraceShape" "', argument " "3"" of type '" "dVector const &""'"); 
  }
  if (!argp3) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndRayCastNotify_TraceShape" "', argument " "3"" of type '" "dVector const &""'"); 
  }
  arg3 = reinterpret_cast< dVector * >(argp3);
  res4 = SWIG_ConvertPtr(swig_obj[3], &argp4, SWIGTYPE_p_ndShapeInstance,  0  | 0);
  if (!SWIG_IsOK(res4)) {
    SWIG_exception_fail(SWIG_ArgError(res4), "in method '" "ndRayCastNotify_TraceShape" "', argument " "4"" of type '" "ndShapeInstance const &""'"); 
  }
  if (!argp4) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndRayCastNotify_TraceShape" "', argument " "4"" of type '" "ndShapeInstance const &""'"); 
  }
  arg4 = reinterpret_cast< ndShapeInstance * >(argp4);
  res5 = SWIG_ConvertPtr(swig_obj[4], &argp5, SWIGTYPE_p_dMatrix,  0  | 0);
  if (!SWIG_IsOK(res5)) {
    SWIG_exception_fail(SWIG_ArgError(res5), "in method '" "ndRayCastNotify_TraceShape" "', argument " "5"" of type '" "dMatrix const &""'"); 
  }
  if (!argp5) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndRayCastNotify_TraceShape" "', argument " "5"" of type '" "dMatrix const &""'"); 
  }
  arg5 = reinterpret_cast< dMatrix * >(argp5);
  result = (bool)(arg1)->TraceShape((dVector const &)*arg2,(dVector const &)*arg3,(ndShapeInstance const &)*arg4,(dMatrix const &)*arg5);
  resultobj = SWIG_From_bool(static_cast< bool >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndRayCastNotify_OnRayPrecastAction(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndRayCastNotify *arg1 = (ndRayCastNotify *) 0 ;
  ndBody *arg2 = (ndBody *) (ndBody *)0 ;
  ndShapeInstance *arg3 = (ndShapeInstance *) (ndShapeInstance *)0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject *swig_obj[3] ;
  unsigned int result;
  
  if (!SWIG_Python_UnpackTuple(args, "ndRayCastNotify_OnRayPrecastAction", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndRayCastNotify, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndRayCastNotify_OnRayPrecastAction" "', argument " "1"" of type '" "ndRayCastNotify *""'"); 
  }
  arg1 = reinterpret_cast< ndRayCastNotify * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_ndBody, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndRayCastNotify_OnRayPrecastAction" "', argument " "2"" of type '" "ndBody const *const""'"); 
  }
  arg2 = reinterpret_cast< ndBody * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ndRayCastNotify_OnRayPrecastAction" "', argument " "3"" of type '" "ndShapeInstance const *const""'"); 
  }
  arg3 = reinterpret_cast< ndShapeInstance * >(argp3);
  result = (unsigned int)(arg1)->OnRayPrecastAction((ndBody const *)arg2,(ndShapeInstance const *)arg3);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndRayCastNotify_OnRayCastAction(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndRayCastNotify *arg1 = (ndRayCastNotify *) 0 ;
  ndContactPoint *arg2 = 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  float result;
  
  if (!SWIG_Python_UnpackTuple(args, "ndRayCastNotify_OnRayCastAction", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndRayCastNotify, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndRayCastNotify_OnRayCastAction" "', argument " "1"" of type '" "ndRayCastNotify *""'"); 
  }
  arg1 = reinterpret_cast< ndRayCastNotify * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_ndContactPoint,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndRayCastNotify_OnRayCastAction" "', argument " "2"" of type '" "ndContactPoint const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndRayCastNotify_OnRayCastAction" "', argument " "2"" of type '" "ndContactPoint const &""'"); 
  }
  arg2 = reinterpret_cast< ndContactPoint * >(argp2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ndRayCastNotify_OnRayCastAction" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (float)(arg1)->OnRayCastAction((ndContactPoint const &)*arg2,arg3);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndRayCastNotify_m_contact_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndRayCastNotify *arg1 = (ndRayCastNotify *) 0 ;
  ndContactPoint *arg2 = (ndContactPoint *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndRayCastNotify_m_contact_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndRayCastNotify, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndRayCastNotify_m_contact_set" "', argument " "1"" of type '" "ndRayCastNotify *""'"); 
  }
  arg1 = reinterpret_cast< ndRayCastNotify * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_ndContactPoint, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndRayCastNotify_m_contact_set" "', argument " "2"" of type '" "ndContactPoint *""'"); 
  }
  arg2 = reinterpret_cast< ndContactPoint * >(argp2);
  if (arg1) (arg1)->m_contact = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndRayCastNotify_m_contact_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndRayCastNotify *arg1 = (ndRayCastNotify *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  ndContactPoint *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndRayCastNotify, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndRayCastNotify_m_contact_get" "', argument " "1"" of type '" "ndRayCastNotify *""'"); 
  }
  arg1 = reinterpret_cast< ndRayCastNotify * >(argp1);
  result = (ndContactPoint *)& ((arg1)->m_contact);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndContactPoint, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndRayCastNotify_m_param_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndRayCastNotify *arg1 = (ndRayCastNotify *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndRayCastNotify_m_param_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndRayCastNotify, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndRayCastNotify_m_param_set" "', argument " "1"" of type '" "ndRayCastNotify *""'"); 
  }
  arg1 = reinterpret_cast< ndRayCastNotify * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "ndRayCastNotify_m_param_set" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  if (arg1) (arg1)->m_param = arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndRayCastNotify_m_param_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndRayCastNotify *arg1 = (ndRayCastNotify *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  float result;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndRayCastNotify, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndRayCastNotify_m_param_get" "', argument " "1"" of type '" "ndRayCastNotify *""'"); 
  }
  arg1 = reinterpret_cast< ndRayCastNotify * >(argp1);
  result = (float) ((arg1)->m_param);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ndRayCastNotify_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ndRayCastNotify, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *_wrap_new_ndRayCastClosestHitCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndRayCastClosestHitCallback *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_ndRayCastClosestHitCallback", 0, 0, 0)) SWIG_fail;
  result = (ndRayCastClosestHitCallback *)new ndRayCastClosestHitCallback();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndRayCastClosestHitCallback, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndRayCastClosestHitCallback_OnRayPrecastAction(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndRayCastClosestHitCallback *arg1 = (ndRayCastClosestHitCallback *) 0 ;
  ndBody *arg2 = (ndBody *) (ndBody *)0 ;
  ndShapeInstance *arg3 = (ndShapeInstance *) (ndShapeInstance *)0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  void *argp3 = 0 ;
  int res3 = 0 ;
  PyObject *swig_obj[3] ;
  unsigned int result;
  
  if (!SWIG_Python_UnpackTuple(args, "ndRayCastClosestHitCallback_OnRayPrecastAction", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndRayCastClosestHitCallback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndRayCastClosestHitCallback_OnRayPrecastAction" "', argument " "1"" of type '" "ndRayCastClosestHitCallback *""'"); 
  }
  arg1 = reinterpret_cast< ndRayCastClosestHitCallback * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_ndBody, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndRayCastClosestHitCallback_OnRayPrecastAction" "', argument " "2"" of type '" "ndBody const *const""'"); 
  }
  arg2 = reinterpret_cast< ndBody * >(argp2);
  res3 = SWIG_ConvertPtr(swig_obj[2], &argp3,SWIGTYPE_p_ndShapeInstance, 0 |  0 );
  if (!SWIG_IsOK(res3)) {
    SWIG_exception_fail(SWIG_ArgError(res3), "in method '" "ndRayCastClosestHitCallback_OnRayPrecastAction" "', argument " "3"" of type '" "ndShapeInstance const *const""'"); 
  }
  arg3 = reinterpret_cast< ndShapeInstance * >(argp3);
  result = (unsigned int)(arg1)->OnRayPrecastAction((ndBody const *)arg2,(ndShapeInstance const *)arg3);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndRayCastClosestHitCallback_OnRayCastAction(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndRayCastClosestHitCallback *arg1 = (ndRayCastClosestHitCallback *) 0 ;
  ndContactPoint *arg2 = 0 ;
  float arg3 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  float val3 ;
  int ecode3 = 0 ;
  PyObject *swig_obj[3] ;
  float result;
  
  if (!SWIG_Python_UnpackTuple(args, "ndRayCastClosestHitCallback_OnRayCastAction", 3, 3, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndRayCastClosestHitCallback, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndRayCastClosestHitCallback_OnRayCastAction" "', argument " "1"" of type '" "ndRayCastClosestHitCallback *""'"); 
  }
  arg1 = reinterpret_cast< ndRayCastClosestHitCallback * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2, SWIGTYPE_p_ndContactPoint,  0  | 0);
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndRayCastClosestHitCallback_OnRayCastAction" "', argument " "2"" of type '" "ndContactPoint const &""'"); 
  }
  if (!argp2) {
    SWIG_exception_fail(SWIG_ValueError, "invalid null reference " "in method '" "ndRayCastClosestHitCallback_OnRayCastAction" "', argument " "2"" of type '" "ndContactPoint const &""'"); 
  }
  arg2 = reinterpret_cast< ndContactPoint * >(argp2);
  ecode3 = SWIG_AsVal_float(swig_obj[2], &val3);
  if (!SWIG_IsOK(ecode3)) {
    SWIG_exception_fail(SWIG_ArgError(ecode3), "in method '" "ndRayCastClosestHitCallback_OnRayCastAction" "', argument " "3"" of type '" "float""'");
  } 
  arg3 = static_cast< float >(val3);
  result = (float)(arg1)->OnRayCastAction((ndContactPoint const &)*arg2,arg3);
  resultobj = SWIG_From_float(static_cast< float >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ndRayCastClosestHitCallback(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndRayCastClosestHitCallback *arg1 = (ndRayCastClosestHitCallback *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndRayCastClosestHitCallback, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ndRayCastClosestHitCallback" "', argument " "1"" of type '" "ndRayCastClosestHitCallback *""'"); 
  }
  arg1 = reinterpret_cast< ndRayCastClosestHitCallback * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ndRayCastClosestHitCallback_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ndRayCastClosestHitCallback, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ndRayCastClosestHitCallback_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_ndBodiesInAabbNotify(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodiesInAabbNotify *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_ndBodiesInAabbNotify", 0, 0, 0)) SWIG_fail;
  result = (ndBodiesInAabbNotify *)new ndBodiesInAabbNotify();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_ndBodiesInAabbNotify, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_ndBodiesInAabbNotify(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodiesInAabbNotify *arg1 = (ndBodiesInAabbNotify *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodiesInAabbNotify, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_ndBodiesInAabbNotify" "', argument " "1"" of type '" "ndBodiesInAabbNotify *""'"); 
  }
  arg1 = reinterpret_cast< ndBodiesInAabbNotify * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodiesInAabbNotify_OnOverlap(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodiesInAabbNotify *arg1 = (ndBodiesInAabbNotify *) 0 ;
  ndBody *arg2 = (ndBody *) (ndBody *)0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  unsigned int result;
  
  if (!SWIG_Python_UnpackTuple(args, "ndBodiesInAabbNotify_OnOverlap", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodiesInAabbNotify, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodiesInAabbNotify_OnOverlap" "', argument " "1"" of type '" "ndBodiesInAabbNotify *""'"); 
  }
  arg1 = reinterpret_cast< ndBodiesInAabbNotify * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_ndBody, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndBodiesInAabbNotify_OnOverlap" "', argument " "2"" of type '" "ndBody const *const""'"); 
  }
  arg2 = reinterpret_cast< ndBody * >(argp2);
  result = (unsigned int)(arg1)->OnOverlap((ndBody const *)arg2);
  resultobj = SWIG_From_unsigned_SS_int(static_cast< unsigned int >(result));
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodiesInAabbNotify_m_bodyArray_set(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodiesInAabbNotify *arg1 = (ndBodiesInAabbNotify *) 0 ;
  dArray< ndBody * > *arg2 = (dArray< ndBody * > *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  void *argp2 = 0 ;
  int res2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "ndBodiesInAabbNotify_m_bodyArray_set", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodiesInAabbNotify, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodiesInAabbNotify_m_bodyArray_set" "', argument " "1"" of type '" "ndBodiesInAabbNotify *""'"); 
  }
  arg1 = reinterpret_cast< ndBodiesInAabbNotify * >(argp1);
  res2 = SWIG_ConvertPtr(swig_obj[1], &argp2,SWIGTYPE_p_dArrayT_ndBody_p_t, 0 |  0 );
  if (!SWIG_IsOK(res2)) {
    SWIG_exception_fail(SWIG_ArgError(res2), "in method '" "ndBodiesInAabbNotify_m_bodyArray_set" "', argument " "2"" of type '" "dArray< ndBody * > *""'"); 
  }
  arg2 = reinterpret_cast< dArray< ndBody * > * >(argp2);
  if (arg1) (arg1)->m_bodyArray = *arg2;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_ndBodiesInAabbNotify_m_bodyArray_get(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  ndBodiesInAabbNotify *arg1 = (ndBodiesInAabbNotify *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  dArray< ndBody * > *result = 0 ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_ndBodiesInAabbNotify, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "ndBodiesInAabbNotify_m_bodyArray_get" "', argument " "1"" of type '" "ndBodiesInAabbNotify *""'"); 
  }
  arg1 = reinterpret_cast< ndBodiesInAabbNotify * >(argp1);
  result = (dArray< ndBody * > *)& ((arg1)->m_bodyArray);
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_dArrayT_ndBody_p_t, 0 |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *ndBodiesInAabbNotify_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_ndBodiesInAabbNotify, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *ndBodiesInAabbNotify_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

SWIGINTERN PyObject *_wrap_new_NewtonWorld(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NewtonWorld *result = 0 ;
  
  if (!SWIG_Python_UnpackTuple(args, "new_NewtonWorld", 0, 0, 0)) SWIG_fail;
  result = (NewtonWorld *)new NewtonWorld();
  resultobj = SWIG_NewPointerObj(SWIG_as_voidptr(result), SWIGTYPE_p_NewtonWorld, SWIG_POINTER_NEW |  0 );
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_delete_NewtonWorld(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NewtonWorld *arg1 = (NewtonWorld *) 0 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  PyObject *swig_obj[1] ;
  
  if (!args) SWIG_fail;
  swig_obj[0] = args;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_NewtonWorld, SWIG_POINTER_DISOWN |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "delete_NewtonWorld" "', argument " "1"" of type '" "NewtonWorld *""'"); 
  }
  arg1 = reinterpret_cast< NewtonWorld * >(argp1);
  delete arg1;
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NewtonWorld_Update(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NewtonWorld *arg1 = (NewtonWorld *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "NewtonWorld_Update", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_NewtonWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NewtonWorld_Update" "', argument " "1"" of type '" "NewtonWorld *""'"); 
  }
  arg1 = reinterpret_cast< NewtonWorld * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "NewtonWorld_Update" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->Update(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NewtonWorld_SetSubSteps(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NewtonWorld *arg1 = (NewtonWorld *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "NewtonWorld_SetSubSteps", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_NewtonWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NewtonWorld_SetSubSteps" "', argument " "1"" of type '" "NewtonWorld *""'"); 
  }
  arg1 = reinterpret_cast< NewtonWorld * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "NewtonWorld_SetSubSteps" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->SetSubSteps(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NewtonWorld_SetIterations(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NewtonWorld *arg1 = (NewtonWorld *) 0 ;
  int arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  int val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "NewtonWorld_SetIterations", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_NewtonWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NewtonWorld_SetIterations" "', argument " "1"" of type '" "NewtonWorld *""'"); 
  }
  arg1 = reinterpret_cast< NewtonWorld * >(argp1);
  ecode2 = SWIG_AsVal_int(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "NewtonWorld_SetIterations" "', argument " "2"" of type '" "int""'");
  } 
  arg2 = static_cast< int >(val2);
  (arg1)->SetIterations(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *_wrap_NewtonWorld_SetTimestep(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *resultobj = 0;
  NewtonWorld *arg1 = (NewtonWorld *) 0 ;
  float arg2 ;
  void *argp1 = 0 ;
  int res1 = 0 ;
  float val2 ;
  int ecode2 = 0 ;
  PyObject *swig_obj[2] ;
  
  if (!SWIG_Python_UnpackTuple(args, "NewtonWorld_SetTimestep", 2, 2, swig_obj)) SWIG_fail;
  res1 = SWIG_ConvertPtr(swig_obj[0], &argp1,SWIGTYPE_p_NewtonWorld, 0 |  0 );
  if (!SWIG_IsOK(res1)) {
    SWIG_exception_fail(SWIG_ArgError(res1), "in method '" "NewtonWorld_SetTimestep" "', argument " "1"" of type '" "NewtonWorld *""'"); 
  }
  arg1 = reinterpret_cast< NewtonWorld * >(argp1);
  ecode2 = SWIG_AsVal_float(swig_obj[1], &val2);
  if (!SWIG_IsOK(ecode2)) {
    SWIG_exception_fail(SWIG_ArgError(ecode2), "in method '" "NewtonWorld_SetTimestep" "', argument " "2"" of type '" "float""'");
  } 
  arg2 = static_cast< float >(val2);
  (arg1)->SetTimestep(arg2);
  resultobj = SWIG_Py_Void();
  return resultobj;
fail:
  return NULL;
}


SWIGINTERN PyObject *NewtonWorld_swigregister(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  PyObject *obj;
  if (!SWIG_Python_UnpackTuple(args, "swigregister", 1, 1, &obj)) return NULL;
  SWIG_TypeNewClientData(SWIGTYPE_p_NewtonWorld, SWIG_NewClientData(obj));
  return SWIG_Py_Void();
}

SWIGINTERN PyObject *NewtonWorld_swiginit(PyObject *SWIGUNUSEDPARM(self), PyObject *args) {
  return SWIG_Python_InitShadowInstance(args);
}

static PyMethodDef SwigMethods[] = {
	 { "SWIG_PyInstanceMethod_New", SWIG_PyInstanceMethod_New, METH_O, NULL},
	 { "new_dVector", _wrap_new_dVector, METH_VARARGS, NULL},
	 { "dVector_GetX", _wrap_dVector_GetX, METH_O, NULL},
	 { "dVector_GetY", _wrap_dVector_GetY, METH_O, NULL},
	 { "dVector_GetZ", _wrap_dVector_GetZ, METH_O, NULL},
	 { "dVector_GetW", _wrap_dVector_GetW, METH_O, NULL},
	 { "dVector_SetX", _wrap_dVector_SetX, METH_VARARGS, NULL},
	 { "dVector_SetY", _wrap_dVector_SetY, METH_VARARGS, NULL},
	 { "dVector_SetZ", _wrap_dVector_SetZ, METH_VARARGS, NULL},
	 { "dVector_SetW", _wrap_dVector_SetW, METH_VARARGS, NULL},
	 { "dVector_GetScalar", _wrap_dVector_GetScalar, METH_O, NULL},
	 { "dVector_Store", _wrap_dVector_Store, METH_VARARGS, NULL},
	 { "dVector_BroadcastX", _wrap_dVector_BroadcastX, METH_O, NULL},
	 { "dVector_BroadcastY", _wrap_dVector_BroadcastY, METH_O, NULL},
	 { "dVector_BroadcastZ", _wrap_dVector_BroadcastZ, METH_O, NULL},
	 { "dVector_BroadcastW", _wrap_dVector_BroadcastW, METH_O, NULL},
	 { "dVector_Scale", _wrap_dVector_Scale, METH_VARARGS, NULL},
	 { "dVector_GetElement", _wrap_dVector_GetElement, METH_VARARGS, NULL},
	 { "dVector___add__", _wrap_dVector___add__, METH_VARARGS, NULL},
	 { "dVector___sub__", _wrap_dVector___sub__, METH_VARARGS, NULL},
	 { "dVector___mul__", _wrap_dVector___mul__, METH_VARARGS, NULL},
	 { "dVector___iadd__", _wrap_dVector___iadd__, METH_VARARGS, NULL},
	 { "dVector___isub__", _wrap_dVector___isub__, METH_VARARGS, NULL},
	 { "dVector___imul__", _wrap_dVector___imul__, METH_VARARGS, NULL},
	 { "dVector_DotProduct", _wrap_dVector_DotProduct, METH_VARARGS, NULL},
	 { "dVector_CrossProduct", _wrap_dVector_CrossProduct, METH_VARARGS, NULL},
	 { "dVector_Reciproc", _wrap_dVector_Reciproc, METH_O, NULL},
	 { "dVector_MulAdd", _wrap_dVector_MulAdd, METH_VARARGS, NULL},
	 { "dVector_MulSub", _wrap_dVector_MulSub, METH_VARARGS, NULL},
	 { "dVector_AddHorizontal", _wrap_dVector_AddHorizontal, METH_O, NULL},
	 { "dVector_Abs", _wrap_dVector_Abs, METH_O, NULL},
	 { "dVector_GetMax", _wrap_dVector_GetMax, METH_VARARGS, NULL},
	 { "dVector_GetMin", _wrap_dVector_GetMin, METH_VARARGS, NULL},
	 { "dVector_GetInt", _wrap_dVector_GetInt, METH_O, NULL},
	 { "dVector_TestZero", _wrap_dVector_TestZero, METH_O, NULL},
	 { "dVector_Floor", _wrap_dVector_Floor, METH_O, NULL},
	 { "dVector_Sqrt", _wrap_dVector_Sqrt, METH_O, NULL},
	 { "dVector_InvSqrt", _wrap_dVector_InvSqrt, METH_O, NULL},
	 { "dVector_InvMagSqrt", _wrap_dVector_InvMagSqrt, METH_O, NULL},
	 { "dVector_Normalize", _wrap_dVector_Normalize, METH_O, NULL},
	 { "dVector___gt__", _wrap_dVector___gt__, METH_VARARGS, NULL},
	 { "dVector___eq__", _wrap_dVector___eq__, METH_VARARGS, NULL},
	 { "dVector___lt__", _wrap_dVector___lt__, METH_VARARGS, NULL},
	 { "dVector___ge__", _wrap_dVector___ge__, METH_VARARGS, NULL},
	 { "dVector___le__", _wrap_dVector___le__, METH_VARARGS, NULL},
	 { "dVector___and__", _wrap_dVector___and__, METH_VARARGS, NULL},
	 { "dVector___or__", _wrap_dVector___or__, METH_VARARGS, NULL},
	 { "dVector___xor__", _wrap_dVector___xor__, METH_VARARGS, NULL},
	 { "dVector_AndNot", _wrap_dVector_AndNot, METH_VARARGS, NULL},
	 { "dVector_Select", _wrap_dVector_Select, METH_VARARGS, NULL},
	 { "dVector_GetSignMask", _wrap_dVector_GetSignMask, METH_O, NULL},
	 { "dVector_ShiftRight", _wrap_dVector_ShiftRight, METH_O, NULL},
	 { "dVector_ShiftTripleRight", _wrap_dVector_ShiftTripleRight, METH_O, NULL},
	 { "dVector_ShiftTripleLeft", _wrap_dVector_ShiftTripleLeft, METH_O, NULL},
	 { "dVector_ShiftRightLogical", _wrap_dVector_ShiftRightLogical, METH_VARARGS, NULL},
	 { "dVector_Transpose4x4", _wrap_dVector_Transpose4x4, METH_VARARGS, NULL},
	 { "dVector_Trace", _wrap_dVector_Trace, METH_VARARGS, NULL},
	 { "dVector_m_zero_get", _wrap_dVector_m_zero_get, METH_VARARGS, NULL},
	 { "dVector_m_zero_set", _wrap_dVector_m_zero_set, METH_O, NULL},
	 { "dVector_m_one_get", _wrap_dVector_m_one_get, METH_VARARGS, NULL},
	 { "dVector_m_one_set", _wrap_dVector_m_one_set, METH_O, NULL},
	 { "dVector_m_wOne_get", _wrap_dVector_m_wOne_get, METH_VARARGS, NULL},
	 { "dVector_m_wOne_set", _wrap_dVector_m_wOne_set, METH_O, NULL},
	 { "dVector_m_two_get", _wrap_dVector_m_two_get, METH_VARARGS, NULL},
	 { "dVector_m_two_set", _wrap_dVector_m_two_set, METH_O, NULL},
	 { "dVector_m_half_get", _wrap_dVector_m_half_get, METH_VARARGS, NULL},
	 { "dVector_m_half_set", _wrap_dVector_m_half_set, METH_O, NULL},
	 { "dVector_m_three_get", _wrap_dVector_m_three_get, METH_VARARGS, NULL},
	 { "dVector_m_three_set", _wrap_dVector_m_three_set, METH_O, NULL},
	 { "dVector_m_negOne_get", _wrap_dVector_m_negOne_get, METH_VARARGS, NULL},
	 { "dVector_m_negOne_set", _wrap_dVector_m_negOne_set, METH_O, NULL},
	 { "dVector_m_xMask_get", _wrap_dVector_m_xMask_get, METH_VARARGS, NULL},
	 { "dVector_m_xMask_set", _wrap_dVector_m_xMask_set, METH_O, NULL},
	 { "dVector_m_yMask_get", _wrap_dVector_m_yMask_get, METH_VARARGS, NULL},
	 { "dVector_m_yMask_set", _wrap_dVector_m_yMask_set, METH_O, NULL},
	 { "dVector_m_zMask_get", _wrap_dVector_m_zMask_get, METH_VARARGS, NULL},
	 { "dVector_m_zMask_set", _wrap_dVector_m_zMask_set, METH_O, NULL},
	 { "dVector_m_wMask_get", _wrap_dVector_m_wMask_get, METH_VARARGS, NULL},
	 { "dVector_m_wMask_set", _wrap_dVector_m_wMask_set, METH_O, NULL},
	 { "dVector_m_xyzwMask_get", _wrap_dVector_m_xyzwMask_get, METH_VARARGS, NULL},
	 { "dVector_m_xyzwMask_set", _wrap_dVector_m_xyzwMask_set, METH_O, NULL},
	 { "dVector_m_epsilon_get", _wrap_dVector_m_epsilon_get, METH_VARARGS, NULL},
	 { "dVector_m_epsilon_set", _wrap_dVector_m_epsilon_set, METH_O, NULL},
	 { "dVector_m_signMask_get", _wrap_dVector_m_signMask_get, METH_VARARGS, NULL},
	 { "dVector_m_signMask_set", _wrap_dVector_m_signMask_set, METH_O, NULL},
	 { "dVector_m_triplexMask_get", _wrap_dVector_m_triplexMask_get, METH_VARARGS, NULL},
	 { "dVector_m_triplexMask_set", _wrap_dVector_m_triplexMask_set, METH_O, NULL},
	 { "delete_dVector", _wrap_delete_dVector, METH_O, NULL},
	 { "dVector_swigregister", dVector_swigregister, METH_O, NULL},
	 { "dVector_swiginit", dVector_swiginit, METH_VARARGS, NULL},
	 { "new_dBigVector", _wrap_new_dBigVector, METH_VARARGS, NULL},
	 { "dBigVector_GetX", _wrap_dBigVector_GetX, METH_O, NULL},
	 { "dBigVector_GetY", _wrap_dBigVector_GetY, METH_O, NULL},
	 { "dBigVector_GetZ", _wrap_dBigVector_GetZ, METH_O, NULL},
	 { "dBigVector_GetW", _wrap_dBigVector_GetW, METH_O, NULL},
	 { "dBigVector_SetX", _wrap_dBigVector_SetX, METH_VARARGS, NULL},
	 { "dBigVector_SetY", _wrap_dBigVector_SetY, METH_VARARGS, NULL},
	 { "dBigVector_SetZ", _wrap_dBigVector_SetZ, METH_VARARGS, NULL},
	 { "dBigVector_SetW", _wrap_dBigVector_SetW, METH_VARARGS, NULL},
	 { "dBigVector_GetScalar", _wrap_dBigVector_GetScalar, METH_O, NULL},
	 { "dBigVector_GetElement", _wrap_dBigVector_GetElement, METH_VARARGS, NULL},
	 { "dBigVector___add__", _wrap_dBigVector___add__, METH_VARARGS, NULL},
	 { "dBigVector___sub__", _wrap_dBigVector___sub__, METH_VARARGS, NULL},
	 { "dBigVector___mul__", _wrap_dBigVector___mul__, METH_VARARGS, NULL},
	 { "dBigVector___iadd__", _wrap_dBigVector___iadd__, METH_VARARGS, NULL},
	 { "dBigVector___isub__", _wrap_dBigVector___isub__, METH_VARARGS, NULL},
	 { "dBigVector___imul__", _wrap_dBigVector___imul__, METH_VARARGS, NULL},
	 { "dBigVector_MulAdd", _wrap_dBigVector_MulAdd, METH_VARARGS, NULL},
	 { "dBigVector_MulSub", _wrap_dBigVector_MulSub, METH_VARARGS, NULL},
	 { "dBigVector_AddHorizontal", _wrap_dBigVector_AddHorizontal, METH_O, NULL},
	 { "dBigVector_BroadcastX", _wrap_dBigVector_BroadcastX, METH_O, NULL},
	 { "dBigVector_BroadcastY", _wrap_dBigVector_BroadcastY, METH_O, NULL},
	 { "dBigVector_BroadcastZ", _wrap_dBigVector_BroadcastZ, METH_O, NULL},
	 { "dBigVector_BroadcastW", _wrap_dBigVector_BroadcastW, METH_O, NULL},
	 { "dBigVector_Scale", _wrap_dBigVector_Scale, METH_VARARGS, NULL},
	 { "dBigVector_Abs", _wrap_dBigVector_Abs, METH_O, NULL},
	 { "dBigVector_Reciproc", _wrap_dBigVector_Reciproc, METH_O, NULL},
	 { "dBigVector_Sqrt", _wrap_dBigVector_Sqrt, METH_O, NULL},
	 { "dBigVector_InvSqrt", _wrap_dBigVector_InvSqrt, METH_O, NULL},
	 { "dBigVector_InvMagSqrt", _wrap_dBigVector_InvMagSqrt, METH_O, NULL},
	 { "dBigVector_Normalize", _wrap_dBigVector_Normalize, METH_O, NULL},
	 { "dBigVector_GetMax", _wrap_dBigVector_GetMax, METH_VARARGS, NULL},
	 { "dBigVector_GetMin", _wrap_dBigVector_GetMin, METH_VARARGS, NULL},
	 { "dBigVector_GetInt", _wrap_dBigVector_GetInt, METH_O, NULL},
	 { "dBigVector___gt__", _wrap_dBigVector___gt__, METH_VARARGS, NULL},
	 { "dBigVector___eq__", _wrap_dBigVector___eq__, METH_VARARGS, NULL},
	 { "dBigVector___lt__", _wrap_dBigVector___lt__, METH_VARARGS, NULL},
	 { "dBigVector___ge__", _wrap_dBigVector___ge__, METH_VARARGS, NULL},
	 { "dBigVector___le__", _wrap_dBigVector___le__, METH_VARARGS, NULL},
	 { "dBigVector___and__", _wrap_dBigVector___and__, METH_VARARGS, NULL},
	 { "dBigVector___or__", _wrap_dBigVector___or__, METH_VARARGS, NULL},
	 { "dBigVector___xor__", _wrap_dBigVector___xor__, METH_VARARGS, NULL},
	 { "dBigVector_AndNot", _wrap_dBigVector_AndNot, METH_VARARGS, NULL},
	 { "dBigVector_Select", _wrap_dBigVector_Select, METH_VARARGS, NULL},
	 { "dBigVector_ShiftRight", _wrap_dBigVector_ShiftRight, METH_O, NULL},
	 { "dBigVector_ShiftTripleRight", _wrap_dBigVector_ShiftTripleRight, METH_O, NULL},
	 { "dBigVector_ShiftTripleLeft", _wrap_dBigVector_ShiftTripleLeft, METH_O, NULL},
	 { "dBigVector_ShiftRightLogical", _wrap_dBigVector_ShiftRightLogical, METH_VARARGS, NULL},
	 { "dBigVector_GetSignMask", _wrap_dBigVector_GetSignMask, METH_O, NULL},
	 { "dBigVector_Floor", _wrap_dBigVector_Floor, METH_O, NULL},
	 { "dBigVector_TestZero", _wrap_dBigVector_TestZero, METH_O, NULL},
	 { "dBigVector_Transpose4x4", _wrap_dBigVector_Transpose4x4, METH_VARARGS, NULL},
	 { "dBigVector_DotProduct", _wrap_dBigVector_DotProduct, METH_VARARGS, NULL},
	 { "dBigVector_CrossProduct", _wrap_dBigVector_CrossProduct, METH_VARARGS, NULL},
	 { "dBigVector_m_zero_get", _wrap_dBigVector_m_zero_get, METH_VARARGS, NULL},
	 { "dBigVector_m_zero_set", _wrap_dBigVector_m_zero_set, METH_O, NULL},
	 { "dBigVector_m_one_get", _wrap_dBigVector_m_one_get, METH_VARARGS, NULL},
	 { "dBigVector_m_one_set", _wrap_dBigVector_m_one_set, METH_O, NULL},
	 { "dBigVector_m_wOne_get", _wrap_dBigVector_m_wOne_get, METH_VARARGS, NULL},
	 { "dBigVector_m_wOne_set", _wrap_dBigVector_m_wOne_set, METH_O, NULL},
	 { "dBigVector_m_two_get", _wrap_dBigVector_m_two_get, METH_VARARGS, NULL},
	 { "dBigVector_m_two_set", _wrap_dBigVector_m_two_set, METH_O, NULL},
	 { "dBigVector_m_half_get", _wrap_dBigVector_m_half_get, METH_VARARGS, NULL},
	 { "dBigVector_m_half_set", _wrap_dBigVector_m_half_set, METH_O, NULL},
	 { "dBigVector_m_three_get", _wrap_dBigVector_m_three_get, METH_VARARGS, NULL},
	 { "dBigVector_m_three_set", _wrap_dBigVector_m_three_set, METH_O, NULL},
	 { "dBigVector_m_negOne_get", _wrap_dBigVector_m_negOne_get, METH_VARARGS, NULL},
	 { "dBigVector_m_negOne_set", _wrap_dBigVector_m_negOne_set, METH_O, NULL},
	 { "dBigVector_m_xMask_get", _wrap_dBigVector_m_xMask_get, METH_VARARGS, NULL},
	 { "dBigVector_m_xMask_set", _wrap_dBigVector_m_xMask_set, METH_O, NULL},
	 { "dBigVector_m_yMask_get", _wrap_dBigVector_m_yMask_get, METH_VARARGS, NULL},
	 { "dBigVector_m_yMask_set", _wrap_dBigVector_m_yMask_set, METH_O, NULL},
	 { "dBigVector_m_zMask_get", _wrap_dBigVector_m_zMask_get, METH_VARARGS, NULL},
	 { "dBigVector_m_zMask_set", _wrap_dBigVector_m_zMask_set, METH_O, NULL},
	 { "dBigVector_m_wMask_get", _wrap_dBigVector_m_wMask_get, METH_VARARGS, NULL},
	 { "dBigVector_m_wMask_set", _wrap_dBigVector_m_wMask_set, METH_O, NULL},
	 { "dBigVector_m_xyzwMask_get", _wrap_dBigVector_m_xyzwMask_get, METH_VARARGS, NULL},
	 { "dBigVector_m_xyzwMask_set", _wrap_dBigVector_m_xyzwMask_set, METH_O, NULL},
	 { "dBigVector_m_epsilon_get", _wrap_dBigVector_m_epsilon_get, METH_VARARGS, NULL},
	 { "dBigVector_m_epsilon_set", _wrap_dBigVector_m_epsilon_set, METH_O, NULL},
	 { "dBigVector_m_signMask_get", _wrap_dBigVector_m_signMask_get, METH_VARARGS, NULL},
	 { "dBigVector_m_signMask_set", _wrap_dBigVector_m_signMask_set, METH_O, NULL},
	 { "dBigVector_m_triplexMask_get", _wrap_dBigVector_m_triplexMask_get, METH_VARARGS, NULL},
	 { "dBigVector_m_triplexMask_set", _wrap_dBigVector_m_triplexMask_set, METH_O, NULL},
	 { "delete_dBigVector", _wrap_delete_dBigVector, METH_O, NULL},
	 { "dBigVector_swigregister", dBigVector_swigregister, METH_O, NULL},
	 { "dBigVector_swiginit", dBigVector_swiginit, METH_VARARGS, NULL},
	 { "dGetZeroMatrix", _wrap_dGetZeroMatrix, METH_NOARGS, NULL},
	 { "dGetIdentityMatrix", _wrap_dGetIdentityMatrix, METH_NOARGS, NULL},
	 { "delete_dMatrix", _wrap_delete_dMatrix, METH_O, NULL},
	 { "dMatrix_GetElement", _wrap_dMatrix_GetElement, METH_VARARGS, NULL},
	 { "dMatrix_Inverse", _wrap_dMatrix_Inverse, METH_O, NULL},
	 { "dMatrix_Inverse4x4", _wrap_dMatrix_Inverse4x4, METH_O, NULL},
	 { "dMatrix_Transpose", _wrap_dMatrix_Transpose, METH_O, NULL},
	 { "dMatrix_Transpose4X4", _wrap_dMatrix_Transpose4X4, METH_O, NULL},
	 { "dMatrix_RotateVector", _wrap_dMatrix_RotateVector, METH_VARARGS, NULL},
	 { "dMatrix_UnrotateVector", _wrap_dMatrix_UnrotateVector, METH_VARARGS, NULL},
	 { "dMatrix_TransformVector", _wrap_dMatrix_TransformVector, METH_VARARGS, NULL},
	 { "dMatrix_UntransformVector", _wrap_dMatrix_UntransformVector, METH_VARARGS, NULL},
	 { "dMatrix_TransformPlane", _wrap_dMatrix_TransformPlane, METH_VARARGS, NULL},
	 { "dMatrix_UntransformPlane", _wrap_dMatrix_UntransformPlane, METH_VARARGS, NULL},
	 { "dMatrix_TransformVector1x4", _wrap_dMatrix_TransformVector1x4, METH_VARARGS, NULL},
	 { "dMatrix_SolveByGaussianElimination", _wrap_dMatrix_SolveByGaussianElimination, METH_VARARGS, NULL},
	 { "dMatrix_TransformBBox", _wrap_dMatrix_TransformBBox, METH_VARARGS, NULL},
	 { "dMatrix_CalcPitchYawRoll", _wrap_dMatrix_CalcPitchYawRoll, METH_VARARGS, NULL},
	 { "dMatrix_TransformTriplex", _wrap_dMatrix_TransformTriplex, METH_VARARGS, NULL},
	 { "dMatrix_TestIdentity", _wrap_dMatrix_TestIdentity, METH_O, NULL},
	 { "dMatrix_TestSymetric3x3", _wrap_dMatrix_TestSymetric3x3, METH_O, NULL},
	 { "dMatrix_TestOrthogonal", _wrap_dMatrix_TestOrthogonal, METH_VARARGS, NULL},
	 { "dMatrix_Multiply3X3", _wrap_dMatrix_Multiply3X3, METH_VARARGS, NULL},
	 { "dMatrix___mul__", _wrap_dMatrix___mul__, METH_VARARGS, NULL},
	 { "dMatrix_EigenVectors", _wrap_dMatrix_EigenVectors, METH_O, NULL},
	 { "dMatrix_PolarDecomposition", _wrap_dMatrix_PolarDecomposition, METH_VARARGS, NULL},
	 { "new_dMatrix", _wrap_new_dMatrix, METH_VARARGS, NULL},
	 { "dMatrix_m_front_set", _wrap_dMatrix_m_front_set, METH_VARARGS, NULL},
	 { "dMatrix_m_front_get", _wrap_dMatrix_m_front_get, METH_O, NULL},
	 { "dMatrix_m_up_set", _wrap_dMatrix_m_up_set, METH_VARARGS, NULL},
	 { "dMatrix_m_up_get", _wrap_dMatrix_m_up_get, METH_O, NULL},
	 { "dMatrix_m_right_set", _wrap_dMatrix_m_right_set, METH_VARARGS, NULL},
	 { "dMatrix_m_right_get", _wrap_dMatrix_m_right_get, METH_O, NULL},
	 { "dMatrix_m_posit_set", _wrap_dMatrix_m_posit_set, METH_VARARGS, NULL},
	 { "dMatrix_m_posit_get", _wrap_dMatrix_m_posit_get, METH_O, NULL},
	 { "dMatrix_swigregister", dMatrix_swigregister, METH_O, NULL},
	 { "dMatrix_swiginit", dMatrix_swiginit, METH_VARARGS, NULL},
	 { "dPitchMatrix", _wrap_dPitchMatrix, METH_O, NULL},
	 { "dYawMatrix", _wrap_dYawMatrix, METH_O, NULL},
	 { "dRollMatrix", _wrap_dRollMatrix, METH_O, NULL},
	 { "new_dQuaternion", _wrap_new_dQuaternion, METH_VARARGS, NULL},
	 { "dQuaternion_Normalize", _wrap_dQuaternion_Normalize, METH_O, NULL},
	 { "dQuaternion_Scale", _wrap_dQuaternion_Scale, METH_VARARGS, NULL},
	 { "dQuaternion_Inverse", _wrap_dQuaternion_Inverse, METH_O, NULL},
	 { "dQuaternion___add__", _wrap_dQuaternion___add__, METH_VARARGS, NULL},
	 { "dQuaternion___sub__", _wrap_dQuaternion___sub__, METH_VARARGS, NULL},
	 { "dQuaternion___mul__", _wrap_dQuaternion___mul__, METH_VARARGS, NULL},
	 { "dQuaternion_Slerp", _wrap_dQuaternion_Slerp, METH_VARARGS, NULL},
	 { "dQuaternion_CalcAverageOmega", _wrap_dQuaternion_CalcAverageOmega, METH_VARARGS, NULL},
	 { "delete_dQuaternion", _wrap_delete_dQuaternion, METH_O, NULL},
	 { "dQuaternion_swigregister", dQuaternion_swigregister, METH_O, NULL},
	 { "dQuaternion_swiginit", dQuaternion_swiginit, METH_VARARGS, NULL},
	 { "new_ndShapeMaterial", _wrap_new_ndShapeMaterial, METH_NOARGS, NULL},
	 { "ndShapeMaterial_m_userId_set", _wrap_ndShapeMaterial_m_userId_set, METH_VARARGS, NULL},
	 { "ndShapeMaterial_m_userId_get", _wrap_ndShapeMaterial_m_userId_get, METH_O, NULL},
	 { "ndShapeMaterial_m_data_set", _wrap_ndShapeMaterial_m_data_set, METH_VARARGS, NULL},
	 { "ndShapeMaterial_m_data_get", _wrap_ndShapeMaterial_m_data_get, METH_O, NULL},
	 { "ndShapeMaterial_m_userParam_set", _wrap_ndShapeMaterial_m_userParam_set, METH_VARARGS, NULL},
	 { "ndShapeMaterial_m_userParam_get", _wrap_ndShapeMaterial_m_userParam_get, METH_O, NULL},
	 { "delete_ndShapeMaterial", _wrap_delete_ndShapeMaterial, METH_O, NULL},
	 { "ndShapeMaterial_swigregister", ndShapeMaterial_swigregister, METH_O, NULL},
	 { "ndShapeMaterial_swiginit", ndShapeMaterial_swiginit, METH_VARARGS, NULL},
	 { "ndBoxInfo_m_x_set", _wrap_ndBoxInfo_m_x_set, METH_VARARGS, NULL},
	 { "ndBoxInfo_m_x_get", _wrap_ndBoxInfo_m_x_get, METH_O, NULL},
	 { "ndBoxInfo_m_y_set", _wrap_ndBoxInfo_m_y_set, METH_VARARGS, NULL},
	 { "ndBoxInfo_m_y_get", _wrap_ndBoxInfo_m_y_get, METH_O, NULL},
	 { "ndBoxInfo_m_z_set", _wrap_ndBoxInfo_m_z_set, METH_VARARGS, NULL},
	 { "ndBoxInfo_m_z_get", _wrap_ndBoxInfo_m_z_get, METH_O, NULL},
	 { "new_ndBoxInfo", _wrap_new_ndBoxInfo, METH_NOARGS, NULL},
	 { "delete_ndBoxInfo", _wrap_delete_ndBoxInfo, METH_O, NULL},
	 { "ndBoxInfo_swigregister", ndBoxInfo_swigregister, METH_O, NULL},
	 { "ndBoxInfo_swiginit", ndBoxInfo_swiginit, METH_VARARGS, NULL},
	 { "ndPointInfo_m_noUsed_set", _wrap_ndPointInfo_m_noUsed_set, METH_VARARGS, NULL},
	 { "ndPointInfo_m_noUsed_get", _wrap_ndPointInfo_m_noUsed_get, METH_O, NULL},
	 { "new_ndPointInfo", _wrap_new_ndPointInfo, METH_NOARGS, NULL},
	 { "delete_ndPointInfo", _wrap_delete_ndPointInfo, METH_O, NULL},
	 { "ndPointInfo_swigregister", ndPointInfo_swigregister, METH_O, NULL},
	 { "ndPointInfo_swiginit", ndPointInfo_swiginit, METH_VARARGS, NULL},
	 { "ndSphereInfo_m_radius_set", _wrap_ndSphereInfo_m_radius_set, METH_VARARGS, NULL},
	 { "ndSphereInfo_m_radius_get", _wrap_ndSphereInfo_m_radius_get, METH_O, NULL},
	 { "new_ndSphereInfo", _wrap_new_ndSphereInfo, METH_NOARGS, NULL},
	 { "delete_ndSphereInfo", _wrap_delete_ndSphereInfo, METH_O, NULL},
	 { "ndSphereInfo_swigregister", ndSphereInfo_swigregister, METH_O, NULL},
	 { "ndSphereInfo_swiginit", ndSphereInfo_swiginit, METH_VARARGS, NULL},
	 { "ndCylinderInfo_m_radio0_set", _wrap_ndCylinderInfo_m_radio0_set, METH_VARARGS, NULL},
	 { "ndCylinderInfo_m_radio0_get", _wrap_ndCylinderInfo_m_radio0_get, METH_O, NULL},
	 { "ndCylinderInfo_m_radio1_set", _wrap_ndCylinderInfo_m_radio1_set, METH_VARARGS, NULL},
	 { "ndCylinderInfo_m_radio1_get", _wrap_ndCylinderInfo_m_radio1_get, METH_O, NULL},
	 { "ndCylinderInfo_m_height_set", _wrap_ndCylinderInfo_m_height_set, METH_VARARGS, NULL},
	 { "ndCylinderInfo_m_height_get", _wrap_ndCylinderInfo_m_height_get, METH_O, NULL},
	 { "new_ndCylinderInfo", _wrap_new_ndCylinderInfo, METH_NOARGS, NULL},
	 { "delete_ndCylinderInfo", _wrap_delete_ndCylinderInfo, METH_O, NULL},
	 { "ndCylinderInfo_swigregister", ndCylinderInfo_swigregister, METH_O, NULL},
	 { "ndCylinderInfo_swiginit", ndCylinderInfo_swiginit, METH_VARARGS, NULL},
	 { "ndCapsuleInfo_m_radio0_set", _wrap_ndCapsuleInfo_m_radio0_set, METH_VARARGS, NULL},
	 { "ndCapsuleInfo_m_radio0_get", _wrap_ndCapsuleInfo_m_radio0_get, METH_O, NULL},
	 { "ndCapsuleInfo_m_radio1_set", _wrap_ndCapsuleInfo_m_radio1_set, METH_VARARGS, NULL},
	 { "ndCapsuleInfo_m_radio1_get", _wrap_ndCapsuleInfo_m_radio1_get, METH_O, NULL},
	 { "ndCapsuleInfo_m_height_set", _wrap_ndCapsuleInfo_m_height_set, METH_VARARGS, NULL},
	 { "ndCapsuleInfo_m_height_get", _wrap_ndCapsuleInfo_m_height_get, METH_O, NULL},
	 { "new_ndCapsuleInfo", _wrap_new_ndCapsuleInfo, METH_NOARGS, NULL},
	 { "delete_ndCapsuleInfo", _wrap_delete_ndCapsuleInfo, METH_O, NULL},
	 { "ndCapsuleInfo_swigregister", ndCapsuleInfo_swigregister, METH_O, NULL},
	 { "ndCapsuleInfo_swiginit", ndCapsuleInfo_swiginit, METH_VARARGS, NULL},
	 { "ndConeInfo_m_radius_set", _wrap_ndConeInfo_m_radius_set, METH_VARARGS, NULL},
	 { "ndConeInfo_m_radius_get", _wrap_ndConeInfo_m_radius_get, METH_O, NULL},
	 { "ndConeInfo_m_height_set", _wrap_ndConeInfo_m_height_set, METH_VARARGS, NULL},
	 { "ndConeInfo_m_height_get", _wrap_ndConeInfo_m_height_get, METH_O, NULL},
	 { "new_ndConeInfo", _wrap_new_ndConeInfo, METH_NOARGS, NULL},
	 { "delete_ndConeInfo", _wrap_delete_ndConeInfo, METH_O, NULL},
	 { "ndConeInfo_swigregister", ndConeInfo_swigregister, METH_O, NULL},
	 { "ndConeInfo_swiginit", ndConeInfo_swiginit, METH_VARARGS, NULL},
	 { "ndChamferCylinderInfo_m_r_set", _wrap_ndChamferCylinderInfo_m_r_set, METH_VARARGS, NULL},
	 { "ndChamferCylinderInfo_m_r_get", _wrap_ndChamferCylinderInfo_m_r_get, METH_O, NULL},
	 { "ndChamferCylinderInfo_m_height_set", _wrap_ndChamferCylinderInfo_m_height_set, METH_VARARGS, NULL},
	 { "ndChamferCylinderInfo_m_height_get", _wrap_ndChamferCylinderInfo_m_height_get, METH_O, NULL},
	 { "new_ndChamferCylinderInfo", _wrap_new_ndChamferCylinderInfo, METH_NOARGS, NULL},
	 { "delete_ndChamferCylinderInfo", _wrap_delete_ndChamferCylinderInfo, METH_O, NULL},
	 { "ndChamferCylinderInfo_swigregister", ndChamferCylinderInfo_swigregister, METH_O, NULL},
	 { "ndChamferCylinderInfo_swiginit", ndChamferCylinderInfo_swiginit, METH_VARARGS, NULL},
	 { "ndConvexHullInfo_m_vertexCount_set", _wrap_ndConvexHullInfo_m_vertexCount_set, METH_VARARGS, NULL},
	 { "ndConvexHullInfo_m_vertexCount_get", _wrap_ndConvexHullInfo_m_vertexCount_get, METH_O, NULL},
	 { "ndConvexHullInfo_m_strideInBytes_set", _wrap_ndConvexHullInfo_m_strideInBytes_set, METH_VARARGS, NULL},
	 { "ndConvexHullInfo_m_strideInBytes_get", _wrap_ndConvexHullInfo_m_strideInBytes_get, METH_O, NULL},
	 { "ndConvexHullInfo_m_faceCount_set", _wrap_ndConvexHullInfo_m_faceCount_set, METH_VARARGS, NULL},
	 { "ndConvexHullInfo_m_faceCount_get", _wrap_ndConvexHullInfo_m_faceCount_get, METH_O, NULL},
	 { "ndConvexHullInfo_m_vertex_set", _wrap_ndConvexHullInfo_m_vertex_set, METH_VARARGS, NULL},
	 { "ndConvexHullInfo_m_vertex_get", _wrap_ndConvexHullInfo_m_vertex_get, METH_O, NULL},
	 { "new_ndConvexHullInfo", _wrap_new_ndConvexHullInfo, METH_NOARGS, NULL},
	 { "delete_ndConvexHullInfo", _wrap_delete_ndConvexHullInfo, METH_O, NULL},
	 { "ndConvexHullInfo_swigregister", ndConvexHullInfo_swigregister, METH_O, NULL},
	 { "ndConvexHullInfo_swiginit", ndConvexHullInfo_swiginit, METH_VARARGS, NULL},
	 { "ndCoumpoundInfo_m_noUsed_set", _wrap_ndCoumpoundInfo_m_noUsed_set, METH_VARARGS, NULL},
	 { "ndCoumpoundInfo_m_noUsed_get", _wrap_ndCoumpoundInfo_m_noUsed_get, METH_O, NULL},
	 { "new_ndCoumpoundInfo", _wrap_new_ndCoumpoundInfo, METH_NOARGS, NULL},
	 { "delete_ndCoumpoundInfo", _wrap_delete_ndCoumpoundInfo, METH_O, NULL},
	 { "ndCoumpoundInfo_swigregister", ndCoumpoundInfo_swigregister, METH_O, NULL},
	 { "ndCoumpoundInfo_swiginit", ndCoumpoundInfo_swiginit, METH_VARARGS, NULL},
	 { "ndProceduralInfoInfo_m_noUsed_set", _wrap_ndProceduralInfoInfo_m_noUsed_set, METH_VARARGS, NULL},
	 { "ndProceduralInfoInfo_m_noUsed_get", _wrap_ndProceduralInfoInfo_m_noUsed_get, METH_O, NULL},
	 { "new_ndProceduralInfoInfo", _wrap_new_ndProceduralInfoInfo, METH_NOARGS, NULL},
	 { "delete_ndProceduralInfoInfo", _wrap_delete_ndProceduralInfoInfo, METH_O, NULL},
	 { "ndProceduralInfoInfo_swigregister", ndProceduralInfoInfo_swigregister, METH_O, NULL},
	 { "ndProceduralInfoInfo_swiginit", ndProceduralInfoInfo_swiginit, METH_VARARGS, NULL},
	 { "ndCollisionBvhInfo_m_vertexCount_set", _wrap_ndCollisionBvhInfo_m_vertexCount_set, METH_VARARGS, NULL},
	 { "ndCollisionBvhInfo_m_vertexCount_get", _wrap_ndCollisionBvhInfo_m_vertexCount_get, METH_O, NULL},
	 { "ndCollisionBvhInfo_m_indexCount_set", _wrap_ndCollisionBvhInfo_m_indexCount_set, METH_VARARGS, NULL},
	 { "ndCollisionBvhInfo_m_indexCount_get", _wrap_ndCollisionBvhInfo_m_indexCount_get, METH_O, NULL},
	 { "new_ndCollisionBvhInfo", _wrap_new_ndCollisionBvhInfo, METH_NOARGS, NULL},
	 { "delete_ndCollisionBvhInfo", _wrap_delete_ndCollisionBvhInfo, METH_O, NULL},
	 { "ndCollisionBvhInfo_swigregister", ndCollisionBvhInfo_swigregister, METH_O, NULL},
	 { "ndCollisionBvhInfo_swiginit", ndCollisionBvhInfo_swiginit, METH_VARARGS, NULL},
	 { "ndHeighfieldInfo_m_width_set", _wrap_ndHeighfieldInfo_m_width_set, METH_VARARGS, NULL},
	 { "ndHeighfieldInfo_m_width_get", _wrap_ndHeighfieldInfo_m_width_get, METH_O, NULL},
	 { "ndHeighfieldInfo_m_height_set", _wrap_ndHeighfieldInfo_m_height_set, METH_VARARGS, NULL},
	 { "ndHeighfieldInfo_m_height_get", _wrap_ndHeighfieldInfo_m_height_get, METH_O, NULL},
	 { "ndHeighfieldInfo_m_gridsDiagonals_set", _wrap_ndHeighfieldInfo_m_gridsDiagonals_set, METH_VARARGS, NULL},
	 { "ndHeighfieldInfo_m_gridsDiagonals_get", _wrap_ndHeighfieldInfo_m_gridsDiagonals_get, METH_O, NULL},
	 { "ndHeighfieldInfo_m_verticalScale_set", _wrap_ndHeighfieldInfo_m_verticalScale_set, METH_VARARGS, NULL},
	 { "ndHeighfieldInfo_m_verticalScale_get", _wrap_ndHeighfieldInfo_m_verticalScale_get, METH_O, NULL},
	 { "ndHeighfieldInfo_m_horizonalScale_x_set", _wrap_ndHeighfieldInfo_m_horizonalScale_x_set, METH_VARARGS, NULL},
	 { "ndHeighfieldInfo_m_horizonalScale_x_get", _wrap_ndHeighfieldInfo_m_horizonalScale_x_get, METH_O, NULL},
	 { "ndHeighfieldInfo_m_horizonalScale_z_set", _wrap_ndHeighfieldInfo_m_horizonalScale_z_set, METH_VARARGS, NULL},
	 { "ndHeighfieldInfo_m_horizonalScale_z_get", _wrap_ndHeighfieldInfo_m_horizonalScale_z_get, METH_O, NULL},
	 { "ndHeighfieldInfo_m_elevation_set", _wrap_ndHeighfieldInfo_m_elevation_set, METH_VARARGS, NULL},
	 { "ndHeighfieldInfo_m_elevation_get", _wrap_ndHeighfieldInfo_m_elevation_get, METH_O, NULL},
	 { "ndHeighfieldInfo_m_atributes_set", _wrap_ndHeighfieldInfo_m_atributes_set, METH_VARARGS, NULL},
	 { "ndHeighfieldInfo_m_atributes_get", _wrap_ndHeighfieldInfo_m_atributes_get, METH_O, NULL},
	 { "new_ndHeighfieldInfo", _wrap_new_ndHeighfieldInfo, METH_NOARGS, NULL},
	 { "delete_ndHeighfieldInfo", _wrap_delete_ndHeighfieldInfo, METH_O, NULL},
	 { "ndHeighfieldInfo_swigregister", ndHeighfieldInfo_swigregister, METH_O, NULL},
	 { "ndHeighfieldInfo_swiginit", ndHeighfieldInfo_swiginit, METH_VARARGS, NULL},
	 { "ndShapeInfo_m_offsetMatrix_set", _wrap_ndShapeInfo_m_offsetMatrix_set, METH_VARARGS, NULL},
	 { "ndShapeInfo_m_offsetMatrix_get", _wrap_ndShapeInfo_m_offsetMatrix_get, METH_O, NULL},
	 { "ndShapeInfo_m_scale_set", _wrap_ndShapeInfo_m_scale_set, METH_VARARGS, NULL},
	 { "ndShapeInfo_m_scale_get", _wrap_ndShapeInfo_m_scale_get, METH_O, NULL},
	 { "ndShapeInfo_m_shapeMaterial_set", _wrap_ndShapeInfo_m_shapeMaterial_set, METH_VARARGS, NULL},
	 { "ndShapeInfo_m_shapeMaterial_get", _wrap_ndShapeInfo_m_shapeMaterial_get, METH_O, NULL},
	 { "ndShapeInfo_m_collisionType_set", _wrap_ndShapeInfo_m_collisionType_set, METH_VARARGS, NULL},
	 { "ndShapeInfo_m_collisionType_get", _wrap_ndShapeInfo_m_collisionType_get, METH_O, NULL},
	 { "new_ndShapeInfo", _wrap_new_ndShapeInfo, METH_NOARGS, NULL},
	 { "delete_ndShapeInfo", _wrap_delete_ndShapeInfo, METH_O, NULL},
	 { "ndShapeInfo_swigregister", ndShapeInfo_swigregister, METH_O, NULL},
	 { "ndShapeInfo_swiginit", ndShapeInfo_swiginit, METH_VARARGS, NULL},
	 { "ndShape_GetRefCount", _wrap_ndShape_GetRefCount, METH_O, NULL},
	 { "ndShape_Release", _wrap_ndShape_Release, METH_O, NULL},
	 { "ndShape_AddRef", _wrap_ndShape_AddRef, METH_O, NULL},
	 { "ndShape_GetAsShapeBox", _wrap_ndShape_GetAsShapeBox, METH_O, NULL},
	 { "ndShape_GetAsShapeNull", _wrap_ndShape_GetAsShapeNull, METH_O, NULL},
	 { "ndShape_GetAsShapeCone", _wrap_ndShape_GetAsShapeCone, METH_O, NULL},
	 { "ndShape_GetAsShapePoint", _wrap_ndShape_GetAsShapePoint, METH_O, NULL},
	 { "ndShape_GetAsShapeConvex", _wrap_ndShape_GetAsShapeConvex, METH_O, NULL},
	 { "ndShape_GetAsShapeSphere", _wrap_ndShape_GetAsShapeSphere, METH_O, NULL},
	 { "ndShape_GetAsShapeCapsule", _wrap_ndShape_GetAsShapeCapsule, METH_O, NULL},
	 { "ndShape_GetAsShapeCylinder", _wrap_ndShape_GetAsShapeCylinder, METH_O, NULL},
	 { "ndShape_GetAsShapeCompound", _wrap_ndShape_GetAsShapeCompound, METH_O, NULL},
	 { "ndShape_GetAsShapeStaticBVH", _wrap_ndShape_GetAsShapeStaticBVH, METH_O, NULL},
	 { "ndShape_GetAsShapeStaticMesh", _wrap_ndShape_GetAsShapeStaticMesh, METH_O, NULL},
	 { "ndShape_GetAsShapeHeightfield", _wrap_ndShape_GetAsShapeHeightfield, METH_O, NULL},
	 { "ndShape_GetAsShapeAsConvexPolygon", _wrap_ndShape_GetAsShapeAsConvexPolygon, METH_O, NULL},
	 { "ndShape_GetAsShapeChamferCylinder", _wrap_ndShape_GetAsShapeChamferCylinder, METH_O, NULL},
	 { "ndShape_GetAsShapeStaticProceduralMesh", _wrap_ndShape_GetAsShapeStaticProceduralMesh, METH_O, NULL},
	 { "ndShape_GetConvexVertexCount", _wrap_ndShape_GetConvexVertexCount, METH_O, NULL},
	 { "ndShape_GetObbSize", _wrap_ndShape_GetObbSize, METH_O, NULL},
	 { "ndShape_GetObbOrigin", _wrap_ndShape_GetObbOrigin, METH_O, NULL},
	 { "ndShape_GetUmbraClipSize", _wrap_ndShape_GetUmbraClipSize, METH_O, NULL},
	 { "ndShape_MassProperties", _wrap_ndShape_MassProperties, METH_O, NULL},
	 { "ndShape_DebugShape", _wrap_ndShape_DebugShape, METH_VARARGS, NULL},
	 { "ndShape_GetShapeInfo", _wrap_ndShape_GetShapeInfo, METH_O, NULL},
	 { "ndShape_GetVolume", _wrap_ndShape_GetVolume, METH_O, NULL},
	 { "ndShape_GetBoxMinRadius", _wrap_ndShape_GetBoxMinRadius, METH_O, NULL},
	 { "ndShape_GetBoxMaxRadius", _wrap_ndShape_GetBoxMaxRadius, METH_O, NULL},
	 { "ndShape_CalculateAabb", _wrap_ndShape_CalculateAabb, METH_VARARGS, NULL},
	 { "ndShape_SupportVertex", _wrap_ndShape_SupportVertex, METH_VARARGS, NULL},
	 { "ndShape_SupportVertexSpecialProjectPoint", _wrap_ndShape_SupportVertexSpecialProjectPoint, METH_VARARGS, NULL},
	 { "ndShape_SupportVertexSpecial", _wrap_ndShape_SupportVertexSpecial, METH_VARARGS, NULL},
	 { "ndShape_CalculatePlaneIntersection", _wrap_ndShape_CalculatePlaneIntersection, METH_VARARGS, NULL},
	 { "ndShape_CalculateVolumeIntegral", _wrap_ndShape_CalculateVolumeIntegral, METH_VARARGS, NULL},
	 { "ndShape_RayCast", _wrap_ndShape_RayCast, METH_VARARGS, NULL},
	 { "ndShape_CalculateInertiaAndCenterOfMass", _wrap_ndShape_CalculateInertiaAndCenterOfMass, METH_VARARGS, NULL},
	 { "ndShape_CalculateMassProperties", _wrap_ndShape_CalculateMassProperties, METH_VARARGS, NULL},
	 { "ndShape_Save", _wrap_ndShape_Save, METH_VARARGS, NULL},
	 { "ndShape_swigregister", ndShape_swigregister, METH_O, NULL},
	 { "new_ndShapeBox", _wrap_new_ndShapeBox, METH_VARARGS, NULL},
	 { "delete_ndShapeBox", _wrap_delete_ndShapeBox, METH_O, NULL},
	 { "ndShapeBox_GetAsShapeBox", _wrap_ndShapeBox_GetAsShapeBox, METH_O, NULL},
	 { "ndShapeBox_swigregister", ndShapeBox_swigregister, METH_O, NULL},
	 { "ndShapeBox_swiginit", ndShapeBox_swiginit, METH_VARARGS, NULL},
	 { "new_ndShapeCone", _wrap_new_ndShapeCone, METH_VARARGS, NULL},
	 { "delete_ndShapeCone", _wrap_delete_ndShapeCone, METH_O, NULL},
	 { "ndShapeCone_GetAsShapeCone", _wrap_ndShapeCone_GetAsShapeCone, METH_O, NULL},
	 { "ndShapeCone_swigregister", ndShapeCone_swigregister, METH_O, NULL},
	 { "ndShapeCone_swiginit", ndShapeCone_swiginit, METH_VARARGS, NULL},
	 { "ndShapeConvex_swigregister", ndShapeConvex_swigregister, METH_O, NULL},
	 { "new_ndShapeSphere", _wrap_new_ndShapeSphere, METH_VARARGS, NULL},
	 { "delete_ndShapeSphere", _wrap_delete_ndShapeSphere, METH_O, NULL},
	 { "ndShapeSphere_GetAsShapeSphere", _wrap_ndShapeSphere_GetAsShapeSphere, METH_O, NULL},
	 { "ndShapeSphere_swigregister", ndShapeSphere_swigregister, METH_O, NULL},
	 { "ndShapeSphere_swiginit", ndShapeSphere_swiginit, METH_VARARGS, NULL},
	 { "new_ndShapeCapsule", _wrap_new_ndShapeCapsule, METH_VARARGS, NULL},
	 { "ndShapeCapsule_GetAsShapeCapsule", _wrap_ndShapeCapsule_GetAsShapeCapsule, METH_O, NULL},
	 { "delete_ndShapeCapsule", _wrap_delete_ndShapeCapsule, METH_O, NULL},
	 { "ndShapeCapsule_swigregister", ndShapeCapsule_swigregister, METH_O, NULL},
	 { "ndShapeCapsule_swiginit", ndShapeCapsule_swiginit, METH_VARARGS, NULL},
	 { "new_ndShapeCompound", _wrap_new_ndShapeCompound, METH_VARARGS, NULL},
	 { "delete_ndShapeCompound", _wrap_delete_ndShapeCompound, METH_O, NULL},
	 { "ndShapeCompound_SetOwner", _wrap_ndShapeCompound_SetOwner, METH_VARARGS, NULL},
	 { "ndShapeCompound_GetTree", _wrap_ndShapeCompound_GetTree, METH_O, NULL},
	 { "ndShapeCompound_BeginAddRemove", _wrap_ndShapeCompound_BeginAddRemove, METH_O, NULL},
	 { "ndShapeCompound_AddCollision", _wrap_ndShapeCompound_AddCollision, METH_VARARGS, NULL},
	 { "ndShapeCompound_EndAddRemove", _wrap_ndShapeCompound_EndAddRemove, METH_O, NULL},
	 { "ndShapeCompound_swigregister", ndShapeCompound_swigregister, METH_O, NULL},
	 { "ndShapeCompound_swiginit", ndShapeCompound_swiginit, METH_VARARGS, NULL},
	 { "new_ndShapeCylinder", _wrap_new_ndShapeCylinder, METH_VARARGS, NULL},
	 { "delete_ndShapeCylinder", _wrap_delete_ndShapeCylinder, METH_O, NULL},
	 { "ndShapeCylinder_GetAsShapeCylinder", _wrap_ndShapeCylinder_GetAsShapeCylinder, METH_O, NULL},
	 { "ndShapeCylinder_swigregister", ndShapeCylinder_swigregister, METH_O, NULL},
	 { "ndShapeCylinder_swiginit", ndShapeCylinder_swiginit, METH_VARARGS, NULL},
	 { "new_ndShapeStatic_bvh", _wrap_new_ndShapeStatic_bvh, METH_VARARGS, NULL},
	 { "delete_ndShapeStatic_bvh", _wrap_delete_ndShapeStatic_bvh, METH_O, NULL},
	 { "ndShapeStatic_bvh_swigregister", ndShapeStatic_bvh_swigregister, METH_O, NULL},
	 { "ndShapeStatic_bvh_swiginit", ndShapeStatic_bvh_swiginit, METH_VARARGS, NULL},
	 { "new_ndPolygonMeshDesc", _wrap_new_ndPolygonMeshDesc, METH_VARARGS, NULL},
	 { "ndPolygonMeshDesc_SortFaceArray", _wrap_ndPolygonMeshDesc_SortFaceArray, METH_O, NULL},
	 { "ndPolygonMeshDesc_GetSeparetionDistance", _wrap_ndPolygonMeshDesc_GetSeparetionDistance, METH_O, NULL},
	 { "ndPolygonMeshDesc_SetDistanceTravel", _wrap_ndPolygonMeshDesc_SetDistanceTravel, METH_VARARGS, NULL},
	 { "ndPolygonMeshDesc_GetFaceIndexCount", _wrap_ndPolygonMeshDesc_GetFaceIndexCount, METH_VARARGS, NULL},
	 { "ndPolygonMeshDesc_GetAdjacentFaceEdgeNormalArray", _wrap_ndPolygonMeshDesc_GetAdjacentFaceEdgeNormalArray, METH_VARARGS, NULL},
	 { "ndPolygonMeshDesc_GetNormalIndex", _wrap_ndPolygonMeshDesc_GetNormalIndex, METH_VARARGS, NULL},
	 { "ndPolygonMeshDesc_GetFaceId", _wrap_ndPolygonMeshDesc_GetFaceId, METH_VARARGS, NULL},
	 { "ndPolygonMeshDesc_GetFaceSize", _wrap_ndPolygonMeshDesc_GetFaceSize, METH_VARARGS, NULL},
	 { "ndPolygonMeshDesc_m_boxDistanceTravelInMeshSpace_set", _wrap_ndPolygonMeshDesc_m_boxDistanceTravelInMeshSpace_set, METH_VARARGS, NULL},
	 { "ndPolygonMeshDesc_m_boxDistanceTravelInMeshSpace_get", _wrap_ndPolygonMeshDesc_m_boxDistanceTravelInMeshSpace_get, METH_O, NULL},
	 { "ndPolygonMeshDesc_m_faceCount_set", _wrap_ndPolygonMeshDesc_m_faceCount_set, METH_VARARGS, NULL},
	 { "ndPolygonMeshDesc_m_faceCount_get", _wrap_ndPolygonMeshDesc_m_faceCount_get, METH_O, NULL},
	 { "ndPolygonMeshDesc_m_vertexStrideInBytes_set", _wrap_ndPolygonMeshDesc_m_vertexStrideInBytes_set, METH_VARARGS, NULL},
	 { "ndPolygonMeshDesc_m_vertexStrideInBytes_get", _wrap_ndPolygonMeshDesc_m_vertexStrideInBytes_get, METH_O, NULL},
	 { "ndPolygonMeshDesc_m_skinThickness_set", _wrap_ndPolygonMeshDesc_m_skinThickness_set, METH_VARARGS, NULL},
	 { "ndPolygonMeshDesc_m_skinThickness_get", _wrap_ndPolygonMeshDesc_m_skinThickness_get, METH_O, NULL},
	 { "ndPolygonMeshDesc_m_userData_set", _wrap_ndPolygonMeshDesc_m_userData_set, METH_VARARGS, NULL},
	 { "ndPolygonMeshDesc_m_userData_get", _wrap_ndPolygonMeshDesc_m_userData_get, METH_O, NULL},
	 { "ndPolygonMeshDesc_m_convexInstance_set", _wrap_ndPolygonMeshDesc_m_convexInstance_set, METH_VARARGS, NULL},
	 { "ndPolygonMeshDesc_m_convexInstance_get", _wrap_ndPolygonMeshDesc_m_convexInstance_get, METH_O, NULL},
	 { "ndPolygonMeshDesc_m_polySoupInstance_set", _wrap_ndPolygonMeshDesc_m_polySoupInstance_set, METH_VARARGS, NULL},
	 { "ndPolygonMeshDesc_m_polySoupInstance_get", _wrap_ndPolygonMeshDesc_m_polySoupInstance_get, METH_O, NULL},
	 { "ndPolygonMeshDesc_m_vertex_set", _wrap_ndPolygonMeshDesc_m_vertex_set, METH_VARARGS, NULL},
	 { "ndPolygonMeshDesc_m_vertex_get", _wrap_ndPolygonMeshDesc_m_vertex_get, METH_O, NULL},
	 { "ndPolygonMeshDesc_m_faceIndexCount_set", _wrap_ndPolygonMeshDesc_m_faceIndexCount_set, METH_VARARGS, NULL},
	 { "ndPolygonMeshDesc_m_faceIndexCount_get", _wrap_ndPolygonMeshDesc_m_faceIndexCount_get, METH_O, NULL},
	 { "ndPolygonMeshDesc_m_faceVertexIndex_set", _wrap_ndPolygonMeshDesc_m_faceVertexIndex_set, METH_VARARGS, NULL},
	 { "ndPolygonMeshDesc_m_faceVertexIndex_get", _wrap_ndPolygonMeshDesc_m_faceVertexIndex_get, METH_O, NULL},
	 { "ndPolygonMeshDesc_m_faceIndexStart_set", _wrap_ndPolygonMeshDesc_m_faceIndexStart_set, METH_VARARGS, NULL},
	 { "ndPolygonMeshDesc_m_faceIndexStart_get", _wrap_ndPolygonMeshDesc_m_faceIndexStart_get, METH_O, NULL},
	 { "ndPolygonMeshDesc_m_hitDistance_set", _wrap_ndPolygonMeshDesc_m_hitDistance_set, METH_VARARGS, NULL},
	 { "ndPolygonMeshDesc_m_hitDistance_get", _wrap_ndPolygonMeshDesc_m_hitDistance_get, METH_O, NULL},
	 { "ndPolygonMeshDesc_m_me_set", _wrap_ndPolygonMeshDesc_m_me_set, METH_VARARGS, NULL},
	 { "ndPolygonMeshDesc_m_me_get", _wrap_ndPolygonMeshDesc_m_me_get, METH_O, NULL},
	 { "ndPolygonMeshDesc_m_globalIndexCount_set", _wrap_ndPolygonMeshDesc_m_globalIndexCount_set, METH_VARARGS, NULL},
	 { "ndPolygonMeshDesc_m_globalIndexCount_get", _wrap_ndPolygonMeshDesc_m_globalIndexCount_get, METH_O, NULL},
	 { "ndPolygonMeshDesc_m_maxT_set", _wrap_ndPolygonMeshDesc_m_maxT_set, METH_VARARGS, NULL},
	 { "ndPolygonMeshDesc_m_maxT_get", _wrap_ndPolygonMeshDesc_m_maxT_get, METH_O, NULL},
	 { "ndPolygonMeshDesc_m_doContinuesCollisionTest_set", _wrap_ndPolygonMeshDesc_m_doContinuesCollisionTest_set, METH_VARARGS, NULL},
	 { "ndPolygonMeshDesc_m_doContinuesCollisionTest_get", _wrap_ndPolygonMeshDesc_m_doContinuesCollisionTest_get, METH_O, NULL},
	 { "ndPolygonMeshDesc_m_globalFaceVertexIndex_set", _wrap_ndPolygonMeshDesc_m_globalFaceVertexIndex_set, METH_VARARGS, NULL},
	 { "ndPolygonMeshDesc_m_globalFaceVertexIndex_get", _wrap_ndPolygonMeshDesc_m_globalFaceVertexIndex_get, METH_O, NULL},
	 { "ndPolygonMeshDesc_m_meshData_set", _wrap_ndPolygonMeshDesc_m_meshData_set, METH_VARARGS, NULL},
	 { "ndPolygonMeshDesc_m_meshData_get", _wrap_ndPolygonMeshDesc_m_meshData_get, METH_O, NULL},
	 { "delete_ndPolygonMeshDesc", _wrap_delete_ndPolygonMeshDesc, METH_O, NULL},
	 { "ndPolygonMeshDesc_swigregister", ndPolygonMeshDesc_swigregister, METH_O, NULL},
	 { "ndPolygonMeshDesc_swiginit", ndPolygonMeshDesc_swiginit, METH_VARARGS, NULL},
	 { "new_ndShapeStaticMesh", _wrap_new_ndShapeStaticMesh, METH_VARARGS, NULL},
	 { "delete_ndShapeStaticMesh", _wrap_delete_ndShapeStaticMesh, METH_O, NULL},
	 { "ndShapeStaticMesh_GetCollidingFaces", _wrap_ndShapeStaticMesh_GetCollidingFaces, METH_VARARGS, NULL},
	 { "ndShapeStaticMesh_swigregister", ndShapeStaticMesh_swigregister, METH_O, NULL},
	 { "ndShapeStaticMesh_swiginit", ndShapeStaticMesh_swiginit, METH_VARARGS, NULL},
	 { "new_ndShapeConvexHull", _wrap_new_ndShapeConvexHull, METH_VARARGS, NULL},
	 { "delete_ndShapeConvexHull", _wrap_delete_ndShapeConvexHull, METH_O, NULL},
	 { "ndShapeConvexHull_swigregister", ndShapeConvexHull_swigregister, METH_O, NULL},
	 { "ndShapeConvexHull_swiginit", ndShapeConvexHull_swiginit, METH_VARARGS, NULL},
	 { "new_ndShapeHeightfield", _wrap_new_ndShapeHeightfield, METH_VARARGS, NULL},
	 { "delete_ndShapeHeightfield", _wrap_delete_ndShapeHeightfield, METH_O, NULL},
	 { "ndShapeHeightfield_GetElevationMap", _wrap_ndShapeHeightfield_GetElevationMap, METH_VARARGS, NULL},
	 { "ndShapeHeightfield_UpdateElevationMapAabb", _wrap_ndShapeHeightfield_UpdateElevationMapAabb, METH_O, NULL},
	 { "ndShapeHeightfield_GetLocalAabb", _wrap_ndShapeHeightfield_GetLocalAabb, METH_VARARGS, NULL},
	 { "ndShapeHeightfield_swigregister", ndShapeHeightfield_swigregister, METH_O, NULL},
	 { "ndShapeHeightfield_swiginit", ndShapeHeightfield_swiginit, METH_VARARGS, NULL},
	 { "new_ndShapeChamferCylinder", _wrap_new_ndShapeChamferCylinder, METH_VARARGS, NULL},
	 { "delete_ndShapeChamferCylinder", _wrap_delete_ndShapeChamferCylinder, METH_O, NULL},
	 { "ndShapeChamferCylinder_GetAsShapeChamferCylinder", _wrap_ndShapeChamferCylinder_GetAsShapeChamferCylinder, METH_O, NULL},
	 { "ndShapeChamferCylinder_swigregister", ndShapeChamferCylinder_swigregister, METH_O, NULL},
	 { "ndShapeChamferCylinder_swiginit", ndShapeChamferCylinder_swiginit, METH_VARARGS, NULL},
	 { "delete_ndShapeDebugCallback", _wrap_delete_ndShapeDebugCallback, METH_O, NULL},
	 { "ndShapeDebugCallback_DrawPolygon", _wrap_ndShapeDebugCallback_DrawPolygon, METH_VARARGS, NULL},
	 { "ndShapeDebugCallback_m_instance_set", _wrap_ndShapeDebugCallback_m_instance_set, METH_VARARGS, NULL},
	 { "ndShapeDebugCallback_m_instance_get", _wrap_ndShapeDebugCallback_m_instance_get, METH_O, NULL},
	 { "ndShapeDebugCallback_swigregister", ndShapeDebugCallback_swigregister, METH_O, NULL},
	 { "new_ndShapeInstance", _wrap_new_ndShapeInstance, METH_VARARGS, NULL},
	 { "delete_ndShapeInstance", _wrap_delete_ndShapeInstance, METH_O, NULL},
	 { "ndShapeInstance_Assigment", _wrap_ndShapeInstance_Assigment, METH_VARARGS, NULL},
	 { "ndShapeInstance_CalculateInertia", _wrap_ndShapeInstance_CalculateInertia, METH_O, NULL},
	 { "ndShapeInstance_CalculateObb", _wrap_ndShapeInstance_CalculateObb, METH_VARARGS, NULL},
	 { "ndShapeInstance_CalculateAabb", _wrap_ndShapeInstance_CalculateAabb, METH_VARARGS, NULL},
	 { "ndShapeInstance_DebugShape", _wrap_ndShapeInstance_DebugShape, METH_VARARGS, NULL},
	 { "ndShapeInstance_RayCast", _wrap_ndShapeInstance_RayCast, METH_VARARGS, NULL},
	 { "ndShapeInstance_GetShapeInfo", _wrap_ndShapeInstance_GetShapeInfo, METH_O, NULL},
	 { "ndShapeInstance_Save", _wrap_ndShapeInstance_Save, METH_VARARGS, NULL},
	 { "ndShapeInstance_CalculateBuoyancyCenterOfPresure", _wrap_ndShapeInstance_CalculateBuoyancyCenterOfPresure, METH_VARARGS, NULL},
	 { "ndShapeInstance_GetBoxPadding", _wrap_ndShapeInstance_GetBoxPadding, METH_NOARGS, NULL},
	 { "ndShapeInstance_GetShape", _wrap_ndShapeInstance_GetShape, METH_VARARGS, NULL},
	 { "ndShapeInstance_SupportVertex", _wrap_ndShapeInstance_SupportVertex, METH_VARARGS, NULL},
	 { "ndShapeInstance_GetScaledTransform", _wrap_ndShapeInstance_GetScaledTransform, METH_VARARGS, NULL},
	 { "ndShapeInstance_SupportVertexSpecial", _wrap_ndShapeInstance_SupportVertexSpecial, METH_VARARGS, NULL},
	 { "ndShapeInstance_SupportVertexSpecialProjectPoint", _wrap_ndShapeInstance_SupportVertexSpecialProjectPoint, METH_VARARGS, NULL},
	 { "ndShapeInstance_GetLocalMatrix", _wrap_ndShapeInstance_GetLocalMatrix, METH_O, NULL},
	 { "ndShapeInstance_SetLocalMatrix", _wrap_ndShapeInstance_SetLocalMatrix, METH_VARARGS, NULL},
	 { "ndShapeInstance_GetGlobalMatrix", _wrap_ndShapeInstance_GetGlobalMatrix, METH_O, NULL},
	 { "ndShapeInstance_SetGlobalMatrix", _wrap_ndShapeInstance_SetGlobalMatrix, METH_VARARGS, NULL},
	 { "ndShapeInstance_GetCollisionMode", _wrap_ndShapeInstance_GetCollisionMode, METH_O, NULL},
	 { "ndShapeInstance_SetCollisionMode", _wrap_ndShapeInstance_SetCollisionMode, METH_VARARGS, NULL},
	 { "ndShapeInstance_GetConvexVertexCount", _wrap_ndShapeInstance_GetConvexVertexCount, METH_O, NULL},
	 { "ndShapeInstance_GetMaterial", _wrap_ndShapeInstance_GetMaterial, METH_O, NULL},
	 { "ndShapeInstance_SetMaterial", _wrap_ndShapeInstance_SetMaterial, METH_VARARGS, NULL},
	 { "ndShapeInstance_GetScale", _wrap_ndShapeInstance_GetScale, METH_O, NULL},
	 { "ndShapeInstance_GetInvScale", _wrap_ndShapeInstance_GetInvScale, METH_O, NULL},
	 { "ndShapeInstance_SetScale", _wrap_ndShapeInstance_SetScale, METH_VARARGS, NULL},
	 { "ndShapeInstance_SetGlobalScale", _wrap_ndShapeInstance_SetGlobalScale, METH_VARARGS, NULL},
	 { "ndShapeInstance_CalculatePlaneIntersection", _wrap_ndShapeInstance_CalculatePlaneIntersection, METH_VARARGS, NULL},
	 { "ndShapeInstance_GetVolume", _wrap_ndShapeInstance_GetVolume, METH_O, NULL},
	 { "ndShapeInstance_GetBoxMinRadius", _wrap_ndShapeInstance_GetBoxMinRadius, METH_O, NULL},
	 { "ndShapeInstance_GetBoxMaxRadius", _wrap_ndShapeInstance_GetBoxMaxRadius, METH_O, NULL},
	 { "ndShapeInstance_GetScaleType", _wrap_ndShapeInstance_GetScaleType, METH_O, NULL},
	 { "ndShapeInstance_GetUmbraClipSize", _wrap_ndShapeInstance_GetUmbraClipSize, METH_O, NULL},
	 { "ndShapeInstance_GetUserDataID", _wrap_ndShapeInstance_GetUserDataID, METH_O, NULL},
	 { "ndShapeInstance_m_globalMatrix_set", _wrap_ndShapeInstance_m_globalMatrix_set, METH_VARARGS, NULL},
	 { "ndShapeInstance_m_globalMatrix_get", _wrap_ndShapeInstance_m_globalMatrix_get, METH_O, NULL},
	 { "ndShapeInstance_m_localMatrix_set", _wrap_ndShapeInstance_m_localMatrix_set, METH_VARARGS, NULL},
	 { "ndShapeInstance_m_localMatrix_get", _wrap_ndShapeInstance_m_localMatrix_get, METH_O, NULL},
	 { "ndShapeInstance_m_aligmentMatrix_set", _wrap_ndShapeInstance_m_aligmentMatrix_set, METH_VARARGS, NULL},
	 { "ndShapeInstance_m_aligmentMatrix_get", _wrap_ndShapeInstance_m_aligmentMatrix_get, METH_O, NULL},
	 { "ndShapeInstance_m_scale_set", _wrap_ndShapeInstance_m_scale_set, METH_VARARGS, NULL},
	 { "ndShapeInstance_m_scale_get", _wrap_ndShapeInstance_m_scale_get, METH_O, NULL},
	 { "ndShapeInstance_m_invScale_set", _wrap_ndShapeInstance_m_invScale_set, METH_VARARGS, NULL},
	 { "ndShapeInstance_m_invScale_get", _wrap_ndShapeInstance_m_invScale_get, METH_O, NULL},
	 { "ndShapeInstance_m_maxScale_set", _wrap_ndShapeInstance_m_maxScale_set, METH_VARARGS, NULL},
	 { "ndShapeInstance_m_maxScale_get", _wrap_ndShapeInstance_m_maxScale_get, METH_O, NULL},
	 { "ndShapeInstance_m_shapeMaterial_set", _wrap_ndShapeInstance_m_shapeMaterial_set, METH_VARARGS, NULL},
	 { "ndShapeInstance_m_shapeMaterial_get", _wrap_ndShapeInstance_m_shapeMaterial_get, METH_O, NULL},
	 { "ndShapeInstance_m_shape_set", _wrap_ndShapeInstance_m_shape_set, METH_VARARGS, NULL},
	 { "ndShapeInstance_m_shape_get", _wrap_ndShapeInstance_m_shape_get, METH_O, NULL},
	 { "ndShapeInstance_m_ownerBody_set", _wrap_ndShapeInstance_m_ownerBody_set, METH_VARARGS, NULL},
	 { "ndShapeInstance_m_ownerBody_get", _wrap_ndShapeInstance_m_ownerBody_get, METH_O, NULL},
	 { "ndShapeInstance_m_subCollisionHandle_set", _wrap_ndShapeInstance_m_subCollisionHandle_set, METH_VARARGS, NULL},
	 { "ndShapeInstance_m_subCollisionHandle_get", _wrap_ndShapeInstance_m_subCollisionHandle_get, METH_O, NULL},
	 { "ndShapeInstance_m_parent_set", _wrap_ndShapeInstance_m_parent_set, METH_VARARGS, NULL},
	 { "ndShapeInstance_m_parent_get", _wrap_ndShapeInstance_m_parent_get, METH_O, NULL},
	 { "ndShapeInstance_m_skinThickness_set", _wrap_ndShapeInstance_m_skinThickness_set, METH_VARARGS, NULL},
	 { "ndShapeInstance_m_skinThickness_get", _wrap_ndShapeInstance_m_skinThickness_get, METH_O, NULL},
	 { "ndShapeInstance_m_scaleType_set", _wrap_ndShapeInstance_m_scaleType_set, METH_VARARGS, NULL},
	 { "ndShapeInstance_m_scaleType_get", _wrap_ndShapeInstance_m_scaleType_get, METH_O, NULL},
	 { "ndShapeInstance_m_collisionMode_set", _wrap_ndShapeInstance_m_collisionMode_set, METH_VARARGS, NULL},
	 { "ndShapeInstance_m_collisionMode_get", _wrap_ndShapeInstance_m_collisionMode_get, METH_O, NULL},
	 { "ndShapeInstance_swigregister", ndShapeInstance_swigregister, METH_O, NULL},
	 { "ndShapeInstance_swiginit", ndShapeInstance_swiginit, METH_VARARGS, NULL},
	 { "delete_ndBody", _wrap_delete_ndBody, METH_O, NULL},
	 { "ndBody_GetAsBody", _wrap_ndBody_GetAsBody, METH_O, NULL},
	 { "ndBody_GetAsBodyDynamic", _wrap_ndBody_GetAsBodyDynamic, METH_O, NULL},
	 { "ndBody_GetAsBodySentinel", _wrap_ndBody_GetAsBodySentinel, METH_O, NULL},
	 { "ndBody_GetAsBodyKinematic", _wrap_ndBody_GetAsBodyKinematic, METH_O, NULL},
	 { "ndBody_GetAsBodyPlayerCapsule", _wrap_ndBody_GetAsBodyPlayerCapsule, METH_O, NULL},
	 { "ndBody_GetAsBodySphFluid", _wrap_ndBody_GetAsBodySphFluid, METH_O, NULL},
	 { "ndBody_GetAsBodyParticleSet", _wrap_ndBody_GetAsBodyParticleSet, METH_O, NULL},
	 { "ndBody_GetAsBodyTriggerVolume", _wrap_ndBody_GetAsBodyTriggerVolume, METH_O, NULL},
	 { "ndBody_GetId", _wrap_ndBody_GetId, METH_O, NULL},
	 { "ndBody_GetAABB", _wrap_ndBody_GetAABB, METH_VARARGS, NULL},
	 { "ndBody_GetInvMass", _wrap_ndBody_GetInvMass, METH_O, NULL},
	 { "ndBody_RayCast", _wrap_ndBody_RayCast, METH_VARARGS, NULL},
	 { "ndBody_GetCentreOfMass", _wrap_ndBody_GetCentreOfMass, METH_O, NULL},
	 { "ndBody_SetCentreOfMass", _wrap_ndBody_SetCentreOfMass, METH_VARARGS, NULL},
	 { "ndBody_GetNotifyCallback", _wrap_ndBody_GetNotifyCallback, METH_O, NULL},
	 { "ndBody_SetNotifyCallback", _wrap_ndBody_SetNotifyCallback, METH_VARARGS, NULL},
	 { "ndBody_GetOmega", _wrap_ndBody_GetOmega, METH_O, NULL},
	 { "ndBody_SetOmega", _wrap_ndBody_SetOmega, METH_VARARGS, NULL},
	 { "ndBody_GetVelocity", _wrap_ndBody_GetVelocity, METH_O, NULL},
	 { "ndBody_SetVelocity", _wrap_ndBody_SetVelocity, METH_VARARGS, NULL},
	 { "ndBody_GetMatrix", _wrap_ndBody_GetMatrix, METH_O, NULL},
	 { "ndBody_SetMatrix", _wrap_ndBody_SetMatrix, METH_VARARGS, NULL},
	 { "ndBody_GetRotation", _wrap_ndBody_GetRotation, METH_O, NULL},
	 { "ndBody_Save", _wrap_ndBody_Save, METH_VARARGS, NULL},
	 { "ndBody_GetVelocityAtPoint", _wrap_ndBody_GetVelocityAtPoint, METH_VARARGS, NULL},
	 { "ndBody_swigregister", ndBody_swigregister, METH_O, NULL},
	 { "new_ndBodyKinematic", _wrap_new_ndBodyKinematic, METH_VARARGS, NULL},
	 { "delete_ndBodyKinematic", _wrap_delete_ndBodyKinematic, METH_O, NULL},
	 { "ndBodyKinematic_GetScene", _wrap_ndBodyKinematic_GetScene, METH_O, NULL},
	 { "ndBodyKinematic_GetIndex", _wrap_ndBodyKinematic_GetIndex, METH_O, NULL},
	 { "ndBodyKinematic_GetInvMass", _wrap_ndBodyKinematic_GetInvMass, METH_O, NULL},
	 { "ndBodyKinematic_GetInvInertia", _wrap_ndBodyKinematic_GetInvInertia, METH_O, NULL},
	 { "ndBodyKinematic_GetInvInertiaMatrix", _wrap_ndBodyKinematic_GetInvInertiaMatrix, METH_O, NULL},
	 { "ndBodyKinematic_GetGyroAlpha", _wrap_ndBodyKinematic_GetGyroAlpha, METH_O, NULL},
	 { "ndBodyKinematic_GetSleepState", _wrap_ndBodyKinematic_GetSleepState, METH_O, NULL},
	 { "ndBodyKinematic_RestoreSleepState", _wrap_ndBodyKinematic_RestoreSleepState, METH_VARARGS, NULL},
	 { "ndBodyKinematic_SetSleepState", _wrap_ndBodyKinematic_SetSleepState, METH_VARARGS, NULL},
	 { "ndBodyKinematic_GetAutoSleep", _wrap_ndBodyKinematic_GetAutoSleep, METH_O, NULL},
	 { "ndBodyKinematic_SetAutoSleep", _wrap_ndBodyKinematic_SetAutoSleep, METH_VARARGS, NULL},
	 { "ndBodyKinematic_SetDebugMaxAngularIntegrationSteepAndLinearSpeed", _wrap_ndBodyKinematic_SetDebugMaxAngularIntegrationSteepAndLinearSpeed, METH_VARARGS, NULL},
	 { "ndBodyKinematic_GetLinearDamping", _wrap_ndBodyKinematic_GetLinearDamping, METH_O, NULL},
	 { "ndBodyKinematic_SetLinearDamping", _wrap_ndBodyKinematic_SetLinearDamping, METH_VARARGS, NULL},
	 { "ndBodyKinematic_GetAngularDamping", _wrap_ndBodyKinematic_GetAngularDamping, METH_O, NULL},
	 { "ndBodyKinematic_SetAngularDamping", _wrap_ndBodyKinematic_SetAngularDamping, METH_VARARGS, NULL},
	 { "ndBodyKinematic_GetCollisionShape", _wrap_ndBodyKinematic_GetCollisionShape, METH_VARARGS, NULL},
	 { "ndBodyKinematic_SetCollisionShape", _wrap_ndBodyKinematic_SetCollisionShape, METH_VARARGS, NULL},
	 { "ndBodyKinematic_RayCast", _wrap_ndBodyKinematic_RayCast, METH_VARARGS, NULL},
	 { "ndBodyKinematic_CalculateLinearMomentum", _wrap_ndBodyKinematic_CalculateLinearMomentum, METH_O, NULL},
	 { "ndBodyKinematic_CalculateAngularMomentum", _wrap_ndBodyKinematic_CalculateAngularMomentum, METH_O, NULL},
	 { "ndBodyKinematic_TotalEnergy", _wrap_ndBodyKinematic_TotalEnergy, METH_O, NULL},
	 { "ndBodyKinematic_CalculateInertiaMatrix", _wrap_ndBodyKinematic_CalculateInertiaMatrix, METH_O, NULL},
	 { "ndBodyKinematic_CalculateInvInertiaMatrix", _wrap_ndBodyKinematic_CalculateInvInertiaMatrix, METH_O, NULL},
	 { "ndBodyKinematic_UpdateInvInertiaMatrix", _wrap_ndBodyKinematic_UpdateInvInertiaMatrix, METH_O, NULL},
	 { "ndBodyKinematic_IntegrateVelocity", _wrap_ndBodyKinematic_IntegrateVelocity, METH_VARARGS, NULL},
	 { "ndBodyKinematic_Save", _wrap_ndBodyKinematic_Save, METH_VARARGS, NULL},
	 { "ndBodyKinematic_SetMassMatrix", _wrap_ndBodyKinematic_SetMassMatrix, METH_VARARGS, NULL},
	 { "ndBodyKinematic_GetMassMatrix", _wrap_ndBodyKinematic_GetMassMatrix, METH_VARARGS, NULL},
	 { "ndBodyKinematic_FindContact", _wrap_ndBodyKinematic_FindContact, METH_VARARGS, NULL},
	 { "ndBodyKinematic_GetAsBodyKinematic", _wrap_ndBodyKinematic_GetAsBodyKinematic, METH_O, NULL},
	 { "ndBodyKinematic_GetSkeleton", _wrap_ndBodyKinematic_GetSkeleton, METH_O, NULL},
	 { "ndBodyKinematic_SetSkeleton", _wrap_ndBodyKinematic_SetSkeleton, METH_VARARGS, NULL},
	 { "ndBodyKinematic_GetForce", _wrap_ndBodyKinematic_GetForce, METH_O, NULL},
	 { "ndBodyKinematic_GetTorque", _wrap_ndBodyKinematic_GetTorque, METH_O, NULL},
	 { "ndBodyKinematic_SetForce", _wrap_ndBodyKinematic_SetForce, METH_VARARGS, NULL},
	 { "ndBodyKinematic_SetTorque", _wrap_ndBodyKinematic_SetTorque, METH_VARARGS, NULL},
	 { "ndBodyKinematic_SetAccel", _wrap_ndBodyKinematic_SetAccel, METH_VARARGS, NULL},
	 { "ndBodyKinematic_SetAlpha", _wrap_ndBodyKinematic_SetAlpha, METH_VARARGS, NULL},
	 { "ndBodyKinematic_GetJointList", _wrap_ndBodyKinematic_GetJointList, METH_O, NULL},
	 { "ndBodyKinematic_GetContactMap", _wrap_ndBodyKinematic_GetContactMap, METH_VARARGS, NULL},
	 { "ndBodyKinematic_swigregister", ndBodyKinematic_swigregister, METH_O, NULL},
	 { "ndBodyKinematic_swiginit", ndBodyKinematic_swiginit, METH_VARARGS, NULL},
	 { "new_ndBodyTriggerVolume", _wrap_new_ndBodyTriggerVolume, METH_VARARGS, NULL},
	 { "delete_ndBodyTriggerVolume", _wrap_delete_ndBodyTriggerVolume, METH_O, NULL},
	 { "ndBodyTriggerVolume_GetAsBodyTriggerVolume", _wrap_ndBodyTriggerVolume_GetAsBodyTriggerVolume, METH_O, NULL},
	 { "ndBodyTriggerVolume_OnTrigger", _wrap_ndBodyTriggerVolume_OnTrigger, METH_VARARGS, NULL},
	 { "ndBodyTriggerVolume_OnTriggerEnter", _wrap_ndBodyTriggerVolume_OnTriggerEnter, METH_VARARGS, NULL},
	 { "ndBodyTriggerVolume_OnTriggerExit", _wrap_ndBodyTriggerVolume_OnTriggerExit, METH_VARARGS, NULL},
	 { "ndBodyTriggerVolume_Save", _wrap_ndBodyTriggerVolume_Save, METH_VARARGS, NULL},
	 { "ndBodyTriggerVolume_swigregister", ndBodyTriggerVolume_swigregister, METH_O, NULL},
	 { "ndBodyTriggerVolume_swiginit", ndBodyTriggerVolume_swiginit, METH_VARARGS, NULL},
	 { "new_ndBodyPlayerCapsule", _wrap_new_ndBodyPlayerCapsule, METH_VARARGS, NULL},
	 { "delete_ndBodyPlayerCapsule", _wrap_delete_ndBodyPlayerCapsule, METH_O, NULL},
	 { "ndBodyPlayerCapsule_GetAsBodyPlayerCapsule", _wrap_ndBodyPlayerCapsule_GetAsBodyPlayerCapsule, METH_O, NULL},
	 { "ndBodyPlayerCapsule_GetForwardSpeed", _wrap_ndBodyPlayerCapsule_GetForwardSpeed, METH_O, NULL},
	 { "ndBodyPlayerCapsule_SetForwardSpeed", _wrap_ndBodyPlayerCapsule_SetForwardSpeed, METH_VARARGS, NULL},
	 { "ndBodyPlayerCapsule_GetLateralSpeed", _wrap_ndBodyPlayerCapsule_GetLateralSpeed, METH_O, NULL},
	 { "ndBodyPlayerCapsule_SetLateralSpeed", _wrap_ndBodyPlayerCapsule_SetLateralSpeed, METH_VARARGS, NULL},
	 { "ndBodyPlayerCapsule_GetHeadingAngle", _wrap_ndBodyPlayerCapsule_GetHeadingAngle, METH_O, NULL},
	 { "ndBodyPlayerCapsule_SetHeadingAngle", _wrap_ndBodyPlayerCapsule_SetHeadingAngle, METH_VARARGS, NULL},
	 { "ndBodyPlayerCapsule_IsOnFloor", _wrap_ndBodyPlayerCapsule_IsOnFloor, METH_O, NULL},
	 { "ndBodyPlayerCapsule_ApplyInputs", _wrap_ndBodyPlayerCapsule_ApplyInputs, METH_VARARGS, NULL},
	 { "ndBodyPlayerCapsule_ContactFrictionCallback", _wrap_ndBodyPlayerCapsule_ContactFrictionCallback, METH_VARARGS, NULL},
	 { "ndBodyPlayerCapsule_swigregister", ndBodyPlayerCapsule_swigregister, METH_O, NULL},
	 { "ndBodyPlayerCapsule_swiginit", ndBodyPlayerCapsule_swiginit, METH_VARARGS, NULL},
	 { "new_ndBodyNotify", _wrap_new_ndBodyNotify, METH_VARARGS, NULL},
	 { "delete_ndBodyNotify", _wrap_delete_ndBodyNotify, METH_O, NULL},
	 { "ndBodyNotify_GetBody", _wrap_ndBodyNotify_GetBody, METH_VARARGS, NULL},
	 { "ndBodyNotify_GetUserData", _wrap_ndBodyNotify_GetUserData, METH_O, NULL},
	 { "ndBodyNotify_GetGravity", _wrap_ndBodyNotify_GetGravity, METH_O, NULL},
	 { "ndBodyNotify_SetGravity", _wrap_ndBodyNotify_SetGravity, METH_VARARGS, NULL},
	 { "ndBodyNotify_OnTransform", _wrap_ndBodyNotify_OnTransform, METH_VARARGS, NULL},
	 { "ndBodyNotify_Save", _wrap_ndBodyNotify_Save, METH_VARARGS, NULL},
	 { "ndBodyNotify_OnApplyExternalForce", _wrap_ndBodyNotify_OnApplyExternalForce, METH_VARARGS, NULL},
	 { "ndBodyNotify_swigregister", ndBodyNotify_swigregister, METH_O, NULL},
	 { "ndBodyNotify_swiginit", ndBodyNotify_swiginit, METH_VARARGS, NULL},
	 { "new_ndMaterial", _wrap_new_ndMaterial, METH_NOARGS, NULL},
	 { "ndMaterial_m_restitution_set", _wrap_ndMaterial_m_restitution_set, METH_VARARGS, NULL},
	 { "ndMaterial_m_restitution_get", _wrap_ndMaterial_m_restitution_get, METH_O, NULL},
	 { "ndMaterial_m_staticFriction0_set", _wrap_ndMaterial_m_staticFriction0_set, METH_VARARGS, NULL},
	 { "ndMaterial_m_staticFriction0_get", _wrap_ndMaterial_m_staticFriction0_get, METH_O, NULL},
	 { "ndMaterial_m_staticFriction1_set", _wrap_ndMaterial_m_staticFriction1_set, METH_VARARGS, NULL},
	 { "ndMaterial_m_staticFriction1_get", _wrap_ndMaterial_m_staticFriction1_get, METH_O, NULL},
	 { "ndMaterial_m_dynamicFriction0_set", _wrap_ndMaterial_m_dynamicFriction0_set, METH_VARARGS, NULL},
	 { "ndMaterial_m_dynamicFriction0_get", _wrap_ndMaterial_m_dynamicFriction0_get, METH_O, NULL},
	 { "ndMaterial_m_dynamicFriction1_set", _wrap_ndMaterial_m_dynamicFriction1_set, METH_VARARGS, NULL},
	 { "ndMaterial_m_dynamicFriction1_get", _wrap_ndMaterial_m_dynamicFriction1_get, METH_O, NULL},
	 { "ndMaterial_m_softness_set", _wrap_ndMaterial_m_softness_set, METH_VARARGS, NULL},
	 { "ndMaterial_m_softness_get", _wrap_ndMaterial_m_softness_get, METH_O, NULL},
	 { "ndMaterial_m_skinThickness_set", _wrap_ndMaterial_m_skinThickness_set, METH_VARARGS, NULL},
	 { "ndMaterial_m_skinThickness_get", _wrap_ndMaterial_m_skinThickness_get, METH_O, NULL},
	 { "ndMaterial_m_flags_set", _wrap_ndMaterial_m_flags_set, METH_VARARGS, NULL},
	 { "ndMaterial_m_flags_get", _wrap_ndMaterial_m_flags_get, METH_O, NULL},
	 { "ndMaterial_m_userFlags_set", _wrap_ndMaterial_m_userFlags_set, METH_VARARGS, NULL},
	 { "ndMaterial_m_userFlags_get", _wrap_ndMaterial_m_userFlags_get, METH_O, NULL},
	 { "delete_ndMaterial", _wrap_delete_ndMaterial, METH_O, NULL},
	 { "ndMaterial_swigregister", ndMaterial_swigregister, METH_O, NULL},
	 { "ndMaterial_swiginit", ndMaterial_swiginit, METH_VARARGS, NULL},
	 { "new_ndContactNotify", _wrap_new_ndContactNotify, METH_NOARGS, NULL},
	 { "delete_ndContactNotify", _wrap_delete_ndContactNotify, METH_O, NULL},
	 { "ndContactNotify_OnBodyAdded", _wrap_ndContactNotify_OnBodyAdded, METH_VARARGS, NULL},
	 { "ndContactNotify_OnBodyRemoved", _wrap_ndContactNotify_OnBodyRemoved, METH_VARARGS, NULL},
	 { "ndContactNotify_GetMaterial", _wrap_ndContactNotify_GetMaterial, METH_VARARGS, NULL},
	 { "ndContactNotify_OnCompoundSubShapeOverlap", _wrap_ndContactNotify_OnCompoundSubShapeOverlap, METH_VARARGS, NULL},
	 { "ndContactNotify_OnAabbOverlap", _wrap_ndContactNotify_OnAabbOverlap, METH_VARARGS, NULL},
	 { "ndContactNotify_OnContactCallback", _wrap_ndContactNotify_OnContactCallback, METH_VARARGS, NULL},
	 { "ndContactNotify_swigregister", ndContactNotify_swigregister, METH_O, NULL},
	 { "ndContactNotify_swiginit", ndContactNotify_swiginit, METH_VARARGS, NULL},
	 { "delete_ndRayCastNotify", _wrap_delete_ndRayCastNotify, METH_O, NULL},
	 { "ndRayCastNotify_TraceShape", _wrap_ndRayCastNotify_TraceShape, METH_VARARGS, NULL},
	 { "ndRayCastNotify_OnRayPrecastAction", _wrap_ndRayCastNotify_OnRayPrecastAction, METH_VARARGS, NULL},
	 { "ndRayCastNotify_OnRayCastAction", _wrap_ndRayCastNotify_OnRayCastAction, METH_VARARGS, NULL},
	 { "ndRayCastNotify_m_contact_set", _wrap_ndRayCastNotify_m_contact_set, METH_VARARGS, NULL},
	 { "ndRayCastNotify_m_contact_get", _wrap_ndRayCastNotify_m_contact_get, METH_O, NULL},
	 { "ndRayCastNotify_m_param_set", _wrap_ndRayCastNotify_m_param_set, METH_VARARGS, NULL},
	 { "ndRayCastNotify_m_param_get", _wrap_ndRayCastNotify_m_param_get, METH_O, NULL},
	 { "ndRayCastNotify_swigregister", ndRayCastNotify_swigregister, METH_O, NULL},
	 { "new_ndRayCastClosestHitCallback", _wrap_new_ndRayCastClosestHitCallback, METH_NOARGS, NULL},
	 { "ndRayCastClosestHitCallback_OnRayPrecastAction", _wrap_ndRayCastClosestHitCallback_OnRayPrecastAction, METH_VARARGS, NULL},
	 { "ndRayCastClosestHitCallback_OnRayCastAction", _wrap_ndRayCastClosestHitCallback_OnRayCastAction, METH_VARARGS, NULL},
	 { "delete_ndRayCastClosestHitCallback", _wrap_delete_ndRayCastClosestHitCallback, METH_O, NULL},
	 { "ndRayCastClosestHitCallback_swigregister", ndRayCastClosestHitCallback_swigregister, METH_O, NULL},
	 { "ndRayCastClosestHitCallback_swiginit", ndRayCastClosestHitCallback_swiginit, METH_VARARGS, NULL},
	 { "new_ndBodiesInAabbNotify", _wrap_new_ndBodiesInAabbNotify, METH_NOARGS, NULL},
	 { "delete_ndBodiesInAabbNotify", _wrap_delete_ndBodiesInAabbNotify, METH_O, NULL},
	 { "ndBodiesInAabbNotify_OnOverlap", _wrap_ndBodiesInAabbNotify_OnOverlap, METH_VARARGS, NULL},
	 { "ndBodiesInAabbNotify_m_bodyArray_set", _wrap_ndBodiesInAabbNotify_m_bodyArray_set, METH_VARARGS, NULL},
	 { "ndBodiesInAabbNotify_m_bodyArray_get", _wrap_ndBodiesInAabbNotify_m_bodyArray_get, METH_O, NULL},
	 { "ndBodiesInAabbNotify_swigregister", ndBodiesInAabbNotify_swigregister, METH_O, NULL},
	 { "ndBodiesInAabbNotify_swiginit", ndBodiesInAabbNotify_swiginit, METH_VARARGS, NULL},
	 { "new_NewtonWorld", _wrap_new_NewtonWorld, METH_NOARGS, NULL},
	 { "delete_NewtonWorld", _wrap_delete_NewtonWorld, METH_O, NULL},
	 { "NewtonWorld_Update", _wrap_NewtonWorld_Update, METH_VARARGS, NULL},
	 { "NewtonWorld_SetSubSteps", _wrap_NewtonWorld_SetSubSteps, METH_VARARGS, NULL},
	 { "NewtonWorld_SetIterations", _wrap_NewtonWorld_SetIterations, METH_VARARGS, NULL},
	 { "NewtonWorld_SetTimestep", _wrap_NewtonWorld_SetTimestep, METH_VARARGS, NULL},
	 { "NewtonWorld_swigregister", NewtonWorld_swigregister, METH_O, NULL},
	 { "NewtonWorld_swiginit", NewtonWorld_swiginit, METH_VARARGS, NULL},
	 { NULL, NULL, 0, NULL }
};

static PyMethodDef SwigMethods_proxydocs[] = {
	 { NULL, NULL, 0, NULL }
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (BEGIN) -------- */

static void *_p_ndShapeHeightfieldTo_p_ndShapeStaticMesh(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ndShapeStaticMesh *)  ((ndShapeHeightfield *) x));
}
static void *_p_ndShapeConvexHullTo_p_ndShape(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ndShape *) (ndShapeConvex *) ((ndShapeConvexHull *) x));
}
static void *_p_ndShapeHeightfieldTo_p_ndShape(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ndShape *) (ndShapeStaticMesh *) ((ndShapeHeightfield *) x));
}
static void *_p_ndShapeCompoundTo_p_ndShape(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ndShape *)  ((ndShapeCompound *) x));
}
static void *_p_ndShapeCapsuleTo_p_ndShape(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ndShape *) (ndShapeConvex *) ((ndShapeCapsule *) x));
}
static void *_p_ndShapeConvexTo_p_ndShape(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ndShape *)  ((ndShapeConvex *) x));
}
static void *_p_ndShapeCylinderTo_p_ndShape(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ndShape *) (ndShapeConvex *) ((ndShapeCylinder *) x));
}
static void *_p_ndShapeStaticMeshTo_p_ndShape(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ndShape *)  ((ndShapeStaticMesh *) x));
}
static void *_p_ndShapeChamferCylinderTo_p_ndShape(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ndShape *) (ndShapeConvex *) ((ndShapeChamferCylinder *) x));
}
static void *_p_ndShapeSphereTo_p_ndShape(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ndShape *) (ndShapeConvex *) ((ndShapeSphere *) x));
}
static void *_p_dQuaternionTo_p_dVector(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((dVector *)  ((dQuaternion *) x));
}
static void *_p_ndShapeConvexHullTo_p_ndShapeConvex(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ndShapeConvex *)  ((ndShapeConvexHull *) x));
}
static void *_p_ndShapeCapsuleTo_p_ndShapeConvex(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ndShapeConvex *)  ((ndShapeCapsule *) x));
}
static void *_p_ndShapeCylinderTo_p_ndShapeConvex(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ndShapeConvex *)  ((ndShapeCylinder *) x));
}
static void *_p_ndShapeChamferCylinderTo_p_ndShapeConvex(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ndShapeConvex *)  ((ndShapeChamferCylinder *) x));
}
static void *_p_ndShapeSphereTo_p_ndShapeConvex(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ndShapeConvex *)  ((ndShapeSphere *) x));
}
static void *_p_ndRayCastClosestHitCallbackTo_p_ndRayCastNotify(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ndRayCastNotify *)  ((ndRayCastClosestHitCallback *) x));
}
static void *_p_ndBodyKinematicTo_p_ndBody(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ndBody *)  ((ndBodyKinematic *) x));
}
static void *_p_ndBodyTriggerVolumeTo_p_ndBody(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ndBody *) (ndBodyKinematic *) ((ndBodyTriggerVolume *) x));
}
static void *_p_ndBodyPlayerCapsuleTo_p_ndBody(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ndBody *) (ndBodyKinematic *) ((ndBodyPlayerCapsule *) x));
}
static void *_p_ndBodyTriggerVolumeTo_p_ndBodyKinematic(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ndBodyKinematic *)  ((ndBodyTriggerVolume *) x));
}
static void *_p_ndBodyPlayerCapsuleTo_p_ndBodyKinematic(void *x, int *SWIGUNUSEDPARM(newmemory)) {
    return (void *)((ndBodyKinematic *)  ((ndBodyPlayerCapsule *) x));
}
static swig_type_info _swigt__p_NewtonWorld = {"_p_NewtonWorld", "NewtonWorld *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p___m128 = {"_p___m128", "__m128 *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p___m128d = {"_p___m128d", "__m128d *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p___m128i = {"_p___m128i", "__m128i *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_char = {"_p_char", "char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_dArrayT_ndBody_p_t = {"_p_dArrayT_ndBody_p_t", "dArray< ndBody * > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_dArrayT_short_t = {"_p_dArrayT_short_t", "dArray< short > *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_dBigVector = {"_p_dBigVector", "dBigVector *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_dFastRay = {"_p_dFastRay", "dFastRay *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_dLoadSaveBase__dLoadDescriptor = {"_p_dLoadSaveBase__dLoadDescriptor", "dLoadSaveBase::dLoadDescriptor *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_dLoadSaveBase__dSaveDescriptor = {"_p_dLoadSaveBase__dSaveDescriptor", "dLoadSaveBase::dSaveDescriptor *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_dMatrix = {"_p_dMatrix", "dMatrix *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_dPlane = {"_p_dPlane", "dPlane *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_dPolygonSoupBuilder = {"_p_dPolygonSoupBuilder", "dPolygonSoupBuilder *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_dQuaternion = {"_p_dQuaternion", "dQuaternion *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_dVector = {"_p_dVector", "dVector *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_double = {"_p_double", "double *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_float = {"_p_float", "float *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_int = {"_p_int", "int *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_long_long = {"_p_long_long", "long long *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndBodiesInAabbNotify = {"_p_ndBodiesInAabbNotify", "ndBodiesInAabbNotify *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndBody = {"_p_ndBody", "ndBody *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndBodyDynamic = {"_p_ndBodyDynamic", "ndBodyDynamic *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndBodyKinematic = {"_p_ndBodyKinematic", "ndBodyKinematic *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndBodyKinematic__ndContactMap = {"_p_ndBodyKinematic__ndContactMap", "ndBodyKinematic::ndContactMap *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndBodyNotify = {"_p_ndBodyNotify", "ndBodyNotify *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndBodyParticleSet = {"_p_ndBodyParticleSet", "ndBodyParticleSet *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndBodyPlayerCapsule = {"_p_ndBodyPlayerCapsule", "ndBodyPlayerCapsule *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndBodySentinel = {"_p_ndBodySentinel", "ndBodySentinel *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndBodySphFluid = {"_p_ndBodySphFluid", "ndBodySphFluid *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndBodyTriggerVolume = {"_p_ndBodyTriggerVolume", "ndBodyTriggerVolume *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndBoxInfo = {"_p_ndBoxInfo", "ndBoxInfo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndCapsuleInfo = {"_p_ndCapsuleInfo", "ndCapsuleInfo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndChamferCylinderInfo = {"_p_ndChamferCylinderInfo", "ndChamferCylinderInfo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndCollisionBvhInfo = {"_p_ndCollisionBvhInfo", "ndCollisionBvhInfo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndConeInfo = {"_p_ndConeInfo", "ndConeInfo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndContact = {"_p_ndContact", "ndContact *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndContactNotify = {"_p_ndContactNotify", "ndContactNotify *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndContactPoint = {"_p_ndContactPoint", "ndContactPoint *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndContactSolver = {"_p_ndContactSolver", "ndContactSolver *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndConvexHullInfo = {"_p_ndConvexHullInfo", "ndConvexHullInfo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndCoumpoundInfo = {"_p_ndCoumpoundInfo", "ndCoumpoundInfo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndCylinderInfo = {"_p_ndCylinderInfo", "ndCylinderInfo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndHeighfieldInfo = {"_p_ndHeighfieldInfo", "ndHeighfieldInfo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndJointList = {"_p_ndJointList", "ndJointList *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndMaterial = {"_p_ndMaterial", "ndMaterial *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndPointInfo = {"_p_ndPointInfo", "ndPointInfo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndPolygonMeshDesc = {"_p_ndPolygonMeshDesc", "ndPolygonMeshDesc *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndPolygonMeshDesc__ndMesh = {"_p_ndPolygonMeshDesc__ndMesh", "ndPolygonMeshDesc::ndMesh *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndProceduralInfoInfo = {"_p_ndProceduralInfoInfo", "ndProceduralInfoInfo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndRayCastClosestHitCallback = {"_p_ndRayCastClosestHitCallback", "ndRayCastClosestHitCallback *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndRayCastNotify = {"_p_ndRayCastNotify", "ndRayCastNotify *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndScene = {"_p_ndScene", "ndScene *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndShape = {"_p_ndShape", "ndShape *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndShapeBox = {"_p_ndShapeBox", "ndShapeBox *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndShapeCapsule = {"_p_ndShapeCapsule", "ndShapeCapsule *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndShapeChamferCylinder = {"_p_ndShapeChamferCylinder", "ndShapeChamferCylinder *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndShapeCompound = {"_p_ndShapeCompound", "ndShapeCompound *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndShapeCompound__ndTreeArray = {"_p_ndShapeCompound__ndTreeArray", "ndShapeCompound::ndTreeArray *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndShapeCompound__ndTreeArray__dNode = {"_p_ndShapeCompound__ndTreeArray__dNode", "ndShapeCompound::ndTreeArray::dNode *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndShapeCone = {"_p_ndShapeCone", "ndShapeCone *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndShapeConvex = {"_p_ndShapeConvex", "ndShapeConvex *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndShapeConvexHull = {"_p_ndShapeConvexHull", "ndShapeConvexHull *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndShapeConvexPolygon = {"_p_ndShapeConvexPolygon", "ndShapeConvexPolygon *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndShapeCylinder = {"_p_ndShapeCylinder", "ndShapeCylinder *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndShapeDebugCallback = {"_p_ndShapeDebugCallback", "ndShapeDebugCallback *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndShapeDebugCallback__ndEdgeType = {"_p_ndShapeDebugCallback__ndEdgeType", "enum ndShapeDebugCallback::ndEdgeType *|ndShapeDebugCallback::ndEdgeType *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndShapeHeightfield = {"_p_ndShapeHeightfield", "ndShapeHeightfield *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndShapeInfo = {"_p_ndShapeInfo", "ndShapeInfo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndShapeInstance = {"_p_ndShapeInstance", "ndShapeInstance *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndShapeLoaderCache = {"_p_ndShapeLoaderCache", "ndShapeLoaderCache *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndShapeMaterial = {"_p_ndShapeMaterial", "ndShapeMaterial *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndShapeMaterial__dExtraData = {"_p_ndShapeMaterial__dExtraData", "ndShapeMaterial::dExtraData *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndShapeMaterial__nData = {"_p_ndShapeMaterial__nData", "ndShapeMaterial::nData *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndShapeNull = {"_p_ndShapeNull", "ndShapeNull *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndShapePoint = {"_p_ndShapePoint", "ndShapePoint *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndShapeSphere = {"_p_ndShapeSphere", "ndShapeSphere *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndShapeStaticMesh = {"_p_ndShapeStaticMesh", "ndShapeStaticMesh *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndShapeStaticProceduralMesh = {"_p_ndShapeStaticProceduralMesh", "ndShapeStaticProceduralMesh *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndShapeStatic_bvh = {"_p_ndShapeStatic_bvh", "ndShapeStatic_bvh *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndSkeletonContainer = {"_p_ndSkeletonContainer", "ndSkeletonContainer *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_ndSphereInfo = {"_p_ndSphereInfo", "ndSphereInfo *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_nd__TiXmlNode = {"_p_nd__TiXmlNode", "nd::TiXmlNode *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_short = {"_p_short", "short *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_signed_char = {"_p_signed_char", "signed char *", 0, 0, (void*)0, 0};
static swig_type_info _swigt__p_void = {"_p_void", "void *", 0, 0, (void*)0, 0};

static swig_type_info *swig_type_initial[] = {
  &_swigt__p_NewtonWorld,
  &_swigt__p___m128,
  &_swigt__p___m128d,
  &_swigt__p___m128i,
  &_swigt__p_char,
  &_swigt__p_dArrayT_ndBody_p_t,
  &_swigt__p_dArrayT_short_t,
  &_swigt__p_dBigVector,
  &_swigt__p_dFastRay,
  &_swigt__p_dLoadSaveBase__dLoadDescriptor,
  &_swigt__p_dLoadSaveBase__dSaveDescriptor,
  &_swigt__p_dMatrix,
  &_swigt__p_dPlane,
  &_swigt__p_dPolygonSoupBuilder,
  &_swigt__p_dQuaternion,
  &_swigt__p_dVector,
  &_swigt__p_double,
  &_swigt__p_float,
  &_swigt__p_int,
  &_swigt__p_long_long,
  &_swigt__p_ndBodiesInAabbNotify,
  &_swigt__p_ndBody,
  &_swigt__p_ndBodyDynamic,
  &_swigt__p_ndBodyKinematic,
  &_swigt__p_ndBodyKinematic__ndContactMap,
  &_swigt__p_ndBodyNotify,
  &_swigt__p_ndBodyParticleSet,
  &_swigt__p_ndBodyPlayerCapsule,
  &_swigt__p_ndBodySentinel,
  &_swigt__p_ndBodySphFluid,
  &_swigt__p_ndBodyTriggerVolume,
  &_swigt__p_ndBoxInfo,
  &_swigt__p_ndCapsuleInfo,
  &_swigt__p_ndChamferCylinderInfo,
  &_swigt__p_ndCollisionBvhInfo,
  &_swigt__p_ndConeInfo,
  &_swigt__p_ndContact,
  &_swigt__p_ndContactNotify,
  &_swigt__p_ndContactPoint,
  &_swigt__p_ndContactSolver,
  &_swigt__p_ndConvexHullInfo,
  &_swigt__p_ndCoumpoundInfo,
  &_swigt__p_ndCylinderInfo,
  &_swigt__p_ndHeighfieldInfo,
  &_swigt__p_ndJointList,
  &_swigt__p_ndMaterial,
  &_swigt__p_ndPointInfo,
  &_swigt__p_ndPolygonMeshDesc,
  &_swigt__p_ndPolygonMeshDesc__ndMesh,
  &_swigt__p_ndProceduralInfoInfo,
  &_swigt__p_ndRayCastClosestHitCallback,
  &_swigt__p_ndRayCastNotify,
  &_swigt__p_ndScene,
  &_swigt__p_ndShape,
  &_swigt__p_ndShapeBox,
  &_swigt__p_ndShapeCapsule,
  &_swigt__p_ndShapeChamferCylinder,
  &_swigt__p_ndShapeCompound,
  &_swigt__p_ndShapeCompound__ndTreeArray,
  &_swigt__p_ndShapeCompound__ndTreeArray__dNode,
  &_swigt__p_ndShapeCone,
  &_swigt__p_ndShapeConvex,
  &_swigt__p_ndShapeConvexHull,
  &_swigt__p_ndShapeConvexPolygon,
  &_swigt__p_ndShapeCylinder,
  &_swigt__p_ndShapeDebugCallback,
  &_swigt__p_ndShapeDebugCallback__ndEdgeType,
  &_swigt__p_ndShapeHeightfield,
  &_swigt__p_ndShapeInfo,
  &_swigt__p_ndShapeInstance,
  &_swigt__p_ndShapeLoaderCache,
  &_swigt__p_ndShapeMaterial,
  &_swigt__p_ndShapeMaterial__dExtraData,
  &_swigt__p_ndShapeMaterial__nData,
  &_swigt__p_ndShapeNull,
  &_swigt__p_ndShapePoint,
  &_swigt__p_ndShapeSphere,
  &_swigt__p_ndShapeStaticMesh,
  &_swigt__p_ndShapeStaticProceduralMesh,
  &_swigt__p_ndShapeStatic_bvh,
  &_swigt__p_ndSkeletonContainer,
  &_swigt__p_ndSphereInfo,
  &_swigt__p_nd__TiXmlNode,
  &_swigt__p_short,
  &_swigt__p_signed_char,
  &_swigt__p_void,
};

static swig_cast_info _swigc__p_NewtonWorld[] = {  {&_swigt__p_NewtonWorld, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p___m128[] = {  {&_swigt__p___m128, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p___m128d[] = {  {&_swigt__p___m128d, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p___m128i[] = {  {&_swigt__p___m128i, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_char[] = {  {&_swigt__p_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_dArrayT_ndBody_p_t[] = {  {&_swigt__p_dArrayT_ndBody_p_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_dArrayT_short_t[] = {  {&_swigt__p_dArrayT_short_t, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_dBigVector[] = {  {&_swigt__p_dBigVector, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_dFastRay[] = {  {&_swigt__p_dFastRay, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_dLoadSaveBase__dLoadDescriptor[] = {  {&_swigt__p_dLoadSaveBase__dLoadDescriptor, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_dLoadSaveBase__dSaveDescriptor[] = {  {&_swigt__p_dLoadSaveBase__dSaveDescriptor, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_dMatrix[] = {  {&_swigt__p_dMatrix, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_dPlane[] = {  {&_swigt__p_dPlane, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_dPolygonSoupBuilder[] = {  {&_swigt__p_dPolygonSoupBuilder, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_dQuaternion[] = {  {&_swigt__p_dQuaternion, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_dVector[] = {  {&_swigt__p_dVector, 0, 0, 0},  {&_swigt__p_dQuaternion, _p_dQuaternionTo_p_dVector, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_double[] = {  {&_swigt__p_double, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_float[] = {  {&_swigt__p_float, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_int[] = {  {&_swigt__p_int, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_long_long[] = {  {&_swigt__p_long_long, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndBodiesInAabbNotify[] = {  {&_swigt__p_ndBodiesInAabbNotify, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndBody[] = {  {&_swigt__p_ndBodyKinematic, _p_ndBodyKinematicTo_p_ndBody, 0, 0},  {&_swigt__p_ndBodyTriggerVolume, _p_ndBodyTriggerVolumeTo_p_ndBody, 0, 0},  {&_swigt__p_ndBodyPlayerCapsule, _p_ndBodyPlayerCapsuleTo_p_ndBody, 0, 0},  {&_swigt__p_ndBody, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndBodyDynamic[] = {  {&_swigt__p_ndBodyDynamic, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndBodyKinematic[] = {  {&_swigt__p_ndBodyKinematic, 0, 0, 0},  {&_swigt__p_ndBodyTriggerVolume, _p_ndBodyTriggerVolumeTo_p_ndBodyKinematic, 0, 0},  {&_swigt__p_ndBodyPlayerCapsule, _p_ndBodyPlayerCapsuleTo_p_ndBodyKinematic, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndBodyKinematic__ndContactMap[] = {  {&_swigt__p_ndBodyKinematic__ndContactMap, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndBodyNotify[] = {  {&_swigt__p_ndBodyNotify, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndBodyParticleSet[] = {  {&_swigt__p_ndBodyParticleSet, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndBodyPlayerCapsule[] = {  {&_swigt__p_ndBodyPlayerCapsule, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndBodySentinel[] = {  {&_swigt__p_ndBodySentinel, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndBodySphFluid[] = {  {&_swigt__p_ndBodySphFluid, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndBodyTriggerVolume[] = {  {&_swigt__p_ndBodyTriggerVolume, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndBoxInfo[] = {  {&_swigt__p_ndBoxInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndCapsuleInfo[] = {  {&_swigt__p_ndCapsuleInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndChamferCylinderInfo[] = {  {&_swigt__p_ndChamferCylinderInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndCollisionBvhInfo[] = {  {&_swigt__p_ndCollisionBvhInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndConeInfo[] = {  {&_swigt__p_ndConeInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndContact[] = {  {&_swigt__p_ndContact, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndContactNotify[] = {  {&_swigt__p_ndContactNotify, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndContactPoint[] = {  {&_swigt__p_ndContactPoint, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndContactSolver[] = {  {&_swigt__p_ndContactSolver, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndConvexHullInfo[] = {  {&_swigt__p_ndConvexHullInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndCoumpoundInfo[] = {  {&_swigt__p_ndCoumpoundInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndCylinderInfo[] = {  {&_swigt__p_ndCylinderInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndHeighfieldInfo[] = {  {&_swigt__p_ndHeighfieldInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndJointList[] = {  {&_swigt__p_ndJointList, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndMaterial[] = {  {&_swigt__p_ndMaterial, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndPointInfo[] = {  {&_swigt__p_ndPointInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndPolygonMeshDesc[] = {  {&_swigt__p_ndPolygonMeshDesc, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndPolygonMeshDesc__ndMesh[] = {  {&_swigt__p_ndPolygonMeshDesc__ndMesh, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndProceduralInfoInfo[] = {  {&_swigt__p_ndProceduralInfoInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndRayCastClosestHitCallback[] = {  {&_swigt__p_ndRayCastClosestHitCallback, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndRayCastNotify[] = {  {&_swigt__p_ndRayCastNotify, 0, 0, 0},  {&_swigt__p_ndRayCastClosestHitCallback, _p_ndRayCastClosestHitCallbackTo_p_ndRayCastNotify, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndScene[] = {  {&_swigt__p_ndScene, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndShape[] = {  {&_swigt__p_ndShapeConvexHull, _p_ndShapeConvexHullTo_p_ndShape, 0, 0},  {&_swigt__p_ndShapeHeightfield, _p_ndShapeHeightfieldTo_p_ndShape, 0, 0},  {&_swigt__p_ndShapeCompound, _p_ndShapeCompoundTo_p_ndShape, 0, 0},  {&_swigt__p_ndShapeCapsule, _p_ndShapeCapsuleTo_p_ndShape, 0, 0},  {&_swigt__p_ndShape, 0, 0, 0},  {&_swigt__p_ndShapeConvex, _p_ndShapeConvexTo_p_ndShape, 0, 0},  {&_swigt__p_ndShapeCylinder, _p_ndShapeCylinderTo_p_ndShape, 0, 0},  {&_swigt__p_ndShapeChamferCylinder, _p_ndShapeChamferCylinderTo_p_ndShape, 0, 0},  {&_swigt__p_ndShapeStaticMesh, _p_ndShapeStaticMeshTo_p_ndShape, 0, 0},  {&_swigt__p_ndShapeSphere, _p_ndShapeSphereTo_p_ndShape, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndShapeBox[] = {  {&_swigt__p_ndShapeBox, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndShapeCapsule[] = {  {&_swigt__p_ndShapeCapsule, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndShapeChamferCylinder[] = {  {&_swigt__p_ndShapeChamferCylinder, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndShapeCompound[] = {  {&_swigt__p_ndShapeCompound, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndShapeCompound__ndTreeArray[] = {  {&_swigt__p_ndShapeCompound__ndTreeArray, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndShapeCompound__ndTreeArray__dNode[] = {  {&_swigt__p_ndShapeCompound__ndTreeArray__dNode, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndShapeCone[] = {  {&_swigt__p_ndShapeCone, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndShapeConvex[] = {  {&_swigt__p_ndShapeConvexHull, _p_ndShapeConvexHullTo_p_ndShapeConvex, 0, 0},  {&_swigt__p_ndShapeCapsule, _p_ndShapeCapsuleTo_p_ndShapeConvex, 0, 0},  {&_swigt__p_ndShapeConvex, 0, 0, 0},  {&_swigt__p_ndShapeCylinder, _p_ndShapeCylinderTo_p_ndShapeConvex, 0, 0},  {&_swigt__p_ndShapeChamferCylinder, _p_ndShapeChamferCylinderTo_p_ndShapeConvex, 0, 0},  {&_swigt__p_ndShapeSphere, _p_ndShapeSphereTo_p_ndShapeConvex, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndShapeConvexHull[] = {  {&_swigt__p_ndShapeConvexHull, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndShapeConvexPolygon[] = {  {&_swigt__p_ndShapeConvexPolygon, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndShapeCylinder[] = {  {&_swigt__p_ndShapeCylinder, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndShapeDebugCallback[] = {  {&_swigt__p_ndShapeDebugCallback, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndShapeDebugCallback__ndEdgeType[] = {  {&_swigt__p_ndShapeDebugCallback__ndEdgeType, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndShapeHeightfield[] = {  {&_swigt__p_ndShapeHeightfield, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndShapeInfo[] = {  {&_swigt__p_ndShapeInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndShapeInstance[] = {  {&_swigt__p_ndShapeInstance, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndShapeLoaderCache[] = {  {&_swigt__p_ndShapeLoaderCache, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndShapeMaterial[] = {  {&_swigt__p_ndShapeMaterial, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndShapeMaterial__dExtraData[] = {  {&_swigt__p_ndShapeMaterial__dExtraData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndShapeMaterial__nData[] = {  {&_swigt__p_ndShapeMaterial__nData, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndShapeNull[] = {  {&_swigt__p_ndShapeNull, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndShapePoint[] = {  {&_swigt__p_ndShapePoint, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndShapeSphere[] = {  {&_swigt__p_ndShapeSphere, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndShapeStaticMesh[] = {  {&_swigt__p_ndShapeHeightfield, _p_ndShapeHeightfieldTo_p_ndShapeStaticMesh, 0, 0},  {&_swigt__p_ndShapeStaticMesh, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndShapeStaticProceduralMesh[] = {  {&_swigt__p_ndShapeStaticProceduralMesh, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndShapeStatic_bvh[] = {  {&_swigt__p_ndShapeStatic_bvh, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndSkeletonContainer[] = {  {&_swigt__p_ndSkeletonContainer, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_ndSphereInfo[] = {  {&_swigt__p_ndSphereInfo, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_nd__TiXmlNode[] = {  {&_swigt__p_nd__TiXmlNode, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_short[] = {  {&_swigt__p_short, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_signed_char[] = {  {&_swigt__p_signed_char, 0, 0, 0},{0, 0, 0, 0}};
static swig_cast_info _swigc__p_void[] = {  {&_swigt__p_void, 0, 0, 0},{0, 0, 0, 0}};

static swig_cast_info *swig_cast_initial[] = {
  _swigc__p_NewtonWorld,
  _swigc__p___m128,
  _swigc__p___m128d,
  _swigc__p___m128i,
  _swigc__p_char,
  _swigc__p_dArrayT_ndBody_p_t,
  _swigc__p_dArrayT_short_t,
  _swigc__p_dBigVector,
  _swigc__p_dFastRay,
  _swigc__p_dLoadSaveBase__dLoadDescriptor,
  _swigc__p_dLoadSaveBase__dSaveDescriptor,
  _swigc__p_dMatrix,
  _swigc__p_dPlane,
  _swigc__p_dPolygonSoupBuilder,
  _swigc__p_dQuaternion,
  _swigc__p_dVector,
  _swigc__p_double,
  _swigc__p_float,
  _swigc__p_int,
  _swigc__p_long_long,
  _swigc__p_ndBodiesInAabbNotify,
  _swigc__p_ndBody,
  _swigc__p_ndBodyDynamic,
  _swigc__p_ndBodyKinematic,
  _swigc__p_ndBodyKinematic__ndContactMap,
  _swigc__p_ndBodyNotify,
  _swigc__p_ndBodyParticleSet,
  _swigc__p_ndBodyPlayerCapsule,
  _swigc__p_ndBodySentinel,
  _swigc__p_ndBodySphFluid,
  _swigc__p_ndBodyTriggerVolume,
  _swigc__p_ndBoxInfo,
  _swigc__p_ndCapsuleInfo,
  _swigc__p_ndChamferCylinderInfo,
  _swigc__p_ndCollisionBvhInfo,
  _swigc__p_ndConeInfo,
  _swigc__p_ndContact,
  _swigc__p_ndContactNotify,
  _swigc__p_ndContactPoint,
  _swigc__p_ndContactSolver,
  _swigc__p_ndConvexHullInfo,
  _swigc__p_ndCoumpoundInfo,
  _swigc__p_ndCylinderInfo,
  _swigc__p_ndHeighfieldInfo,
  _swigc__p_ndJointList,
  _swigc__p_ndMaterial,
  _swigc__p_ndPointInfo,
  _swigc__p_ndPolygonMeshDesc,
  _swigc__p_ndPolygonMeshDesc__ndMesh,
  _swigc__p_ndProceduralInfoInfo,
  _swigc__p_ndRayCastClosestHitCallback,
  _swigc__p_ndRayCastNotify,
  _swigc__p_ndScene,
  _swigc__p_ndShape,
  _swigc__p_ndShapeBox,
  _swigc__p_ndShapeCapsule,
  _swigc__p_ndShapeChamferCylinder,
  _swigc__p_ndShapeCompound,
  _swigc__p_ndShapeCompound__ndTreeArray,
  _swigc__p_ndShapeCompound__ndTreeArray__dNode,
  _swigc__p_ndShapeCone,
  _swigc__p_ndShapeConvex,
  _swigc__p_ndShapeConvexHull,
  _swigc__p_ndShapeConvexPolygon,
  _swigc__p_ndShapeCylinder,
  _swigc__p_ndShapeDebugCallback,
  _swigc__p_ndShapeDebugCallback__ndEdgeType,
  _swigc__p_ndShapeHeightfield,
  _swigc__p_ndShapeInfo,
  _swigc__p_ndShapeInstance,
  _swigc__p_ndShapeLoaderCache,
  _swigc__p_ndShapeMaterial,
  _swigc__p_ndShapeMaterial__dExtraData,
  _swigc__p_ndShapeMaterial__nData,
  _swigc__p_ndShapeNull,
  _swigc__p_ndShapePoint,
  _swigc__p_ndShapeSphere,
  _swigc__p_ndShapeStaticMesh,
  _swigc__p_ndShapeStaticProceduralMesh,
  _swigc__p_ndShapeStatic_bvh,
  _swigc__p_ndSkeletonContainer,
  _swigc__p_ndSphereInfo,
  _swigc__p_nd__TiXmlNode,
  _swigc__p_short,
  _swigc__p_signed_char,
  _swigc__p_void,
};


/* -------- TYPE CONVERSION AND EQUIVALENCE RULES (END) -------- */

static swig_const_info swig_const_table[] = {
{0, 0, 0, 0.0, 0, 0}};

#ifdef __cplusplus
}
#endif
/* -----------------------------------------------------------------------------
 * Type initialization:
 * This problem is tough by the requirement that no dynamic
 * memory is used. Also, since swig_type_info structures store pointers to
 * swig_cast_info structures and swig_cast_info structures store pointers back
 * to swig_type_info structures, we need some lookup code at initialization.
 * The idea is that swig generates all the structures that are needed.
 * The runtime then collects these partially filled structures.
 * The SWIG_InitializeModule function takes these initial arrays out of
 * swig_module, and does all the lookup, filling in the swig_module.types
 * array with the correct data and linking the correct swig_cast_info
 * structures together.
 *
 * The generated swig_type_info structures are assigned statically to an initial
 * array. We just loop through that array, and handle each type individually.
 * First we lookup if this type has been already loaded, and if so, use the
 * loaded structure instead of the generated one. Then we have to fill in the
 * cast linked list. The cast data is initially stored in something like a
 * two-dimensional array. Each row corresponds to a type (there are the same
 * number of rows as there are in the swig_type_initial array). Each entry in
 * a column is one of the swig_cast_info structures for that type.
 * The cast_initial array is actually an array of arrays, because each row has
 * a variable number of columns. So to actually build the cast linked list,
 * we find the array of casts associated with the type, and loop through it
 * adding the casts to the list. The one last trick we need to do is making
 * sure the type pointer in the swig_cast_info struct is correct.
 *
 * First off, we lookup the cast->type name to see if it is already loaded.
 * There are three cases to handle:
 *  1) If the cast->type has already been loaded AND the type we are adding
 *     casting info to has not been loaded (it is in this module), THEN we
 *     replace the cast->type pointer with the type pointer that has already
 *     been loaded.
 *  2) If BOTH types (the one we are adding casting info to, and the
 *     cast->type) are loaded, THEN the cast info has already been loaded by
 *     the previous module so we just ignore it.
 *  3) Finally, if cast->type has not already been loaded, then we add that
 *     swig_cast_info to the linked list (because the cast->type) pointer will
 *     be correct.
 * ----------------------------------------------------------------------------- */

#ifdef __cplusplus
extern "C" {
#if 0
} /* c-mode */
#endif
#endif

#if 0
#define SWIGRUNTIME_DEBUG
#endif


SWIGRUNTIME void
SWIG_InitializeModule(void *clientdata) {
  size_t i;
  swig_module_info *module_head, *iter;
  int init;
  
  /* check to see if the circular list has been setup, if not, set it up */
  if (swig_module.next==0) {
    /* Initialize the swig_module */
    swig_module.type_initial = swig_type_initial;
    swig_module.cast_initial = swig_cast_initial;
    swig_module.next = &swig_module;
    init = 1;
  } else {
    init = 0;
  }
  
  /* Try and load any already created modules */
  module_head = SWIG_GetModule(clientdata);
  if (!module_head) {
    /* This is the first module loaded for this interpreter */
    /* so set the swig module into the interpreter */
    SWIG_SetModule(clientdata, &swig_module);
  } else {
    /* the interpreter has loaded a SWIG module, but has it loaded this one? */
    iter=module_head;
    do {
      if (iter==&swig_module) {
        /* Our module is already in the list, so there's nothing more to do. */
        return;
      }
      iter=iter->next;
    } while (iter!= module_head);
    
    /* otherwise we must add our module into the list */
    swig_module.next = module_head->next;
    module_head->next = &swig_module;
  }
  
  /* When multiple interpreters are used, a module could have already been initialized in
       a different interpreter, but not yet have a pointer in this interpreter.
       In this case, we do not want to continue adding types... everything should be
       set up already */
  if (init == 0) return;
  
  /* Now work on filling in swig_module.types */
#ifdef SWIGRUNTIME_DEBUG
  printf("SWIG_InitializeModule: size %lu\n", (unsigned long)swig_module.size);
#endif
  for (i = 0; i < swig_module.size; ++i) {
    swig_type_info *type = 0;
    swig_type_info *ret;
    swig_cast_info *cast;
    
#ifdef SWIGRUNTIME_DEBUG
    printf("SWIG_InitializeModule: type %lu %s\n", (unsigned long)i, swig_module.type_initial[i]->name);
#endif
    
    /* if there is another module already loaded */
    if (swig_module.next != &swig_module) {
      type = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, swig_module.type_initial[i]->name);
    }
    if (type) {
      /* Overwrite clientdata field */
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: found type %s\n", type->name);
#endif
      if (swig_module.type_initial[i]->clientdata) {
        type->clientdata = swig_module.type_initial[i]->clientdata;
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: found and overwrite type %s \n", type->name);
#endif
      }
    } else {
      type = swig_module.type_initial[i];
    }
    
    /* Insert casting types */
    cast = swig_module.cast_initial[i];
    while (cast->type) {
      /* Don't need to add information already in the list */
      ret = 0;
#ifdef SWIGRUNTIME_DEBUG
      printf("SWIG_InitializeModule: look cast %s\n", cast->type->name);
#endif
      if (swig_module.next != &swig_module) {
        ret = SWIG_MangledTypeQueryModule(swig_module.next, &swig_module, cast->type->name);
#ifdef SWIGRUNTIME_DEBUG
        if (ret) printf("SWIG_InitializeModule: found cast %s\n", ret->name);
#endif
      }
      if (ret) {
        if (type == swig_module.type_initial[i]) {
#ifdef SWIGRUNTIME_DEBUG
          printf("SWIG_InitializeModule: skip old type %s\n", ret->name);
#endif
          cast->type = ret;
          ret = 0;
        } else {
          /* Check for casting already in the list */
          swig_cast_info *ocast = SWIG_TypeCheck(ret->name, type);
#ifdef SWIGRUNTIME_DEBUG
          if (ocast) printf("SWIG_InitializeModule: skip old cast %s\n", ret->name);
#endif
          if (!ocast) ret = 0;
        }
      }
      
      if (!ret) {
#ifdef SWIGRUNTIME_DEBUG
        printf("SWIG_InitializeModule: adding cast %s\n", cast->type->name);
#endif
        if (type->cast) {
          type->cast->prev = cast;
          cast->next = type->cast;
        }
        type->cast = cast;
      }
      cast++;
    }
    /* Set entry in modules->types array equal to the type */
    swig_module.types[i] = type;
  }
  swig_module.types[i] = 0;
  
#ifdef SWIGRUNTIME_DEBUG
  printf("**** SWIG_InitializeModule: Cast List ******\n");
  for (i = 0; i < swig_module.size; ++i) {
    int j = 0;
    swig_cast_info *cast = swig_module.cast_initial[i];
    printf("SWIG_InitializeModule: type %lu %s\n", (unsigned long)i, swig_module.type_initial[i]->name);
    while (cast->type) {
      printf("SWIG_InitializeModule: cast type %s\n", cast->type->name);
      cast++;
      ++j;
    }
    printf("---- Total casts: %d\n",j);
  }
  printf("**** SWIG_InitializeModule: Cast List ******\n");
#endif
}

/* This function will propagate the clientdata field of type to
* any new swig_type_info structures that have been added into the list
* of equivalent types.  It is like calling
* SWIG_TypeClientData(type, clientdata) a second time.
*/
SWIGRUNTIME void
SWIG_PropagateClientData(void) {
  size_t i;
  swig_cast_info *equiv;
  static int init_run = 0;
  
  if (init_run) return;
  init_run = 1;
  
  for (i = 0; i < swig_module.size; i++) {
    if (swig_module.types[i]->clientdata) {
      equiv = swig_module.types[i]->cast;
      while (equiv) {
        if (!equiv->converter) {
          if (equiv->type && !equiv->type->clientdata)
          SWIG_TypeClientData(equiv->type, swig_module.types[i]->clientdata);
        }
        equiv = equiv->next;
      }
    }
  }
}

#ifdef __cplusplus
#if 0
{
  /* c-mode */
#endif
}
#endif



#ifdef __cplusplus
extern "C" {
#endif
  
  /* Python-specific SWIG API */
#define SWIG_newvarlink()                             SWIG_Python_newvarlink()
#define SWIG_addvarlink(p, name, get_attr, set_attr)  SWIG_Python_addvarlink(p, name, get_attr, set_attr)
#define SWIG_InstallConstants(d, constants)           SWIG_Python_InstallConstants(d, constants)
  
  /* -----------------------------------------------------------------------------
   * global variable support code.
   * ----------------------------------------------------------------------------- */
  
  typedef struct swig_globalvar {
    char       *name;                  /* Name of global variable */
    PyObject *(*get_attr)(void);       /* Return the current value */
    int       (*set_attr)(PyObject *); /* Set the value */
    struct swig_globalvar *next;
  } swig_globalvar;
  
  typedef struct swig_varlinkobject {
    PyObject_HEAD
    swig_globalvar *vars;
  } swig_varlinkobject;
  
  SWIGINTERN PyObject *
  swig_varlink_repr(swig_varlinkobject *SWIGUNUSEDPARM(v)) {
#if PY_VERSION_HEX >= 0x03000000
    return PyUnicode_InternFromString("<Swig global variables>");
#else
    return PyString_FromString("<Swig global variables>");
#endif
  }
  
  SWIGINTERN PyObject *
  swig_varlink_str(swig_varlinkobject *v) {
#if PY_VERSION_HEX >= 0x03000000
    PyObject *str = PyUnicode_InternFromString("(");
    PyObject *tail;
    PyObject *joined;
    swig_globalvar *var;
    for (var = v->vars; var; var=var->next) {
      tail = PyUnicode_FromString(var->name);
      joined = PyUnicode_Concat(str, tail);
      Py_DecRef(str);
      Py_DecRef(tail);
      str = joined;
      if (var->next) {
        tail = PyUnicode_InternFromString(", ");
        joined = PyUnicode_Concat(str, tail);
        Py_DecRef(str);
        Py_DecRef(tail);
        str = joined;
      }
    }
    tail = PyUnicode_InternFromString(")");
    joined = PyUnicode_Concat(str, tail);
    Py_DecRef(str);
    Py_DecRef(tail);
    str = joined;
#else
    PyObject *str = PyString_FromString("(");
    swig_globalvar *var;
    for (var = v->vars; var; var=var->next) {
      PyString_ConcatAndDel(&str,PyString_FromString(var->name));
      if (var->next) PyString_ConcatAndDel(&str,PyString_FromString(", "));
    }
    PyString_ConcatAndDel(&str,PyString_FromString(")"));
#endif
    return str;
  }
  
  SWIGINTERN void
  swig_varlink_dealloc(swig_varlinkobject *v) {
    swig_globalvar *var = v->vars;
    while (var) {
      swig_globalvar *n = var->next;
      free(var->name);
      free(var);
      var = n;
    }
  }
  
  SWIGINTERN PyObject *
  swig_varlink_getattr(swig_varlinkobject *v, char *n) {
    PyObject *res = NULL;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->get_attr)();
        break;
      }
      var = var->next;
    }
    if (res == NULL && !PyErr_Occurred()) {
      PyErr_Format(PyExc_AttributeError, "Unknown C global variable '%s'", n);
    }
    return res;
  }
  
  SWIGINTERN int
  swig_varlink_setattr(swig_varlinkobject *v, char *n, PyObject *p) {
    int res = 1;
    swig_globalvar *var = v->vars;
    while (var) {
      if (strcmp(var->name,n) == 0) {
        res = (*var->set_attr)(p);
        break;
      }
      var = var->next;
    }
    if (res == 1 && !PyErr_Occurred()) {
      PyErr_Format(PyExc_AttributeError, "Unknown C global variable '%s'", n);
    }
    return res;
  }
  
  SWIGINTERN PyTypeObject*
  swig_varlink_type(void) {
    static char varlink__doc__[] = "Swig var link object";
    static PyTypeObject varlink_type;
    static int type_init = 0;
    if (!type_init) {
      const PyTypeObject tmp = {
#if PY_VERSION_HEX >= 0x03000000
        PyVarObject_HEAD_INIT(NULL, 0)
#else
        PyObject_HEAD_INIT(NULL)
        0,                                  /* ob_size */
#endif
        "swigvarlink",                      /* tp_name */
        sizeof(swig_varlinkobject),         /* tp_basicsize */
        0,                                  /* tp_itemsize */
        (destructor) swig_varlink_dealloc,  /* tp_dealloc */
        0,                                  /* tp_print */
        (getattrfunc) swig_varlink_getattr, /* tp_getattr */
        (setattrfunc) swig_varlink_setattr, /* tp_setattr */
        0,                                  /* tp_compare */
        (reprfunc) swig_varlink_repr,       /* tp_repr */
        0,                                  /* tp_as_number */
        0,                                  /* tp_as_sequence */
        0,                                  /* tp_as_mapping */
        0,                                  /* tp_hash */
        0,                                  /* tp_call */
        (reprfunc) swig_varlink_str,        /* tp_str */
        0,                                  /* tp_getattro */
        0,                                  /* tp_setattro */
        0,                                  /* tp_as_buffer */
        0,                                  /* tp_flags */
        varlink__doc__,                     /* tp_doc */
        0,                                  /* tp_traverse */
        0,                                  /* tp_clear */
        0,                                  /* tp_richcompare */
        0,                                  /* tp_weaklistoffset */
        0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, /* tp_iter -> tp_weaklist */
        0,                                  /* tp_del */
        0,                                  /* tp_version_tag */
#if PY_VERSION_HEX >= 0x03040000
        0,                                  /* tp_finalize */
#endif
#if PY_VERSION_HEX >= 0x03080000
        0,                                  /* tp_vectorcall */
#endif
#if (PY_VERSION_HEX >= 0x03080000) && (PY_VERSION_HEX < 0x03090000)
        0,                                  /* tp_print */
#endif
#ifdef COUNT_ALLOCS
        0,                                  /* tp_allocs */
        0,                                  /* tp_frees */
        0,                                  /* tp_maxalloc */
        0,                                  /* tp_prev */
        0                                   /* tp_next */
#endif
      };
      varlink_type = tmp;
      type_init = 1;
      if (PyType_Ready(&varlink_type) < 0)
      return NULL;
    }
    return &varlink_type;
  }
  
  /* Create a variable linking object for use later */
  SWIGINTERN PyObject *
  SWIG_Python_newvarlink(void) {
    swig_varlinkobject *result = PyObject_NEW(swig_varlinkobject, swig_varlink_type());
    if (result) {
      result->vars = 0;
    }
    return ((PyObject*) result);
  }
  
  SWIGINTERN void 
  SWIG_Python_addvarlink(PyObject *p, const char *name, PyObject *(*get_attr)(void), int (*set_attr)(PyObject *p)) {
    swig_varlinkobject *v = (swig_varlinkobject *) p;
    swig_globalvar *gv = (swig_globalvar *) malloc(sizeof(swig_globalvar));
    if (gv) {
      size_t size = strlen(name)+1;
      gv->name = (char *)malloc(size);
      if (gv->name) {
        memcpy(gv->name, name, size);
        gv->get_attr = get_attr;
        gv->set_attr = set_attr;
        gv->next = v->vars;
      }
    }
    v->vars = gv;
  }
  
  SWIGINTERN PyObject *
  SWIG_globals(void) {
    static PyObject *globals = 0;
    if (!globals) {
      globals = SWIG_newvarlink();
    }
    return globals;
  }
  
  /* -----------------------------------------------------------------------------
   * constants/methods manipulation
   * ----------------------------------------------------------------------------- */
  
  /* Install Constants */
  SWIGINTERN void
  SWIG_Python_InstallConstants(PyObject *d, swig_const_info constants[]) {
    PyObject *obj = 0;
    size_t i;
    for (i = 0; constants[i].type; ++i) {
      switch(constants[i].type) {
      case SWIG_PY_POINTER:
        obj = SWIG_InternalNewPointerObj(constants[i].pvalue, *(constants[i]).ptype,0);
        break;
      case SWIG_PY_BINARY:
        obj = SWIG_NewPackedObj(constants[i].pvalue, constants[i].lvalue, *(constants[i].ptype));
        break;
      default:
        obj = 0;
        break;
      }
      if (obj) {
        PyDict_SetItemString(d, constants[i].name, obj);
        Py_DECREF(obj);
      }
    }
  }
  
  /* -----------------------------------------------------------------------------*/
  /* Fix SwigMethods to carry the callback ptrs when needed */
  /* -----------------------------------------------------------------------------*/
  
  SWIGINTERN void
  SWIG_Python_FixMethods(PyMethodDef *methods,
    swig_const_info *const_table,
    swig_type_info **types,
    swig_type_info **types_initial) {
    size_t i;
    for (i = 0; methods[i].ml_name; ++i) {
      const char *c = methods[i].ml_doc;
      if (!c) continue;
      c = strstr(c, "swig_ptr: ");
      if (c) {
        int j;
        swig_const_info *ci = 0;
        const char *name = c + 10;
        for (j = 0; const_table[j].type; ++j) {
          if (strncmp(const_table[j].name, name, 
              strlen(const_table[j].name)) == 0) {
            ci = &(const_table[j]);
            break;
          }
        }
        if (ci) {
          void *ptr = (ci->type == SWIG_PY_POINTER) ? ci->pvalue : 0;
          if (ptr) {
            size_t shift = (ci->ptype) - types;
            swig_type_info *ty = types_initial[shift];
            size_t ldoc = (c - methods[i].ml_doc);
            size_t lptr = strlen(ty->name)+2*sizeof(void*)+2;
            char *ndoc = (char*)malloc(ldoc + lptr + 10);
            if (ndoc) {
              char *buff = ndoc;
              memcpy(buff, methods[i].ml_doc, ldoc);
              buff += ldoc;
              memcpy(buff, "swig_ptr: ", 10);
              buff += 10;
              SWIG_PackVoidPtr(buff, ptr, ty->name, lptr);
              methods[i].ml_doc = ndoc;
            }
          }
        }
      }
    }
  } 
  
  /* -----------------------------------------------------------------------------
   * Method creation and docstring support functions
   * ----------------------------------------------------------------------------- */
  
  /* -----------------------------------------------------------------------------
   * Function to find the method definition with the correct docstring for the
   * proxy module as opposed to the low-level API
   * ----------------------------------------------------------------------------- */
  
  SWIGINTERN PyMethodDef *SWIG_PythonGetProxyDoc(const char *name) {
    /* Find the function in the modified method table */
    size_t offset = 0;
    int found = 0;
    while (SwigMethods_proxydocs[offset].ml_meth != NULL) {
      if (strcmp(SwigMethods_proxydocs[offset].ml_name, name) == 0) {
        found = 1;
        break;
      }
      offset++;
    }
    /* Use the copy with the modified docstring if available */
    return found ? &SwigMethods_proxydocs[offset] : NULL;
  }
  
  /* -----------------------------------------------------------------------------
   * Wrapper of PyInstanceMethod_New() used in Python 3
   * It is exported to the generated module, used for -fastproxy
   * ----------------------------------------------------------------------------- */
  
  SWIGINTERN PyObject *SWIG_PyInstanceMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *func) {
    if (PyCFunction_Check(func)) {
      PyCFunctionObject *funcobj = (PyCFunctionObject *)func;
      PyMethodDef *ml = SWIG_PythonGetProxyDoc(funcobj->m_ml->ml_name);
      if (ml)
      func = PyCFunction_NewEx(ml, funcobj->m_self, funcobj->m_module);
    }
#if PY_VERSION_HEX >= 0x03000000
    return PyInstanceMethod_New(func);
#else
    return PyMethod_New(func, NULL, NULL);
#endif
  }
  
  /* -----------------------------------------------------------------------------
   * Wrapper of PyStaticMethod_New()
   * It is exported to the generated module, used for -fastproxy
   * ----------------------------------------------------------------------------- */
  
  SWIGINTERN PyObject *SWIG_PyStaticMethod_New(PyObject *SWIGUNUSEDPARM(self), PyObject *func) {
    if (PyCFunction_Check(func)) {
      PyCFunctionObject *funcobj = (PyCFunctionObject *)func;
      PyMethodDef *ml = SWIG_PythonGetProxyDoc(funcobj->m_ml->ml_name);
      if (ml)
      func = PyCFunction_NewEx(ml, funcobj->m_self, funcobj->m_module);
    }
    return PyStaticMethod_New(func);
  }
  
#ifdef __cplusplus
}
#endif

/* -----------------------------------------------------------------------------*
 *  Partial Init method
 * -----------------------------------------------------------------------------*/

#ifdef __cplusplus
extern "C"
#endif

SWIGEXPORT 
#if PY_VERSION_HEX >= 0x03000000
PyObject*
#else
void
#endif
SWIG_init(void) {
  PyObject *m, *d, *md, *globals;
  
#if PY_VERSION_HEX >= 0x03000000
  static struct PyModuleDef SWIG_module = {
    PyModuleDef_HEAD_INIT,
    SWIG_name,
    NULL,
    -1,
    SwigMethods,
    NULL,
    NULL,
    NULL,
    NULL
  };
#endif
  
#if defined(SWIGPYTHON_BUILTIN)
  static SwigPyClientData SwigPyObject_clientdata = {
    0, 0, 0, 0, 0, 0, 0
  };
  static PyGetSetDef this_getset_def = {
    (char *)"this", &SwigPyBuiltin_ThisClosure, NULL, NULL, NULL
  };
  static SwigPyGetSet thisown_getset_closure = {
    SwigPyObject_own,
    SwigPyObject_own
  };
  static PyGetSetDef thisown_getset_def = {
    (char *)"thisown", SwigPyBuiltin_GetterClosure, SwigPyBuiltin_SetterClosure, NULL, &thisown_getset_closure
  };
  PyTypeObject *builtin_pytype;
  int builtin_base_count;
  swig_type_info *builtin_basetype;
  PyObject *tuple;
  PyGetSetDescrObject *static_getset;
  PyTypeObject *metatype;
  PyTypeObject *swigpyobject;
  SwigPyClientData *cd;
  PyObject *public_interface, *public_symbol;
  PyObject *this_descr;
  PyObject *thisown_descr;
  PyObject *self = 0;
  int i;
  
  (void)builtin_pytype;
  (void)builtin_base_count;
  (void)builtin_basetype;
  (void)tuple;
  (void)static_getset;
  (void)self;
  
  /* Metaclass is used to implement static member variables */
  metatype = SwigPyObjectType();
  assert(metatype);
#endif
  
  (void)globals;
  
  /* Create singletons now to avoid potential deadlocks with multi-threaded usage after module initialization */
  SWIG_This();
  SWIG_Python_TypeCache();
  SwigPyPacked_type();
#ifndef SWIGPYTHON_BUILTIN
  SwigPyObject_type();
#endif
  
  /* Fix SwigMethods to carry the callback ptrs when needed */
  SWIG_Python_FixMethods(SwigMethods, swig_const_table, swig_types, swig_type_initial);
  
#if PY_VERSION_HEX >= 0x03000000
  m = PyModule_Create(&SWIG_module);
#else
  m = Py_InitModule(SWIG_name, SwigMethods);
#endif
  
  md = d = PyModule_GetDict(m);
  (void)md;
  
  SWIG_InitializeModule(0);
  
#ifdef SWIGPYTHON_BUILTIN
  swigpyobject = SwigPyObject_TypeOnce();
  
  SwigPyObject_stype = SWIG_MangledTypeQuery("_p_SwigPyObject");
  assert(SwigPyObject_stype);
  cd = (SwigPyClientData*) SwigPyObject_stype->clientdata;
  if (!cd) {
    SwigPyObject_stype->clientdata = &SwigPyObject_clientdata;
    SwigPyObject_clientdata.pytype = swigpyobject;
  } else if (swigpyobject->tp_basicsize != cd->pytype->tp_basicsize) {
    PyErr_SetString(PyExc_RuntimeError, "Import error: attempted to load two incompatible swig-generated modules.");
# if PY_VERSION_HEX >= 0x03000000
    return NULL;
# else
    return;
# endif
  }
  
  /* All objects have a 'this' attribute */
  this_descr = PyDescr_NewGetSet(SwigPyObject_type(), &this_getset_def);
  (void)this_descr;
  
  /* All objects have a 'thisown' attribute */
  thisown_descr = PyDescr_NewGetSet(SwigPyObject_type(), &thisown_getset_def);
  (void)thisown_descr;
  
  public_interface = PyList_New(0);
  public_symbol = 0;
  (void)public_symbol;
  
  PyDict_SetItemString(md, "__all__", public_interface);
  Py_DECREF(public_interface);
  for (i = 0; SwigMethods[i].ml_name != NULL; ++i)
  SwigPyBuiltin_AddPublicSymbol(public_interface, SwigMethods[i].ml_name);
  for (i = 0; swig_const_table[i].name != 0; ++i)
  SwigPyBuiltin_AddPublicSymbol(public_interface, swig_const_table[i].name);
#endif
  
  SWIG_InstallConstants(d,swig_const_table);
  
  globals = SWIG_globals();
  if (!globals) {
    PyErr_SetString(PyExc_TypeError, "Failure to create SWIG globals.");
#if PY_VERSION_HEX >= 0x03000000
    return NULL;
#else
    return;
#endif
  }
  PyDict_SetItemString(md, "cvar", globals);
  Py_DECREF(globals);
  SWIG_addvarlink(globals, "dVector_m_zero", Swig_var_dVector_m_zero_get, Swig_var_dVector_m_zero_set);
  SWIG_addvarlink(globals, "dVector_m_one", Swig_var_dVector_m_one_get, Swig_var_dVector_m_one_set);
  SWIG_addvarlink(globals, "dVector_m_wOne", Swig_var_dVector_m_wOne_get, Swig_var_dVector_m_wOne_set);
  SWIG_addvarlink(globals, "dVector_m_two", Swig_var_dVector_m_two_get, Swig_var_dVector_m_two_set);
  SWIG_addvarlink(globals, "dVector_m_half", Swig_var_dVector_m_half_get, Swig_var_dVector_m_half_set);
  SWIG_addvarlink(globals, "dVector_m_three", Swig_var_dVector_m_three_get, Swig_var_dVector_m_three_set);
  SWIG_addvarlink(globals, "dVector_m_negOne", Swig_var_dVector_m_negOne_get, Swig_var_dVector_m_negOne_set);
  SWIG_addvarlink(globals, "dVector_m_xMask", Swig_var_dVector_m_xMask_get, Swig_var_dVector_m_xMask_set);
  SWIG_addvarlink(globals, "dVector_m_yMask", Swig_var_dVector_m_yMask_get, Swig_var_dVector_m_yMask_set);
  SWIG_addvarlink(globals, "dVector_m_zMask", Swig_var_dVector_m_zMask_get, Swig_var_dVector_m_zMask_set);
  SWIG_addvarlink(globals, "dVector_m_wMask", Swig_var_dVector_m_wMask_get, Swig_var_dVector_m_wMask_set);
  SWIG_addvarlink(globals, "dVector_m_xyzwMask", Swig_var_dVector_m_xyzwMask_get, Swig_var_dVector_m_xyzwMask_set);
  SWIG_addvarlink(globals, "dVector_m_epsilon", Swig_var_dVector_m_epsilon_get, Swig_var_dVector_m_epsilon_set);
  SWIG_addvarlink(globals, "dVector_m_signMask", Swig_var_dVector_m_signMask_get, Swig_var_dVector_m_signMask_set);
  SWIG_addvarlink(globals, "dVector_m_triplexMask", Swig_var_dVector_m_triplexMask_get, Swig_var_dVector_m_triplexMask_set);
  SWIG_addvarlink(globals, "dBigVector_m_zero", Swig_var_dBigVector_m_zero_get, Swig_var_dBigVector_m_zero_set);
  SWIG_addvarlink(globals, "dBigVector_m_one", Swig_var_dBigVector_m_one_get, Swig_var_dBigVector_m_one_set);
  SWIG_addvarlink(globals, "dBigVector_m_wOne", Swig_var_dBigVector_m_wOne_get, Swig_var_dBigVector_m_wOne_set);
  SWIG_addvarlink(globals, "dBigVector_m_two", Swig_var_dBigVector_m_two_get, Swig_var_dBigVector_m_two_set);
  SWIG_addvarlink(globals, "dBigVector_m_half", Swig_var_dBigVector_m_half_get, Swig_var_dBigVector_m_half_set);
  SWIG_addvarlink(globals, "dBigVector_m_three", Swig_var_dBigVector_m_three_get, Swig_var_dBigVector_m_three_set);
  SWIG_addvarlink(globals, "dBigVector_m_negOne", Swig_var_dBigVector_m_negOne_get, Swig_var_dBigVector_m_negOne_set);
  SWIG_addvarlink(globals, "dBigVector_m_xMask", Swig_var_dBigVector_m_xMask_get, Swig_var_dBigVector_m_xMask_set);
  SWIG_addvarlink(globals, "dBigVector_m_yMask", Swig_var_dBigVector_m_yMask_get, Swig_var_dBigVector_m_yMask_set);
  SWIG_addvarlink(globals, "dBigVector_m_zMask", Swig_var_dBigVector_m_zMask_get, Swig_var_dBigVector_m_zMask_set);
  SWIG_addvarlink(globals, "dBigVector_m_wMask", Swig_var_dBigVector_m_wMask_get, Swig_var_dBigVector_m_wMask_set);
  SWIG_addvarlink(globals, "dBigVector_m_xyzwMask", Swig_var_dBigVector_m_xyzwMask_get, Swig_var_dBigVector_m_xyzwMask_set);
  SWIG_addvarlink(globals, "dBigVector_m_epsilon", Swig_var_dBigVector_m_epsilon_get, Swig_var_dBigVector_m_epsilon_set);
  SWIG_addvarlink(globals, "dBigVector_m_signMask", Swig_var_dBigVector_m_signMask_get, Swig_var_dBigVector_m_signMask_set);
  SWIG_addvarlink(globals, "dBigVector_m_triplexMask", Swig_var_dBigVector_m_triplexMask_get, Swig_var_dBigVector_m_triplexMask_set);
  SWIG_Python_SetConstant(d, "m_box",SWIG_From_int(static_cast< int >(m_box)));
  SWIG_Python_SetConstant(d, "m_cone",SWIG_From_int(static_cast< int >(m_cone)));
  SWIG_Python_SetConstant(d, "m_sphere",SWIG_From_int(static_cast< int >(m_sphere)));
  SWIG_Python_SetConstant(d, "m_capsule",SWIG_From_int(static_cast< int >(m_capsule)));
  SWIG_Python_SetConstant(d, "m_cylinder",SWIG_From_int(static_cast< int >(m_cylinder)));
  SWIG_Python_SetConstant(d, "m_chamferCylinder",SWIG_From_int(static_cast< int >(m_chamferCylinder)));
  SWIG_Python_SetConstant(d, "m_convexHull",SWIG_From_int(static_cast< int >(m_convexHull)));
  SWIG_Python_SetConstant(d, "m_compound",SWIG_From_int(static_cast< int >(m_compound)));
  SWIG_Python_SetConstant(d, "m_staticMesh",SWIG_From_int(static_cast< int >(m_staticMesh)));
  SWIG_Python_SetConstant(d, "m_heightField",SWIG_From_int(static_cast< int >(m_heightField)));
  SWIG_Python_SetConstant(d, "m_staticProceduralMesh",SWIG_From_int(static_cast< int >(m_staticProceduralMesh)));
  SWIG_Python_SetConstant(d, "m_nullCollision",SWIG_From_int(static_cast< int >(m_nullCollision)));
  SWIG_Python_SetConstant(d, "m_pointCollision",SWIG_From_int(static_cast< int >(m_pointCollision)));
  SWIG_Python_SetConstant(d, "m_polygonCollision",SWIG_From_int(static_cast< int >(m_polygonCollision)));
  SWIG_Python_SetConstant(d, "m_boundingBoxHierachy",SWIG_From_int(static_cast< int >(m_boundingBoxHierachy)));
  SWIG_Python_SetConstant(d, "D_CONE_SEGMENTS",SWIG_From_int(static_cast< int >(12)));
  SWIG_Python_SetConstant(d, "D_CLIP_MAX_COUNT",SWIG_From_int(static_cast< int >(512)));
  SWIG_Python_SetConstant(d, "D_CLIP_MAX_POINT_COUNT",SWIG_From_int(static_cast< int >(64)));
  SWIG_Python_SetConstant(d, "D_SPHERE_VERTEX_COUNT",SWIG_From_int(static_cast< int >(18)));
  SWIG_Python_SetConstant(d, "D_COMPOUND_STACK_DEPTH",SWIG_From_int(static_cast< int >(256)));
  SWIG_Python_SetConstant(d, "ndShapeCompound_m_leaf",SWIG_From_int(static_cast< int >(ndShapeCompound::m_leaf)));
  SWIG_Python_SetConstant(d, "ndShapeCompound_m_node",SWIG_From_int(static_cast< int >(ndShapeCompound::m_node)));
  SWIG_Python_SetConstant(d, "D_TAPED_CYLINDER_SEGMENTS",SWIG_From_int(static_cast< int >(12)));
  SWIG_Python_SetConstant(d, "D_MAX_COLLIDING_FACES",SWIG_From_int(static_cast< int >(512)));
  SWIG_Python_SetConstant(d, "D_MAX_COLLIDING_INDICES",SWIG_From_int(static_cast< int >((512*(4*2+3)))));
  SWIG_Python_SetConstant(d, "ndShapeHeightfield_m_normalDiagonals",SWIG_From_int(static_cast< int >(ndShapeHeightfield::m_normalDiagonals)));
  SWIG_Python_SetConstant(d, "ndShapeHeightfield_m_invertedDiagonals",SWIG_From_int(static_cast< int >(ndShapeHeightfield::m_invertedDiagonals)));
  SWIG_Python_SetConstant(d, "DG_CHAMFERCYLINDER_SLICES",SWIG_From_int(static_cast< int >(4)));
  SWIG_Python_SetConstant(d, "DG_CHAMFERCYLINDER_BRAKES",SWIG_From_int(static_cast< int >(8)));
  SWIG_Python_SetConstant(d, "DG_MAX_CHAMFERCYLINDER_DIR_COUNT",SWIG_From_int(static_cast< int >(8)));
  SWIG_Python_SetConstant(d, "ndShapeDebugCallback_m_shared",SWIG_From_int(static_cast< int >(ndShapeDebugCallback::m_shared)));
  SWIG_Python_SetConstant(d, "ndShapeDebugCallback_m_open",SWIG_From_int(static_cast< int >(ndShapeDebugCallback::m_open)));
  SWIG_Python_SetConstant(d, "ndShapeInstance_m_unit",SWIG_From_int(static_cast< int >(ndShapeInstance::m_unit)));
  SWIG_Python_SetConstant(d, "ndShapeInstance_m_uniform",SWIG_From_int(static_cast< int >(ndShapeInstance::m_uniform)));
  SWIG_Python_SetConstant(d, "ndShapeInstance_m_nonUniform",SWIG_From_int(static_cast< int >(ndShapeInstance::m_nonUniform)));
  SWIG_Python_SetConstant(d, "ndShapeInstance_m_global",SWIG_From_int(static_cast< int >(ndShapeInstance::m_global)));
  SWIG_Python_SetConstant(d, "NOMINAL_FPS",SWIG_From_double(static_cast< double >(120.0)));
#if PY_VERSION_HEX >= 0x03000000
  return m;
#else
  return;
#endif
}

